[tool.poetry]
name = "opsduty-python"
version = "0.2.4"
description = "Command-line utility for interfacing with OpsDuty."
authors = ["Eirik Martiniussen Sylliaas <eirik@opsduty.io>"]
license = "MIT"
readme = "README.md"
packages = [{include = "opsduty_python", from = "src"}]

[tool.poetry.scripts]
opsduty = 'opsduty_python.cli.__main__:opsduty'

[tool.poetry.dependencies]
opsduty-client = "^0.0.7"
python = ">=3.11,<3.14"
click = ">=8.1.7,<9"
pydantic = ">=2.8,<3"
pydantic-yaml = ">=1.3.0,<2"
requests = ">=2.32,<3"
structlog = "*"
urllib3 = ">=2.2.2,<3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-mock = "^3.14.0"
pytest-responses = "^0.5.1"
ruff = "^0.12.1"
mypy = "^1.15.0"
types-requests = "^2.32.0.20241016"
types-python-dateutil = "^2.9.0.20241206"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "migrations",
    "node_modules",
    "public"
]

[tool.ruff.lint]
select = [
    # Regular flake8 rules
    "C", "E", "F", "W",
    # flake8-bugbear rules
    "B",
    # Import sorting rules (isort replacement)
    "I",
    # Pylint rules
    "PLC", "PLE", "PLR", "PLW",
    # Do not include small Ruff rules (including useless noqa) yet
    # "RUF",
]
ignore = [
    # Too many arguments in function definition
    "PLR0913",
    # Disable magic value comparison. They're perfectly valid in tests and quite a few
    # other places in the codebase. It would just be annoying to refactor.
    "PLR2004",
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.mypy]
plugins = []
strict = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests", "src"]
