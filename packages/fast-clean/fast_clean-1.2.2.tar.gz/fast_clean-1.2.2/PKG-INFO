Metadata-Version: 2.4
Name: fast-clean
Version: 1.2.2
Summary: FastAPI Clean Architecture implementation
Author-email: Luferov Victor <luferovvs@yandex.ru>, Orlov Artem <squakrazv@yandex.ru>, Kashapov Rustam <hardtechnik91@gmail.com>
Requires-Python: >=3.13
Description-Content-Type: text/markdown
Requires-Dist: aiofiles>=24.1.0
Requires-Dist: aiokafka>=0.12.0
Requires-Dist: aioprometheus>=23.12.0
Requires-Dist: alembic>=1.16.2
Requires-Dist: cryptography>=44.0.1
Requires-Dist: dishka>=1.6.0
Requires-Dist: fastapi>=0.115.8
Requires-Dist: fastapi-cache2[redis]>=0.2.2
Requires-Dist: faststream>=0.5.34
Requires-Dist: flatten-dict>=0.4.2
Requires-Dist: miniopy-async>=1.21.1
Requires-Dist: overrides>=7.7.0
Requires-Dist: psycopg[binary]>=3.2.4
Requires-Dist: pydantic>=2.10.6
Requires-Dist: pydantic-settings>=2.8.0
Requires-Dist: pyyaml>=6.0.2
Requires-Dist: sentry-sdk>=2.32.0
Requires-Dist: snakecase>=1.0.1
Requires-Dist: sqlalchemy-utils>=0.41.2
Requires-Dist: sqlalchemy[asyncio]>=2.0.38
Requires-Dist: stringcase>=1.2.0
Requires-Dist: typer>=0.15.1

# FastClean

FastAPI clean architecture implementation


## Contribution

```
git clone git@github.com:Luferov/fast-clean.git
uv sync
uv run pre-commit install
```

Python —è–≤–ª—è–µ—Ç—Å—è –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–º —è–∑—ã–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π, —á—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É—Å–∫–æ—Ä—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ–±–ª–µ–≥—á–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–æ–¥–∞. –ï–≥–æ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –∏ –ª–∞–∫–æ–Ω–∏—á–Ω–æ—Å—Ç—å –ø–æ–∑–≤–æ–ª—è—é—Ç –∫–æ–º–∞–Ω–¥–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±—ã—Å—Ç—Ä–æ –≤–≤–æ–¥–∏—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –æ—à–∏–±–∫–∏ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞. –≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º, –≥–¥–µ —è—Å–Ω–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç—å –∫–æ–¥–∞ –∏–º–µ—é—Ç –ø–µ—Ä–≤–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
## –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏–π
–í –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞–∫–µ—Ç–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–≤–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö:
1. [uv](https://docs.astral.sh/uv/)¬†- —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π

–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–∫–µ—Ç–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π¬†[pip](https://pip.pypa.io/)¬†–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ –ø—Ä–æ–µ–∫—Ç —è–≤–ª—è–µ—Ç—Å—è —Ç–æ—á–µ—á–Ω—ã–º, "–æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–º" –∏ –Ω–µ –ø–ª–∞–Ω–∏—Ä–µ—Ç—Å—è –∫ —Ä–∞–∑–≤–∏—Ç–∏—é –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

–û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±—ç–∫–µ–Ω–¥ —Å–µ—Ä–≤–∏—Å–æ–≤ –º–æ–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ –¥–≤–∞ —É—Å–ª–æ–≤–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–∞: –¥–ª—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ü—Ä–µ–∂–¥–µ, —á–µ–º –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏–µ–º, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –Ω–∏–∂–µ:
1. –û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:
    - [FastAPI](https://fastapi.tiangolo.com/)
    - [Pydantic](https://docs.pydantic.dev/latest/)
    - [taskiq](https://taskiq-python.github.io)
    - [SqlAlchemy](https://www.sqlalchemy.org/)
    - [sqlmodel](https://sqlmodel.tiangolo.com)
    - [Alembic](https://alembic.sqlalchemy.org/en/latest/)
    - [Httpx](https://www.python-httpx.org/)
    - [Python-Jwt](https://pyjwt.readthedocs.io/en/stable/)
    - [Prefect](https://www.prefect.io/)
    - [FastStream](https://faststream.airt.ai/latest)
    - [uvicorn](https://www.uvicorn.org/)
    - [Dishka](https://dishka.readthedocs.io/en/stable/)
    - [apscheduler](https://github.com/agronholm/apscheduler)
    - [sentry](https://docs.sentry.io/platforms/python/)
2. –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:
    - [pytest](https://docs.pytest.org/en/stable/)
    - [pytest-coverage](https://github.com/pytest-dev/pytest-cov)
    - [ruff](https://github.com/astral-sh/ruff)
    - [mypy](https://www.mypy-lang.org/)
    - [pre-commit](https://pre-commit.com/)
    - [black](https://black.readthedocs.io/en/stable/)
    - [ipykernel](https://ipython.readthedocs.io/en/)

## –¢–∏–ø–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–µ—Ä–≤–∏—Å–æ–≤

–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ç–∏–ø–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–µ—Ä–≤–∏—Å–æ–≤, –∞ —Ç–∞–∫–∂–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–∏—Ä—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ —Ñ–∞–π–ª–æ–≤. –í—ã—Ö–æ–¥ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–æ–∑–≤–æ–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ç–µ—Ö–ª–∏–¥–∞ –∏–ª–∏ –ª–∏–¥–µ—Ä–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –ª–∏–¥–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
```
üìÅ {{ project name }}           // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
| üìÅ .vscode                    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ vscode
| |- tasks.json                 // –§–∞–π–ª —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è TaskExprorer
| |- launch.json                // –§–∞–π–ª —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Å –¥–µ–±–∞–≥–≥–µ—Ä–æ–º
| |- settings.json              // –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ vscode
| üìÅ migrations                 // –§–∞–π–ª —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö alembic
| | üìÅ versions
| | | 2024_09_11_comment.py     // –§–∞–π–ª —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
| | __init__.py
| | env.py                      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –Ω–∞–∫–∞—Ç—ã–≤–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
| | script.py.mako              // –®–∞–±–ª–æ–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π
| | utils.py                    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π
| üìÅ {{ service name }}         // –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: portal, users, processing ...
| | üìÅ apps
| | | üìÅ healthcheck            // –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ healthcheck
| | | | __init__.py             // –ò—Å–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª—è healthcheck
| | | | router.py               // –†–æ—É—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è healthcheck
| | | | schemas.py              // DTO —Å—Ö–µ–º—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è healthcheck
| | | üìÅ users                  // –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
| | | | üìÅ repositories         // –°–ª–æ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è users
| | | | | __init__.py           // –≠–∫—Å–ø–æ—Ä—Ç—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
| | | | | users.py              // –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
| | | | | company.py            // –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫–æ–º–ø–∞–Ω–∏–π
| | | | üìÅ services             // –°–µ—Ä–≤–∏—Å–Ω—ã–π —Å–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è users
| | | | | __init__.py           // –≠–∫—Å–ø–æ—Ä—Ç—ã —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è users
| | | | | users.py              // –°–µ—Ä–≤–∏—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
| | | | | company.py            // –°–µ—Ä–≤–∏—Å –∫–æ–º–ø–∞–Ω–∏–π
| | | | üìÅ use_cases            // –°–ª–æ–π UseCase (UserStory)
| | | | | __init__.py           // –≠–∫—Å–ø–æ—Ä—Ç—ã UseCases
| | | | | user_list.py          // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
| | | | | create_user.py        // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
| | | | | update_user.py        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
| | | | | delete_user.py        // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
| | | | üìÅ schemas              // –°—Ö–µ–º—ã –ø—Ä–æ–µ–∫—Ç–∞
| | | | | __init__.py           // –≠–∫—Å–ø–æ—Ä—Ç —Å—Ö–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è users
| | | | | users.py              // –°—Ö–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
| | | | | company.py            // –°—Ö–µ–º—ã –∫–æ–º–ø–∞–Ω–∏–π
| | | | __init__.py
| | | | container.py            // –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ IoC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
| | | | enums.py                // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–π
| | | | models.py               // –ú–æ–¥–µ–ª–∏ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è users
| | | | serializers.py          // –ü—Ä–∞–≤–∏–ª–∞ –∏ –º–µ—Ö–∞–Ω–∏–∑–º —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤
| | | | router.py               // –†–æ—É—Ç–µ—Ä –∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã
| | | | exceptions.py           // –ò—Å–∫–ª—é—á–µ–Ω–∏—è, –Ω–∞—Å–ª–µ–¥—É–µ–º—ã–µ –æ—Ç core/exceptions
| | | üìÅ other...               // –î—Ä—É–≥–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Å–µ—Ä–≤–∏—Å–µ
| | üìÅ certs                    // –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
| | | üìÅ elasticsearh           // –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è elastic search
| | | | ca.pem                  // –ö–æ—Ä–Ω–µ–≤–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫—Ç
| | | üìÅ kafka                  // –°–µ—Ä–∏—Ç—Ñ–∏–∫–∞—Ç—ã –¥–ª—è kafka
| | | | ca.pem                  // –ö–æ—Ä–Ω–µ–≤–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
| | | | cert.pem                // –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
| | | | key.crt                 // –ö–ª—é—á
| | üìÅ entrypoints              // –¢–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
| | | | __init__.py
| | | | rest.py                 // –ó–∞–ø—É—Å–∫–∞ rest –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
| | | | grpc.py                 // –ó–∞–ø—É—Å–∫–∞ grpc –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
| | | __init__.py
| | | db.py                     // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
| | | depends.py                // –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ IoC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
| | | enums.py                  // –°–ø–∏—Å–æ–∫ Enums
| | | exceptions.py             // –ù–∞–±–æ—Ä –æ–±—â–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
| | | loggers.py                // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–≥–µ—Ä–∞
| | | models.py                 // –ú–∏–∫—Å–∏–Ω—ã –º–æ–¥–µ–ª–µ–π —Å—Ö–µ–º –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
| | | schemas.py                // –û–±—â–∏–µ —Å—Ö–µ–º—ã (DTO)
| | | use_cases.py              // –û–±—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã UseCases
| | üìÅ tools                    // Cli —É—Ç–∏–ª–∏—Ç—ã
| | | üìÅ core                   // –ú–æ–¥—É–ª—å –æ–±—â–∏—Ö –∫–æ–º–∞–Ω–¥
| | | | __init__.py             // –ú–æ–¥–µ–ª—å –æ–±—â–∏—Ö –∫–æ–º–∞–Ω–¥
| | | | cryptography.py         // –ö–æ–º–∞–Ω–¥–∞ cryptography
| | | app.py                    // –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ cli –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
| | | utils.py                  // –£—Ç–∏–ª–∏—Ç—ã cli –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
| | __init__.py
| | bootstrap.py                // –§–∞–π–ª —Å–±–æ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
| | exceptions.py               // –§–∞–π–ª —Å –Ω–∞–±–æ—Ä–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
| | main.py                     // –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
| | middleware.py               // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö –ø—Ä–æ—Å–ª–æ–µ–∫
| | router.py                   // root —Ä–æ—É—Ç–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
| | settings.py                 // –§–∞–π–ª —Å –Ω–∞–±–æ—Ä–æ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
| | swagger.py                  // –§–∞–π–ª –¥–ª—è –¥–æ–ø –Ω–∞—Å—Ç—Ä–π–æ–∫–∏ —Å–≤–∞–≥–µ—Ä–∞
| üìÅ seed                       // –ü—Ä–µ—Å–µ—Ç—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –°–£–ë–î
| | 001.users.json              // –ó–∞–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
| | 002.groups.json             // –ì—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
| üìÅ tests                      // Unit —Ç–µ—Å—Ç—ã —Å–µ—Ä–≤–∏—Å–∞
| | üìÅ apps                     // –ù–∞–±–æ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
| | | üìÅ healthcheck            // –¢–µ—Å—Ç—ã –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è healthcheck
| | | | conftest.py             // –§–∏–∫—Å—Ç—É—Ä—ã, –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é healthcheck
| | | | test_router.py          // –¢–µ—Å—Ç—ã —Ä–æ—É—Ç–∞
| | | | test_repositories.py    // –¢–µ—Å—Ç—ã —Å–ª–æ—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
| | | | test_services.py        // –¢–µ—Å—Ç—ã —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è
| | conftest.py                 // –§–∞–π–ª, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ñ–∏–∫—Å—Ç—É—Ä—ã –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
| .dockerignore                 // –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –¥–æ–∫–µ—Ä –æ–±—Ä–∞–∑–æ–≤
| .env.example                  // –ü—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞ .env
| .gitignore                    // –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ git
| .isort.cfg                    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤
| .logging.dev.yaml             // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
| .logging.yaml                 // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–æ–¥ –æ–∫—Ä—É–∂–µ–Ω–∏–∏
| .pre-commit-config.yaml       // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–µ–∫–æ–º–º–∏—Ç —Ñ–∞–π–ª–æ–≤
| .python-version               // –í–µ—Ä—Å–∏—è python, –¥–ª—è pyenv
| .alembic.ini                  // –ö–æ–Ω—Ñ–∏–≥—Ü—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è alembic
| .docker-compose.yaml          // –§–∞–π–ª –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
| Dockerfile                    // –§–∞–π–ª –æ–ø–∏—Å–∞–Ω–∏—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
| entrypoint.sh                 // Docker entrypoint
| Makefile                      // –§–∞–π–ª –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
| manage.py                     // –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è cli —É—Ç–∏–ª–∏—Ç
| poetry.lock                   // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –∏—Ö –≤–µ—Ä—Å–∏–∏
| pyproject.toml                // –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
| pytest.ini                    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è unit-—Ç–µ—Å—Ç–æ–≤
| README.md                     // –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ø—Ä–µ–¥–º–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
```
### –§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞

```
üìÅ .devcontainer            // –§–∞–π–ª—ã –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
üìÅ .vscode                  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ vscode
üìÅ migrations               // –ú–∏–≥—Ä–∞—Ü–∏–∏ alembic –¥–ª—è sqlalchemy
üìÅ seed                     // –ó–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, —Å–ª–æ–≤–∞—Ä–µ–π
üìÅ src | {{ service name }} // –§–∞–π–ª—ã —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø—Ä–æ–µ–∫—Ç–∞
üìÅ tests                    // –¢–µ—Å—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
.dockerignore               // –§–∞–π–ª –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ –≤–Ω—É—Ç—Ä—å –æ–±—Ä–∞–∑–æ–≤
.env.example                // –ü—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è
.gitignore                  // –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ VCS
.pre-commit-config.yaml     // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–µ–∫–æ–º–º–∏—Ç–∞
.python-version             // –£–∫–∞–∑–∞–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ python –¥–ª—è –ø–∞–∫–µ—Ç–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
alembic.ini                 // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
docker-compose.yaml         // –§–∞–π–ª –ø–æ–¥–Ω—è—Ç–∏—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
Dockerfile                  // –§–∞–π–ª —Å–±–æ—Ä–∫–∏ –¥–æ–∫–µ—Ä –æ–±—Ä–∞–∑–∞
entrypoint.sh               // –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
Makefile                    // –°–ø–∏—Å–æ–∫ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
manage.py                   // –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ CLI –∫–æ–º–∞–Ω–¥—ã
pyproject.toml              // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –ø—Ä–æ–µ–∫—Ç–∞
README.md                   // –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
```

## –ú–æ–¥–µ–ª–∏ (_Models_)
**–ú–æ–¥–µ–ª—å –ë–î**¬†‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, —Ö—Ä–∞–Ω—è—â–∏—Ö—Å—è –≤ –°–£–ë–î. –û–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç,¬†–∫–∞–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –∫–∞–∫–∏–µ —É –Ω–∏—Ö –ø–æ–ª—è (–∫–æ–ª–æ–Ω–∫–∏), —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö —ç—Ç–∏—Ö –ø–æ–ª–µ–π, —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è (constraints), –∏–Ω–¥–µ–∫—Å—ã –∏ —Ç. –¥. –ú–æ–¥–µ–ª—å –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –≤ —Å–µ–±—è —Å–ª–µ–¥—É—é—â–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏:
- –¢–∞–±–ª–∏—Ü—ã - –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö;
- –°—Ç–æ–ª–±—Ü—ã - –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, VARCHAR, INTEGER, BOOLEAN, TIMESTAMP –∏ –¥—Ä—É–≥–∏–µ;
- –ü–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á - —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–ø–∏—Å–µ–π, –¥–æ–ª–∂–Ω—ã –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—ã –∏ –±—ã—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏;
- –í–Ω–µ—à–Ω–∏–µ –∫–ª—é—á - —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏;
- –ò–Ω–¥–µ–∫—Å—ã - –Ω–∞–±–æ—Ä –ø–æ–ª–µ–π, —Å–ª—É–∂–∞—â–∏–π –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (–∑–∞–º–µ–¥–ª—è—é—Ç –≤—Å—Ç–∞–≤–∫—É);
- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è, —Ç—Ä–∏–≥–≥–µ—Ä—ã, —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Å—Ö–µ–º—ã - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–µ–ª–∏ –ë–î.
**ORM (Object-Relational Mapping)**¬†‚Äî —ç—Ç–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—É —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö¬†**—á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –∏ –∫–ª–∞—Å—Å—ã**, –∞ –Ω–µ —á–µ—Ä–µ–∑ SQL-–∑–∞–ø—Ä–æ—Å—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ç–∞–∫–∂–µ –ø–æ–º–Ω–∏—Ç—å –æ–± –æ–±—ä–µ–∫—Ç–Ω–æ-—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–º —Ä–∞–∑—Ä—ã–≤–µ:

| –í –û–û–ü                        | –í —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–π –ë–î               |
| ---------------------------- | ------------------------------ |
| –ö–ª–∞—Å—Å—ã –∏ –æ–±—ä–µ–∫—Ç—ã             | –¢–∞–±–ª–∏—Ü—ã –∏ —Å—Ç—Ä–æ–∫–∏               |
| –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤         | –ù–µ—Ç –ø—Ä—è–º–æ–≥–æ –∞–Ω–∞–ª–æ–≥–∞            |
| –°–≤—è–∑–∏ —á–µ—Ä–µ–∑ –∞—Ç—Ä–∏–±—É—Ç—ã/–æ–±—ä–µ–∫—Ç—ã | –°–≤—è–∑–∏ —á–µ—Ä–µ–∑ foreign keys       |
| –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è                 | –î–∞–Ω–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç—ã –∏ –ø–ª–æ—Å–∫–∏–µ       |
| –ò–µ—Ä–∞—Ä—Ö–∏–∏                     | –¢—Ä–µ–±—É—é—Ç JOIN‚Äô–æ–≤ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ |
–í –∫–∞—á–µ—Å—Ç–≤–µ primary key –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –∫–ª—é—á–∏:
- **BigInt** - AutoIncrement;
- **UUID** - —Ç–æ–ª—å–∫–æ uuid –≤–µ—Ä—Å–∏–∏ 7.
–ü—Ä–∏–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º [SqlAlchemy](https://www.sqlalchemy.org) –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –Ω–∏–∂–µ.

```python
# apps/users/models.py

import uuid
from datetime import datetime
import sqlalchemy as sa
from sqlalchemy import Boolean, Column, DateTime, ForeignKey, String
from sqlalchemy.orm import Mapped, mapped_column
from sqlalchemy.sql import func
from sqlalchemy_utils.types import UUIDType
from va_core.db import Base
from va_core.models import TimestampMixin


class User(Base):
    """
    –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """

    __tablename__ = 'users'

    id: Mapped[uuid.UUID] = mapped_column(UUIDType(binary=False), primary_key=True, default=uuid.uuid7, server_default=func.gen_random_uuid())
    username: Mapped[str] = mapped_column(String(length=100), unique=True, index=True, nullable=False)
    email: Mapped[str] = mapped_column(String(length=320), unique=True, index=True, nullable=False)
    hashed_password: Mapped[str] = mapped_column(String(length=1024), nullable=True)
    first_name: Mapped[str] = mapped_column(String(length=100), nullable=False)
    second_name: Mapped[str | None] = mapped_column(String(length=100), nullable=True)
    last_name: Mapped[str] = mapped_column(String(length=100), nullable=False)
    avatar: Mapped[str | None] = mapped_column(String(250), nullable=True)
    is_active: Mapped[bool] = mapped_column(Boolean, default=False, server_default=sa.false(), nullable=False)
    is_deleted: Mapped[bool] = mapped_column(Boolean, default=False, server_default=sa.false(), nullable=False)
    is_superuser: Mapped[bool] = mapped_column(Boolean, default=False, server_default=sa.false(), nullable=False)
    login_at: Mapped[datetime | None] = mapped_column(DateTime(timezone=True), nullable=True)

    def __repr__(self: Self) -> str:
        return f'User(id={self.id!r}, email={self.email!r}, username={self.username!r})'
```

–ü–æ—Å–ª–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –º–æ–¥–µ–ª—è–º–∏ –≤ –∫–∞–∫–æ–º-—Ç–æ –∏–∑ –¥–æ–º–µ–Ω–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –ë–î —Å –ø–æ–º–æ—â—å—é [alembic](https://alembic.sqlalchemy.org/en/latest/).
–ò–∑ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ `alembic.ini` –Ω–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –ø—è—Ç—å –ø–æ–ª–µ–π:
```ini
[alembic]
# –î–∏—Ä—Ä–µ–∫—Ç–æ—Ä–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –º–∏–≥—Ä–∞—Ü–∏–∏
script_location = migrations
# –®–∞–±–ª–æ–Ω —Ñ–∞–π–ª–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
# –ù–∞–ø—Ä–∏–º–µ—Ä: 2024_09_11_initial.py
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(slug)s

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ sys.path –¥–∏—Ä—Ä–µ–∫—Ç–æ—Ä–∏–∏
prepend_sys_path = .

# –†–∞–∑–¥–µ–ª–∏—Ç—å —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ø—É—Ç–∏ / –∏–ª–∏ \. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ
version_path_separator = os

# –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –°–£–ë–î, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, postgres
# async_fallback - –ø–æ–ø—Ä–æ–±—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å asyncpg, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è - –ø–µ—Ä–µ–π–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ psycopg2 (–±–ª–æ–∫–∏—Ä—É—é—â–∏–π —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥—Ä–∞–π–≤–µ—Ä)
# options=-csearch_path= - –∑–∞–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π —Å—Ö–µ–º—ã –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é public
sqlalchemy.url = %(DB_PROVIDER)s://%(DB_USER)s:%(DB_PASSWORD)s@%(DB_HOST)s:%(DB_PORT)s/%(DB_NAME)s?async_fallback=True&options=-csearch_path=%(DB_SCHEMA)s
```
–î–ª—è —Ä–∞–±–æ—Ç—ã —Å SqlAlchemy –µ—Å—Ç—å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ [SqlAlchemy-utils](https://sqlalchemy-utils.readthedocs.io/en/latest/).  –û–¥–Ω–∞–∫–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —ç—Ç–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ, –Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å `alembic` –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–∏–ø—ã –∏–∑ [SqlAlchemy-utils](https://sqlalchemy-utils.readthedocs.io/en/latest/):
```python
import sqlalchemy_utils

def render_item(type_, obj, autogen_context):
    """
    Apply custom rendering for selected items.
    """
    if type_ == 'type' and isinstance(obj, sqlalchemy_utils.types.ChoiceType):
        autogen_context.imports.add('import sqlalchemy_utils')
        autogen_context.imports.add(f'from {obj.choices.__module__} import {obj.choices.__name__}') # type: ignore
        return f'sqlalchemy_utils.types.ChoiceType({obj.choices.__name__}, impl=sa.{obj.impl.__class__.__name__}())' # type: ignore

    if type_ == 'type' and isinstance(obj, sqlalchemy_utils.types.JSONType):
        autogen_context.imports.add('import sqlalchemy_utils')
        return 'sqlalchemy_utils.types.JSONType()'

    if type_ == 'type' and isinstance(obj, sqlalchemy_utils.types.UUIDType):
        autogen_context.imports.add('import sqlalchemy_utils')
        return f'sqlalchemy_utils.types.UUIDType(binary={obj.binary})'

    # Default rendering for other objects
    return False
```
–ü–æ —Å—É—Ç–∏, —ç—Ç–∏ —Å—Ç—Ä–æ—á–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç `alembic` —Ç–æ—á–Ω–µ–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤, –≤–∑—è—Ç—ã—Ö –∏–∑ `sqlalchemy_utils`. –û–¥–Ω–∞–∫–æ, –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤ —Ñ–∞–π–ª–µ `migrations/env.py`:
```python
from importlib import import_module
from logging.config import fileConfig
from typing import TYPE_CHECKING

from alembic import context
from sqlalchemy import engine_from_config, pool
from {{ project_name }}.settings import settings
from fast_clean.db import Base
# –î–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
if TYPE_CHECKING:
    from .utils import render_item
else:
    from migrations.utils import render_item

# –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π
import_module('{{ project_name }}.apps.users.models')

# –î–æ—Å—Ç—É–ø –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –∏–∑ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ alembic.ini
config = context.config
section = config.config_ini_section
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
config.set_section_option(section, 'DB_PROVIDER', settings.db.provider)
config.set_section_option(section, 'DB_USER', settings.db.user)
config.set_section_option(section, 'DB_PASSWORD', settings.db.password)
config.set_section_option(section, 'DB_HOST', settings.db.host)
config.set_section_option(section, 'DB_PORT', str(settings.db.port))
config.set_section_option(section, 'DB_NAME', settings.db.name)
config.set_section_option(section, 'DB_SCHEMA', settings.db.scheme)

# Interpret the config file for Python logging.
# This line sets up loggers basically.
if config.config_file_name is not None:
    fileConfig(config.config_file_name)

# add your model's MetaData object here
# for 'autogenerate' support
# from myapp import mymodel
# target_metadata = mymodel.Base.metadata
target_metadata = Base.metadata


def run_migrations_offline() -> None:
    """
	Run migrations in 'offline' mode.

	This configures the context with just a URL and not an Engine, though an Engine is acceptable here as well. By skipping the Engine creation we don't even need a DBAPI to be available.
	Calls to context.execute() here emit the given string to the script output.
	"""
    url = config.get_main_option('sqlalchemy.url')
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        compare_server_default=True,
        dialect_opts={'paramstyle': 'named'},
    )

    with context.begin_transaction():
        context.run_migrations()

def run_migrations_online() -> None:
    """
    Run migrations in 'online' mode.

    In this scenario we need to create an Engine and associate a connection with the context.
    """
    connectable = engine_from_config(
        config.get_section(config.config_ini_section, {}),
        prefix='sqlalchemy.',
        poolclass=pool.NullPool,
    )
    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata,
            render_item=render_item, # –¥–æ–±–∞–≤–ª—è–µ–º
        )
		with context.begin_transaction():
			context.run_migrations()

if context.is_offline_mode():
	run_migrations_offline()
else:
	run_migrations_online()
```

–ú–∏–≥—Ä–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –≤—ã–∑–æ–≤–æ–º —Å–¥–µ–¥—É—é—â–µ–π –∫–æ–º–∞–Ω–¥—ã:
```bash
uv run alembic revision --autogenerate -m "$(NAME)" # $(NAME) - –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏
```
–ù–∞–∫–∞—Ç—ã–≤–∞–µ—Ç—Å—è –º–∏–≥—Ä–∞—Ü–∏—è –≤—ã–∑–æ–≤–æ–º —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–∞–Ω–¥—ã:
```python
uv run alembic upgrade head
```
–î—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ `alembic`.

## –°—Ö–µ–º—ã (_Schemas_)
–î–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑–æ–≤—ã—Ö [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) –æ–ø–µ—Ä–∞—Ü–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –º–æ–¥–µ–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º —Ç—Ä–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö [pydantic](https://docs.pydantic.dev/latest/) —Å—Ö–µ–º—ã ([DTO](https://en.wikipedia.org/wiki/Data_transfer_object)):
- **ReadSchema** - —Å—Ö–µ–º–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö;
- **CreateSchema** - —Å—Ö–µ–º–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î;
- **UpdateSchema** - —Å—Ö–µ–º–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –≤ –ë–î.

–°—Ö–µ–º—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –Ω–∏–∂–µ:
```python
# {{ project_name }}/apps/users/schemas/users.py

import uuid
from datetime import datetime
from pydantic import ConfigDict, EmailStr, Field

# –ë–∞–∑–æ–≤—ã–µ —Å—Ö–µ–º—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –æ–±—â–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç
from fast_clean.schemas import (
	CreateSchema,
	ReadSchema,
	UpdateSchema,
)


class UserCreateSchema(CreateSchema):
	"""
	–°—Ö–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	"""

	username: str
	email: EmailStr
	hashed_password: str | None
	first_name: str
	second_name: str | None
	last_name: str
	avatar: str | None
	is_active: bool
	is_superuser: bool


class UserReadSchema(ReadSchema):
	"""
	–°—Ö–µ–º–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	"""

	model_config = ConfigDict(from_attributes=True)

	username: str
	email: EmailStr
	hashed_password: str | None
	first_name: str
	second_name: str | None
	last_name: str
	avatar: str | None
	is_superuser: bool
	is_active: bool
	is_deleted: bool
	login_at: datetime | None
	created_at: datetime
	updated_at: datetime


class UserUpdateSchema(UpdateSchema):
	"""
	–°—Ö–µ–º–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	"""

	username: str | None = None
	email: EmailStr | None = None
	hashed_password: str | None = None
	first_name: str | None = None
	second_name: str | None = None
	last_name: str | None = None
	avatar: str | None = None
	is_superuser: bool | None = None
	is_active: bool | None = None
	is_deleted: bool | None = None
	login_at: datetime | None = None
```

–ü—Ä–∞–≤–∏–ª–æ–º —Ö–æ—Ä–æ—à–µ–≥–æ —Ç–æ–Ω–∞ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ä–µ—ç–∫—Å–ø–æ—Ä—Ç –∏–∑ `{{ project_name }}/apps/users/schemas/__init__.py`, —á—Ç–æ–±—ã –≤ —Ñ–∞–π–ª–µ `users.py` –Ω–µ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å `__all__ = ('UserCreateSchema' , 'UserReadSchema', 'UserUpdateSchema',)`:
```python
# {{ project_name }}/apps/users/schemas/__init__.py

from .users import UserCreateSchema as UserCreateSchema
from .users import UserReadSchema as UserReadSchema
from .users import UserUpdateSchema as UserUpdateSchema
```
## –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è (_Enums_)
–¢–∏–ø—ã –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–π –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–∞—Ö `enums.py` –≤ –∫–∞–∂–¥–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. –í –∫–æ–Ω—Ü–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å—É—Ñ–∏–∫—Å `Enum`:
```python
"""
–ú–æ–¥—É–ª—å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è auth.
"""
from enum import StrEnum, auto

class PasswordResetStatusEnum(StrEnum):
	"""
	–°—Ç–∞—Ç—É—Å —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è.
	"""

	ACTIVE = auto()
	APPLIED = auto()
	REJECTED = auto()
```
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å¬†`ENUM`¬†–≤ PostgreSQL¬†**–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω-—Å—Ü–µ–Ω–∞—Ä–∏–µ–≤**¬†–ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∏—á–∏–Ω–∞–º:
- –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤¬†`ENUM`¬†–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ¬†**—á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É¬†`ALTER TYPE`**, —ç—Ç–æ¬†**DDL-–æ–ø–µ—Ä–∞—Ü–∏—è**, –∫–æ—Ç–æ—Ä–∞—è:
	- –±–ª–æ–∫–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ç–∏–ø—É –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è;
	- –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤–Ω—É—Ç—Ä–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (`BEGIN ... COMMIT`) –¥–æ PostgreSQL 12.
- –ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Alembic), –∏–∑–º–µ–Ω–µ–Ω–∏–µ¬†`ENUM`¬†—Ç—Ä–µ–±—É–µ—Ç¬†**—Ä—É—á–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞**¬†–∏–ª–∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤.
- –¢—Ä—É–¥–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å enum-—Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–µ–∑ "–∫–æ—Å—Ç—ã–ª–µ–π".
- –ï—Å–ª–∏ –≤—ã —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç–µ/–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –°–£–ë–î ‚Äî¬†`ENUM`¬†–Ω–µ –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
- –í –∫–æ–¥–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ Python —Å SQLAlchemy)¬†`ENUM`¬†–∏–Ω–æ–≥–¥–∞ –≤–µ–¥—ë—Ç —Å–µ–±—è –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ –ø—Ä–∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏/–¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑–º–µ–Ω—è—é—Ç—Å—è.
- –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –±–µ–∑ –∫–æ—Å—Ç—ã–ª–µ–π.
- –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ.
- –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫.
- `ENUM`- –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–∞—é—Ç—Å—è "–º—è–≥–∫–æ–º—É" –∫–æ–Ω—Ç—Ä–æ–ª—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–ª—å–∑—è –ª–µ–≥–∫–æ —Å–¥–µ–ª–∞—Ç—å "–∞—Ä—Ö–∏–≤–Ω—ã–º").
## –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ (_Repositories_)
**–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π**¬†‚Äî —ç—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –Ω–∞–±–æ—Ä –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å—É—â–Ω–æ—Å—Ç—è–º–∏ –ø—Ä–µ–¥–º–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–¥–µ–ª—è–µ—Ç –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –æ—Ç –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
#### –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –°–£–ë–î
–í—ã—à–µ –æ–ø–∏—Å–∞–Ω–∞ –º–æ–¥–µ–ª—å `User`, –∫–æ—Ç–æ—Ä–∞—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ—Ü–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ —Ç–∞–±–ª–∏—Ü–∞ `users`.
–í –±–∏–±–ª–æ—Ç–µ–∫–µ [fast_clean](https://github.com/Luferov/fast-clean) –æ–ø–∏—Å–∞–Ω –±–∞–∑–æ–≤—ã–π [CRUDRepository](https://github.com/Luferov/fast-clean/blob/main/fast_clean/repositories/crud/db.py), –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—â–∏–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π. –ö–∞–∂–¥—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç—Ä–∞–∂–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –≤ –°–£–ë–î –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω –æ—Ç –±–∞–∑–æ–≤–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è `DbCrudRepository`:
```python
class DbCrudRepository(
    DbCrudRepositoryBase[ModelType, ReadSchemaType, CreateSchemaType, UpdateSchemaType, uuid.UUID],
    Generic[ModelType, ReadSchemaType, CreateSchemaType, UpdateSchemaType],
):
    """
    –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è CRUD –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞–¥ –º–æ–¥–µ–ª—è–º–∏ –Ω–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    """

    __abstract__ = True
```

–ö–ª–∞—Å—Å –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±—É–¥–µ—Ç —Å —É—á–µ—Ç–æ–º –æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –≤—ã—à–µ —Å—Ö–µ–º DTO –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
```python
class UserRepository(
	DbCrudRepository[User, UserReadSchema, UserCreateSchema, UserUpdateSchema]
):

	async def exists_with_username(self: Self, username: str) -> bool:
		"""
		–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∑–∞–¥–∞–Ω–Ω—ã–º username.
		"""
		async with self.session_manager.get_session() as s:
			statement = sa.exists().where(self.model_type.username == username).select()
			return bool((await s.execute(statement)).scalar())
```

–í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –∫–ª–∞—Å—Å –≤–º–µ—Å—Ç–µ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –∏–∑ –∫–ª–∞—Å—Å–∞ `DbCrudRepository` —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–∞–∫–∂–µ –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ `username`. –°–ø–∏—Å–æ–∫ –º–µ—Ç–æ–¥–æ–≤ –∏–∑ DbCrudRepository —Å–ª–µ–¥—É—é—â–∏–π:
- `async def get(self: Self, id: IdType) -> ReadSchemaBaseType` - –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É;
- `async def get_or_none(self: Self, id: IdType) -> ReadSchemaBaseType | None: ` - –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏, –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ `None`;
- `async def get_by_ids(self: Self, ids: Sequence[IdType], *, exact: bool = False) -> list[ReadSchemaBaseType]:` - –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –ø–æ —Å–ø–∏—Å–∫—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤;
- `async def get_all(self: Self) -> list[ReadSchemaBaseType]:` - –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π (_–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ_);
- —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è _offset_ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
```python
  async def paginate(
        self: Self,
        pagination: PaginationSchema,
        user: Any,
        policies: list[str],
        *,
        search: str | None = None,
        search_by: Iterable[str] | None = None,
        sorting: Iterable[str] | None = None,
    ) -> PaginationResultSchema[ReadSchemaBaseType]:
```
- `async def create(self: Self, create_object: CreateSchemaBaseType) -> ReadSchemaBaseType:` - —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏;
- `async def bulk_create(self: Self, create_objects: list[CreateSchemaBaseType]) -> list[ReadSchemaBaseType]:` - –º–∞—Å—Å–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π;
- `async def update(self: Self, update_object: UpdateSchemaBaseType) -> ReadSchemaBaseType:` - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ë–î;
- `async def bulk_update(self: Self, update_objects: list[UpdateSchemaBaseType]) -> None:`  - –º–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ –ë–î –ø–æ –µ–¥–∏–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π;
- `async def upsert(self: Self, create_object: CreateSchemaBaseType) -> ReadSchemaBaseType:` - –ø–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å, –≤ —Å–ª—É—á–∞–µ –Ω–µ—É—Å–ø–µ—Ö–∞ –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–µ—Ç—Å—è;
- `async def delete(self: Self, ids: Sequence[IdType]) -> None:` - —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏;
- `def select(cls) -> sa.Select[tuple[ModelBaseType]]:` - –≤—ã–±–æ—Ä –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏ –∏ –≤—Å–µ—Ö –ø–æ–ª–µ–π –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞, –µ—Å–ª–∏ —Ç–∞–∫–∏–µ –µ—Å—Ç—å (_classmethod_).
#### –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å –≤–Ω–µ—à–Ω–∏–º –º–∏—Ä–æ–º –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –¥–≤—É—Ö —Ä–µ–∂–∏–º–∞—Ö:
1. [C –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º](https://ru.wikipedia.org/wiki/–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ_HTTP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ) - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.
```plantuml
@startuml
autonumber

participant Client
participant Server


Client -> Client: –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
activate Client

Client -> Server: –ó–∞–ø—Ä–æ—Å
activate Server
Server -> Client: –û—Ç–≤–µ—Ç
Client -> Server: –ó–∞–ø—Ä–æ—Å
Server -> Client: –û—Ç–≤–µ—Ç
Client -> Server: –ó–∞–ø—Ä–æ—Å
Server -> Client: –û—Ç–≤–µ—Ç
destroy Server

Client -> Client: –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
deactivate Client
@enduml
```
2. –° –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —Ä–∞–∑—Ä—ã–≤–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
```plantuml
@startuml
autonumber

participant Client
participant Server


== 1 –¥–µ–π—Å—Ç–≤–∏–µ ==
Client -> Client: –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
activate Client
Client -> Server: –ó–∞–ø—Ä–æ—Å
activate Server
Server -> Client: –û—Ç–≤–µ—Ç
deactivate Server
Client -> Client: –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
destroy Client

== 2 –¥–µ–π—Å—Ç–≤–∏–µ ==
Client -> Client: –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
activate Client
Client -> Server: –ó–∞–ø—Ä–æ—Å
activate Server
Server -> Client: –û—Ç–≤–µ—Ç
deactivate Server
Client -> Client: –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
destroy Client
@enduml
```
–û—á–µ–≤–∏–¥–Ω–æ –ø—Ä–∏ –ª—é–±–æ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ, —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –∏–∑ —Å–µ–±—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å—Å—è –≤—Å–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ. –ü—Ä–∏–º–µ—Ä –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –Ω–∏–∂–µ:
```python
"""
–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤ –≤ VoiceAI.
"""
import uuid
from dataclasses import dataclass
from contextlib import AbstractAsyncContextManager
from typing import Any, Self

import httpx

from ..schemas import (
    UserCreateSchema,
    UserResultScheme,
    UserRepositoryParams,
    UserCreateSchema,
)

@dataclass
class UserRepository(AbstractAsyncContextManager):
	"""
	–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ http —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.
	"""
	self.params = params
	self.client: httpx.AsyncClient | None = None

    async def __aenter__(self: Self) -> Self:
        if self.client is None:
            self.client = self.make_client()
        return self

    async def __aexit__(
        self, exc_type: type[BaseException] | None, exc_value: BaseException | None, traceback: Any | None
    ) -> None:
        if self.client:
            await self.client.aclose()
        self.client = None
        return None

    def make_client(self: Self, retries: int = 3, verify: bool = False) -> httpx.AsyncClient:
	    """
	    –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.
		"""
        transport = httpx.AsyncHTTPTransport(retries=retries, verify=verify)
        return httpx.AsyncClient(transport=transport)

    async def create_user(self: Self, user: UserCreateSchema) -> UserResultScheme:
        """
        –°–æ–∑–¥–∞–µ–º user –∑–∞–ø–∏—Å—å.
        """
        assert self.client
        response = await self.client.post(self.params.destination, json=user.model_dump(by_alias=True))
        response.raise_for_status()
        return UserResultScheme.model_validate(response.json())

    async def delete(self: Self, user_id: uuid.UUID) -> None:
        """
        –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        """
        assert self.client
        await self.client.delete(f'{self.params.destination}/users/{user_id}')

```
–ü—Ä–∏ —Ç–∞–∫–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
```python

async with user_repository:
	# –í–Ω—É—Ç—Ä–∏ keep-alive —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
	result = await user_repository.create_user(user)
	await user_repository.delete(result.id)

```
## –°–µ—Ä–≤–∏—Å—ã (_Services_)
**–°–µ—Ä–≤–∏—Å–Ω—ã–π —Å–ª–æ–π**  ‚Äî —ç—Ç–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ —è–¥—Ä–æ, –≥–¥–µ –∂–∏–≤–µ—Ç¬†_—á–∏—Å—Ç–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞_¬†–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É—é—Ç –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã: –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –º–µ–∂–¥—É –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á.
**–ï–≥–æ –≥–ª–∞–≤–Ω—ã–µ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞ ‚Äî —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å.**¬†–°–µ—Ä–≤–∏—Å—ã –ª–µ–≥–∫–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ, –∞ –∏—Ö –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –¥–µ—Ç–∞–ª–µ–π –≤–≤–æ–¥–∞/–≤—ã–≤–æ–¥–∞ (HTTP, UI) –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ (_User Story_) –ø–æ–∑–≤–æ–ª—è–µ—Ç –≥–∏–±–∫–æ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö¬†_UseCases_.

–í –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–º–µ—Ä–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º UserService, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
```python
from dataclasses import dataclass


@dataclass
class UserService:
	user_repository: UserRepository
	password_service: PasswordService

	async def create(self: Self, create_schema: UserCreateRequestSchema) -> UserReadSchema:
        """
        –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        """
        if await self.user_repository.exists_with_username(create_schema.username):
            raise ModelAlreadyExistsError('username', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        if await self.user_repository.exists_with_email(create_schema.email):
            raise ModelAlreadyExistsError('email', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        register_dict = create_schema.model_dump()
        password = register_dict.pop('password')
        register_dict['hashed_password'] = None
        register_dict['is_active'] = False
        if settings.allow_set_password and password is not None:
            if not await self.password_service.check_strength(create_schema.password):
                raise WeakPasswordError(self.password_service.MIN_PASSWORD_LENGTH)
            register_dict['hashed_password'] = await run_in_processpoll(self.password_service.hash, password)
            register_dict['is_active'] = True
        register_dict['avatar'] = None
        register_dict['is_superuser'] = False
        user_create_schema = UserCreateSchema.model_validate(register_dict)
        return await self.user_repository.create(user_create_schema)
```

–ö–∞–∫ –≤–∏–¥–Ω–æ, —Å–µ—Ä–≤–∏—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
- –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å _username_;
- –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å _email_;
- –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–¥–µ–∫–≤–∞—Ç–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è –∏ —Ö–µ—à–∏—Ä—É–µ—Ç –µ–≥–æ —Å –ø–æ–º–æ—â—å—é _PasswordService_;
- –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∑–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—à–µ.
–ö–∞–∫ –≤–∏–¥–Ω–æ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞, –≤ —Å–µ—Ä–≤–∏—Å–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è, –∞ —É–∂–µ —Å–∞–º–æ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é _UserRepository_.
### –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
–í—Å–µ –≤–Ω–µ—à–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –µ–¥–∏–Ω—É—é —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤ –ø—Ä–æ–µ–∫—Ç–µ –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –ª–∏—à—å –æ–¥–∏–Ω —Ñ–∞–π–ª, –≥–¥–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏ –≤—Å–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∏–¥—Ç–∏ —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç –º–æ–¥—É–ª—å –∏–ª–∏ –∫–ª–∞—Å—Å.
–î–ª—è –ø—Ä–∏–º–µ—Ä–∞, –≤–æ–∑—å–º—ë–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É _python-jose_, –∫–æ—Ç–æ—Ä–∞—è –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä—É—é—Ç –≤ —Å–µ–±–µ –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ `encode` –∏ `decode`:
```python
from jose import jwt
token = jwt.encode({'key': 'value'}, 'secret', algorithm='HS256')
# token == u'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJrZXkiOiJ2YWx1ZSJ9.FG-8UppwHaFp1LgRYQQeS6EDQF7_6-bMFegNucHjmWg'
jwt.decode(token, 'secret', algorithms=['HS256'])
# {u'key': u'value'}
```
–ö–∞–∑–∞–ª–æ—Å—å –±—ã, API –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ–µ –∏ –ø–æ—á–µ–º—É –±—ã —Å—Ä–∞–∑—É –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –≤—ã–∑–æ–≤—ã –≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–µ—Å—Ç–∞—Ö. –û–¥–Ω–∞–∫–æ, —É –Ω–∞—Å –≤–æ–∑–Ω–∏–∫–∞–µ—Ç —Å–∏—Ç—É–∞—Ü–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –∑–∞–º–µ–Ω–∞ —ç—Ç–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –Ω–∞ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–∏—Å–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –ø–æ –≤—Å–µ–º—É –ø—Ä–æ–µ–∫—Ç—É, –∞ —Ç–∞–∫–∂–µ –≤ —Ç–µ—Å—Ç–∞—Ö –∏ –≤–µ–ª–∏–∫–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —á—Ç–æ-—Ç–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å. –ß—Ç–æ–±—ã —ç—Ç–æ–≥–æ –∏–∑–±–µ–∂–∞—Ç—å, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å "–æ–±–µ—Ä—Ç–∫—É" –Ω–∞–¥ —ç—Ç–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π, –ø–æ–º–µ—Å—Ç–∏–≤ –≤—ã–∑–æ–≤ —ç—Ç–∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–π –≤ –º–µ—Ç–æ–¥—ã —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞:
```python
from typing import Self
from jose import jwt # –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ jwt
from dataclasses import dataclass
from {{ project_name }} import Settings

@dataclass
class CryptoService:
	settings: Settings

	def encode(self: Self, value: dict, *, algorithm: str = 'HS256') -> str:
		return jwt.encode(value, self.settings.secret_key, algorithm=algorithm)

	def decode(self: Self, token: str, *, algorithm: str = 'HS256') -> dict:
		return jwt.decode(token, self.settings.secret_key, algorithms=[algorithm])
```
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–æ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö _CryptoService_ –≤–º–µ—Å—Ç–æ –∏–º–ø–æ—Ä—Ç–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ø–æ–∑–≤–æ–ª–∏—Ç –≤ —Å–ª—É—á–∞–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ø–æ–º–µ–Ω—è—Ç—å –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ. –ö—Ä–æ–º–µ —ç—Ç–æ–≥–æ, —Ç–∞–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–∫–∞–∂–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
## –í–∞—Ä–∏–∞–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (_UseCases_)

–í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è, –∫–æ—Ç–æ—Ä—ã–π –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç¬†–ª–æ–≥–∏–∫—É –ø–æ –¥–æ–º–µ–Ω–Ω—ã–º –æ–±–ª–∞—Å—Ç—è–º.¬†**_UseCase_**¬†‚Äî —ç—Ç–æ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏, —Ñ–æ–∫—É—Å–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞¬†**–æ–¥–Ω–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –±–∏–∑–Ω–µ—Å-—Å—Ü–µ–Ω–∞—Ä–∏–∏**,¬†**–ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–∑–æ–ª–∏—Ä—É—è —á–∏—Å—Ç—É—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É**¬†–æ—Ç –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â—ë –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º, —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ —Å–ª–æ–∂–Ω—ã—Ö –¥–æ–º–µ–Ω–∞—Ö. UseCase –Ω–µ –≤—Å–µ–≥–¥–∞ –∑–∞–º–µ–Ω—è–µ—Ç —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Å–ª–æ–π, –Ω–æ –æ–Ω –ø–æ–¥–Ω–∏–º–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—É–ø–µ–Ω—å.
–î–ª—è –ø—Ä–∏–º–µ—Ä–∞, —Ä–µ–∞–ª–∏–∑—É–µ–º —Å–µ—Ä–≤–∏—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:

```python
from dataclasses import dataclass

@dataclass
class UserRegisterUseCase:
	user_service: UserService
	me_service: MeService
	notify_service: NotifyService

	async def __call__(self: Self, user_schema: UserCreateRequestSchema) -> UserResponseSchema:
		"""
		–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""
		current_session = await self.me_service.get_session()
		if current_session:
			raise LogoutRequiredError()
		user = await self.user.service.create(user_schema)
		await self.notify_service.notify_register(user)
		return UserResponseSchema.model_validate(user, from_attributes=True)
```
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ–≥–æ –≤–∞–ª–∏–¥–∞—Ü–∏—è) —ç—Ç–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, –æ—Ç—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —ç—Ç–æ –Ω–µ —á–∞—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —ç—Ç–æ —á–∞—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∏—Å—Ç–æ—Ä–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
## –†–æ—É—Ç—ã –∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã
–†–æ—É—Ç–µ—Ä—ã –æ—Ä–≥–∞–Ω–∏–∑—É—é—Ç –≥—Ä—É–ø–ø—É —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤. –û–Ω–∏ –Ω—É–∂–Ω—ã –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∫–æ–¥–∞ –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏, —É–ø—Ä–æ—â–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ–ª—å—à–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤, —Ç–µ–≥–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π. –¢–∞–∫–∂–µ –æ–Ω–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –≤–Ω–µ—à–Ω–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ API. –ü—Ä–∏–º–µ—Ä —Ä–æ—É—Ç–∞ –¥–ª—è FastAPI:
```python
from fastapi import APIRouter

router = APIRouter(
	prefix='/users', # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
	tags=['Users'], # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Swagger
)
```
–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å —ç—Ç–∏–º —Ä–æ—É—Ç–µ—Ä–æ–º —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–º:
```python

@router.get('')
async def get_all_users() -> list[UserResponseSchema]:
	"""–ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
	...
```
–§—É–Ω–∫—Ü–∏—è `get_all_users` —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–º –≤ –ø—Ä–∏–≤—ã—á–Ω–æ–º –ø–æ–Ω–∏–º–∞–Ω–∏–∏ —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞, –≤ –≤–∏–¥—É —Ç–æ–≥–æ, —á—Ç–æ –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω–∞ –∏ —Ç–∞–∫:
```python

async def get_all_users() -> list[UserResponseSchema]:
	"""–ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
	...

@router.get('')(get_all_users)
#           ^ —Ä–æ—É—Ç–µ—Ä
#                    ^ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
```
–°–≤—è–∑–∫–∞ —Ä–æ—É—Ç–∞ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≤–Ω–µ—à–Ω–∏–π –∫–æ–Ω—Ç–∞—Ä–∫—Ç API –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏, –ø–æ —Å—É—Ç–∏ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ:
- –ø—É—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è;
- _UseCase_, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç—Ä–∞–∂–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é _UserStory_;
- –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ (Path, QueryParams, RequestSchema, Headers, etc);
- –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–≤–µ—Ç–∞.

–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
```python

from dishka.integrations.fastapi import FromDishka, inject

@router.post('')
@inject
async def register(
	register_schema: UserCreateRequestSchema, # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
	user_register_use_case: FromDishka[UserRegisterUseCase] # UseCase
) -> MeResponseSchema: # –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–≤–µ—Ç–∞
	"""
	–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	"""
	user = await user_register_use_case(register_schema)
	return MeResponseSchema.model_validate(user, from_attributes=True)
```

## –ò—Å–∫–ª—é—á–µ–Ω–∏—è (_Exceptions_)
–ö–ª–∞—Å—Å—ã –æ—à–∏–±–æ–∫ –º–æ–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ —Ç—Ä–∏ —á–∞—Å—Ç–∏:
- –°–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - http –æ—à–∏–±–∫–∏ —Å–æ —Å—Ç–∞—Ç—É—Å –∫–æ–¥–∞–º–∏:
	- 4XX - –æ—à–∏–±–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞;
	- 5XX - –æ—à–∏–±–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞;
- –°–ª–æ–π –¥–æ–º–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ - –æ—à–∏–±–∫–∏ –±–∏–∑–Ω–µ—Å –ª–æ–≥–∏–∫–∏;
- –°–ª–æ–π –≤–Ω–µ—à–Ω–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π - –≤–Ω–µ—à–Ω–∏–µ –æ—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –≤–Ω–µ—à–Ω–∏–º —Å–∏—Å—Ç–µ–º–∞–º.
–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–∞–∫–∂–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–∂–Ω–æ–π —á–∞—Å—Ç—å—é, –≤ –≤–∏–¥—É —Ç–æ–≥–æ, —á—Ç–æ –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–π –∫–ª–∞—Å—Å–æ–≤ –æ—à–∏–±–æ–∫ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—Ñ—Ñ–∏–∫—Å—ã _**Exception**_ –∏ _**Error**_:
- Exception ‚Äî –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã  –ø—Ä–∏ –Ω–µ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö;
- Error ‚Äî –æ—à–∏–±–∫–∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –æ—à–∏–±–∫–∏.
> PEP8 –≥–æ–≤–æ—Ä–∏—Ç:
> Because exceptions should be classes, the class naming convention applies here. However, you should use the suffix ‚ÄúError‚Äù on your exception names (if the exception actually is an error)

–õ–∏–Ω—Ç–µ—Ä Ruff —Ç—Ä–∞–Ω—Å–ª–∏—Ä—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–º–µ—Å—Ç–æ `class Validation(Exception)` –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `class ValidationError(Exception)`.

–í —Ü–µ–Ω—Ç—Ä–µ –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≥–ª–∞–≤–Ω—ã–π –∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –æ—à–∏–±–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:
```python
class BusinessLogicException(Exception, ABC):
    """
    –ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏.
    """

    @property
    def type(self: Self) -> str:
        """
        –¢–∏–ø –æ—à–∏–±–∫–∏.
        """
        return snakecase(type(self).__name__.replace('Error', ''))

    @property
    @abstractmethod
    def msg(self: Self) -> str:
        """
        –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏.
        """
        ...

    def __str__(self: Self) -> str:
        return self.msg

    def get_schema(self: Self, debug: bool) -> BusinessLogicExceptionSchema:
        """
        –ü–æ–ª—É—á–∞–µ–º —Å—Ö–µ–º—É –∏—Å–∫–ª—é—á–µ–Ω–∏—è.
        """
        return BusinessLogicExceptionSchema(
            type=self.type,
            msg=self.msg,
            traceback=(''.join(traceback.format_exception(type(self), self, self.__traceback__)) if debug else None),
        )
```
–ï–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±—ã–º, –∫–∞–∫ `BusinessLogicException`, —Ç–∞–∫ –∏ `DomainError`.  –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å **–∫–æ–Ω—Ç—Ä–∞–∫—Ç** –¥–ª—è –≤—Å–µ—Ö –æ—à–∏–±–æ–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –ø–æ API. –û—à–∏–±–∫–∏ –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–≤—è–∑–∞–Ω—ã —Å –æ—à–∏–±–∫–∞–º–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–¥–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä:
```python

class PermissionDeniedError(BusinessLogicException):
    """
    –û—à–∏–±–∫–∞, –≤–æ–∑–Ω–∏–∫–∞—é—â–∞—è –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è.
    """

    @property
    def msg(self: Self) -> str:
        return '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è'

class ModelNotFoundError(BusinessLogicException):
    """
    –û—à–∏–±–∫–∞, –≤–æ–∑–Ω–∏–∫–∞—é—â–∞—è –ø—Ä–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞–π—Ç–∏ –º–æ–¥–µ–ª—å.
    """

    def __init__(
        self,
        model: type[ModelType] | str,
        *args: object,
        model_id: int | uuid.UUID | Iterable[int | uuid.UUID] | None = None,
        model_name: str | Iterable[str] | None = None,
        message: str | None = None,
    ) -> None:
        super().__init__(*args)
        self.model = model
        self.model_id = model_id
        self.model_name = model_name
        self.custom_message = message

    @property
    def msg(self: Self) -> str:
        if self.custom_message is not None:
            return self.custom_message
        msg = f'–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–æ–¥–µ–ª—å {self.model if isinstance(self.model, str) else self.model.__name__}'
        if self.model_id is not None:
            if isinstance(self.model_id, Iterable):
                return f'{msg} –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º: [{", ".join(map(str, self.model_id))}]'
            return f'{msg} –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É: {self.model_id}'
        if self.model_name is not None:
            if isinstance(self.model_name, Iterable):
                return f'{msg} –ø–æ –∏–º–µ–Ω–∞–º: [{", ".join(self.model_name)}]'
            return f'{msg} –ø–æ –∏–º–µ–Ω–∏: {self.model_name}'
        return msg


class ModelAlreadyExistsError(BusinessLogicException):
    """
    –û—à–∏–±–∫–∞, –≤–æ–∑–Ω–∏–∫–∞—é—â–∞—è –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–æ–∑–¥–∞—Ç—å –º–æ–¥–µ–ª—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –ø–æ–ª–µ–º.
    """

    def __init__(self, field: str, message: str, *args: object) -> None:
        super().__init__(*args)
        self.field = field
        self.message = message

    @property
    def msg(self: Self) -> str:
        return self.message

    def get_schema(self: Self, debug: bool) -> BusinessLogicExceptionSchema:
        return ModelAlreadyExistsErrorSchema.model_validate(
            {**super().get_schema(debug).model_dump(), 'field': self.field}
        )

```

–ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å —ç—Ç–∏ –æ—à–∏–±–∫–∏ —Å http —Å—Ç–∞—Ç—É—Å–∞–º–∏ –æ—à–∏–±–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª [FastAPI exception handlers](https://fastapi.tiangolo.com/tutorial/handling-errors/):
```python
async def business_logic_exception_handler(
    settings: CoreSettingsSchema, request: Request, exception: BusinessLogicException
) -> Response:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–∞–∑–æ–≤–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏.
    """
    return await http_exception_handler(
        request,
        HTTPException(
            status_code=status.HTTP_400_BAD_REQUEST,
            detail=[exception.get_schema(settings.debug).model_dump()],
        ),
    )

async def permission_denied_error_handler(
    settings: CoreSettingsSchema, request: Request, error: PermissionDeniedError
) -> Response:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–µ–π –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è.
    """
    return await http_exception_handler(
        request,
        HTTPException(
            status_code=status.HTTP_403_FORBIDDEN,
            detail=[error.get_schema(settings.debug).model_dump()],
        ),
    )


async def model_not_found_error_handler(
    settings: CoreSettingsSchema, request: Request, error: ModelNotFoundError
) -> Response:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–µ–π –ø—Ä–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞–π—Ç–∏ –º–æ–¥–µ–ª—å.
    """
    return await http_exception_handler(
        request,
        HTTPException(
            status_code=status.HTTP_404_NOT_FOUND,
            detail=[error.get_schema(settings.debug).model_dump()],
        ),
    )


async def model_already_exists_error_handler(
    settings: CoreSettingsSchema, request: Request, error: ModelAlreadyExistsError
) -> Response:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–µ–π –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–æ–∑–¥–∞—Ç—å –º–æ–¥–µ–ª—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–º
    –ø–æ–ª–µ–º.
    """
    return await http_exception_handler(
        request,
        HTTPException(
            status_code=status.HTTP_409_CONFLICT,
            detail=[error.get_schema(settings.debug).model_dump()],
        ),
    )


def use_exceptions_handlers(app: FastAPI, settings: CoreSettingsSchema) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π.
    """
    app.exception_handler(BusinessLogicException)(partial(business_logic_exception_handler, settings))
    app.exception_handler(PermissionDeniedError)(partial(permission_denied_error_handler, settings))
    app.exception_handler(ModelNotFoundError)(partial(model_not_found_error_handler, settings))
    app.exception_handler(ModelAlreadyExistsError)(partial(model_already_exists_error_handler, settings))
```
–ë–∏–∑–Ω–µ—Å –æ—à–∏–±–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç –æ—à–∏–±–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ —Å–≤—è–∑–∞–Ω—ã —Å HTTP –∫–æ–¥–∞–º–∏, —á—Ç–æ–±—ã –ø—Ä–∏ –±—Ä–æ—Å–∞–Ω–∏–∏ –æ—à–∏–±–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –æ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ HTTP –æ—à–∏–±–∫–∏ –∏ –æ—Ç–¥–∞–≤–∞–ª–∏—Å—å –∫–ª–∏–µ–Ω—Ç—É.
–î–µ—Ä–µ–≤–æ –æ—à–∏–±–æ–∫ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∏–∂–µ:
```plantuml
@startmindmap
* BusinessLogicException \n(–≤—Å–µ –æ—à–∏–±–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç—Å—é–¥–∞)
** PermissionDeniedError \n(–æ—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–∞—è –∫ 403 —Å—Ç–∞—Ç—É—Å—É)
** ModelNotFoundError \n(–æ—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—è –∫ 404 —Å—Ç–∞—Ç—É—Å—É)
*** UserNotFoundError \n(–±–∏–∑–Ω–µ—Å –æ—à–∏–±–∫–∞)
*** CompanyNotFoundError \n(–±–∏–∑–Ω–µ—Å –æ—à–∏–±–∫–∞)
@endmindmap
```

–ö—Ä–æ–º–µ —ç—Ç–æ–≥–æ, –µ—Å–ª–∏ –≤—ã –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –∑–Ω–∞–µ—Ç–µ –∫–∞–∫–∏–µ –æ—à–∏–±–∫–∏ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–∏—Å–∞—Ç—å –∏—Ö —è–≤–Ω–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –≤ _Swagger_ –Ω–∞ –æ—Å–Ω–æ–≤–µ _OpenAPI_ 3.0.
```python

@router.post(
	'',
	responses={
		403: {'description': '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω'},
		404: {'description': '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'},
		418: {'description': '# I\'m a teapot'}
	}
)
```
## Dependency Injection

Dependency Injection (DI,¬†**–≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π**) ‚Äî —ç—Ç–æ –ø–∞—Ç—Ç–µ—Ä–Ω –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º, —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º. –í–æ—Ç –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–∏—á–∏–Ω—ã –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
1. –£–º–µ–Ω—å—à–µ–Ω–∏–µ —Å–≤—è–∑–Ω–æ—Å—Ç–∏ (Coupling);
2. –£–ø—Ä–æ—â–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è;
3. –ì–∏–±–∫–æ—Å—Ç—å –∏ —Ä–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å;
4. –ß–∏—Ç–∞–µ–º–æ—Å—Ç—å –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å;
5. –°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª [SOLID](https://ru.wikipedia.org/wiki/SOLID_(–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ).
–•–æ—Ç–µ–ª–æ—Å—å –±—ã DI & IoC-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π:
- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Ä–µ–µ—Å—Ç—Ä (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä) –æ–±—ä–µ–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–Ω —É–ø—Ä–∞–≤–ª—è–µ—Ç
- –ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã –∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞
- –ö–æ–¥ –∫–ª–∞—Å—Å–æ–≤ –Ω–µ –¥–æ–ª–∂–µ–Ω –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç IoC-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
- –ë–µ—Ä—ë—Ç –Ω–∞ —Å–µ–±—è:
¬†¬†¬†¬†¬†- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –æ–±—ä–µ–∫—Ç–æ–≤: —Å–æ–∑–¥–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ
¬†¬†¬†¬†¬†- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏.
–í –∫–∞—á–µ—Å—Ç–≤–µ DI —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ –≤—ã–±—Ä–∞–Ω [Dishka](https://dishka.readthedocs.io/en/stable/). –≠—Ç–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç¬†–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä IoC, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ª–µ–∑–µ–Ω. –ï—Å–ª–∏ –≤—ã —É—Å—Ç–∞–ª–∏ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã, —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —ç—Ç–∏ –æ–±—ä–µ–∫—Ç—ã —Å–æ–∑–¥–∞–≤–∞–ª–∏ –µ—â–µ –±–æ–ª—å—à–µ - –≤—ã –Ω–µ –æ–¥–∏–Ω–æ–∫–∏, –∏ —É –Ω–∞—Å –µ—Å—Ç—å —Ä–µ—à–µ–Ω–∏–µ. –ù–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä IoC, –Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, —á—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º.
IoC-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç (–∏–ª–∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π —Ç–∞–∫–æ–π –æ–±—ä–µ–∫—Ç), –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –æ–±—ä–µ–∫—Ç—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö —Å—Ä–æ–∫–æ–º —Å–ª—É–∂–±—ã. DI-framework - —ç—Ç–æ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Ç–∞–∫–∏—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤.
–ü—Ä–µ–∂–¥–µ, —á–µ–º —á–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ –∫—Ä–∞–π–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é DI —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞  [Dishka](https://dishka.readthedocs.io/en/stable/).

–î–∞–≤–∞–π—Ç–µ –æ–ø–∏—à–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
```python
from dishka import Provider as DishkaProvider
from dishka import Scope, provide


class Provider(DishkaProvider):
    scope = Scope.REQUEST

	user_repository = provide(UserRepository)
	user_service = provide(UserService)

	# use a function
	@provide
	@staticmethod
	def get_me_service(user_repository: UserRepository) -> MeService:
		return MeService(user_repository)

	user_register_use_case = provide(UserRegisterUseCase)

provider = Provider() # –û–±—ä—è–≤–ª—è–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä
```
–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞–µ–º IoC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –∑–∞–ø—É—Å–∫–∞–µ–º FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:
```python
import os
from collections.abc import AsyncGenerator
from contextlib import asynccontextmanager
from importlib import import_module
from pathlib import Path
import tochka_jsonrpcapi as jsonrpc
from fastapi import FastAPI
from fast_clean.container import ContainerManager
from fast_clean.contrib.healthcheck.router import router as healthcheck_router

@asynccontextmanager
async def lifespan(app: FastAPI) -> AsyncGenerator[None]:
    yield
    await app.state.dishka_container.close()

app = FastAPI(lifespan=lifespan)
ContainerManager.init_for_fastapi(app)
app.router.route_class = DishkaRoute

app.middleware('http')(context_middleware)
app.include_router(healthcheck_router)
```
## –°–ª–æ–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

–ï—Å–ª–∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ª–æ–∏—Å—Ç–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Ç–æ –µ–≥–æ –º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
```plantuml
@startuml
component Application {
  component Router {
   component Controller {
     component UseCase {
       component "Service 1" {
         component "Repository 1"
         component "Service 3" {
           component "Repository 3"
         }
         component "Service 2" {
           component "Repository 2"
         }
       }
       component "Service 2" {
         component "Repository 2"
       }
       component "Service 4" {
        component "Repository 4"
       }
     }
   }
  }
}
@enduml
```
–ö—Ä–æ–º–µ —ç—Ç–æ–≥–æ, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–æ–Ω –æ–±—Ä–∞—â–µ–Ω–∏–π –º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–π –¥–∏–∞–≥—Ä–∞–º–º–æ–π:
```plantuml
@startmindmap
* Application
** Router
*** Controller
**** UseCase
***** Service 1
****** Service 2
******* Repository 3
****** Repository 1
****** Repository 2
***** Serivce 2
****** Repository 3
@endmindmap
```
## Sync –∏ Async —Ñ—É–Ω–∫—Ü–∏–∏

–í —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö –Ω–∞ Python, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å asyncio, —á–∞—Å—Ç–æ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ (–±–ª–æ–∫–∏—Ä—É—é—â–∏–µ) —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ. –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—É–ª–µ –ø–æ—Ç–æ–∫–æ–≤ (_thread pool_) –∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (_process pool_).

_ThreadPoolExecutor_¬†–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä—É—é—â–∏—Ö I/O –æ–ø–µ—Ä–∞—Ü–∏–π, —Ç–æ –µ—Å—Ç—å –∫–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ–∂–∏–¥–∞–µ—Ç –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä:
- –°–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫¬†_API_¬†–±–µ–∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫.
- –ß—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –¥–∏—Å–∫.
- –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏.

–ü—Ä–∏—á–∏–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å¬†_ThreadPoolExecutor_¬†–¥–ª—è¬†_I/O-bound_¬†–∑–∞–¥–∞—á:
- _GIL (Global Interpreter Lock):_¬†–í Python –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä CPython –∏–º–µ–µ—Ç GIL, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ø–æ—Ç–æ–∫–∞–º –≤—ã–ø–æ–ª–Ω—è—Ç—å –±–∞–π—Ç-–∫–æ–¥ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ. –û–¥–Ω–∞–∫–æ –ø—Ä–∏ I/O –æ–ø–µ—Ä–∞—Ü–∏—è—Ö –ø–æ—Ç–æ–∫–∏ –æ—Å–≤–æ–±–æ–∂–¥–∞—é—Ç GIL, –ø–æ–∑–≤–æ–ª—è—è –¥—Ä—É–≥–∏–º –ø–æ—Ç–æ–∫–∞–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.
- _–ù–∏–∑–∫–∏–µ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã:_¬†–°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø–æ—Ç–æ–∫–∞–º–∏ –¥–µ—à–µ–≤–ª–µ, —á–µ–º –º–µ–∂–¥—É –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏.
- _–ü—Ä–æ—Å—Ç–æ—Ç–∞ –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏:_¬†–ü–æ—Ç–æ–∫–∏ —Ä–∞–∑–¥–µ–ª—è—é—Ç –æ–±—â—É—é –ø–∞–º—è—Ç—å, —á—Ç–æ —É–ø—Ä–æ—â–∞–µ—Ç –ø–µ—Ä–µ–¥–∞—á—É –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –Ω–∏–º–∏.

–í —Å–≤—è–∑–∏ —Å —ç—Ç–∏–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ async. –û–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –≤ `async` –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ `Future`, –∫–æ—Ç–æ—Ä–∞—è –ø–æ —Å—É—Ç–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –æ–∂–∏–¥–∞–µ—Ç.

```python
# ‚úÖ correct
def get_todo_repositories() -> ResultSchema:
    return do_smt_sync()

# ‚ùå incorrect
async def get_todo_repositories() -> ResultSchema:
    return do_smt_sync()
```

–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö –¥–ª—è –∑–∞–ø—É—Å–∫–∞¬†`run_in_processpool`¬†–∏`run_in_threadpool`:
```python
# run_in_processpool.py

import asyncio
import multiprocessing as mp
from concurrent.futures import ProcessPoolExecutor
from functools import partial
from typing import Callable, TypeVar

from typing_extensions import ParamSpec

P = ParamSpec('P')
R = TypeVar('R')

async def run_in_processpool(fn: Callable[P, R], *args: P.args, **kwargs: P.kwargs) -> R:
    """
    –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ.
    –ò—Å–ø–æ–ª—å–∑—É–µ–º fork –≤ —Å–≤—è–∑–∏ —Å https://github.com/python/cpython/issues/94765.
    """
    kwargs_fn = partial(fn, **kwargs)
    loop = asyncio.get_running_loop()
    with ProcessPoolExecutor(mp_context=mp.get_context('fork')) as executor:
        return await loop.run_in_executor(executor, kwargs_fn, *args)
```

```python
# run_in_threadpool.py

import asyncio
import multiprocessing as mp
from concurrent.futures import ProcessPoolExecutor
from functools import partial
from typing import Callable, TypeVar

from typing_extensions import ParamSpec

P = ParamSpec('P')
R = TypeVar('R')


process_pool: ProcessPoolExecutor | None = None


async def run_in_processpool(fn: Callable[P, R], *args: P.args, **kwargs: P.kwargs) -> R:
    """
    –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ.

    –ò—Å–ø–æ–ª—å–∑—É–µ–º fork –≤ —Å–≤—è–∑–∏ —Å https://github.com/python/cpython/issues/94765.
    """
    global process_pool
    if process_pool is None:
        process_pool = ProcessPoolExecutor(mp_context=mp.get_context('fork'))
    kwargs_fn = partial(fn, *args, **kwargs)
    loop = asyncio.get_running_loop()
    return await loop.run_in_executor(process_pool, kwargs_fn)
```

## FastClean Core

–í –æ—Å–Ω–æ–≤–Ω–æ–º –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∏ —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è –ª–∏—à—å –±–∏–∑–Ω–µ—Å —Ñ—É–∫–Ω—Ü–∏–æ–Ω–∞–ª–æ–º. –°–∏—Å—Ç–µ–º–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∏ —Ç—É–ª–∏–Ω–≥ –≤—ã–Ω–æ—Å–∏—Ç—å—Å—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –∫–æ—Ç–æ—Ä–∞—è –æ–±—ã—á–Ω–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è core. –í –Ω–∞—à–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —è–¥–µ—Ä–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞–±–æ—Ä–æ–º —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ [FastClean](https://github.com/Luferov/fast-clean).
## API Request –∏ Response —Å—Ö–µ–º—ã

–í—Å–µ API —Å—Ö–µ–º—ã –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–ø–∏—Å–∞–Ω—ã —Å –ø–æ–º–æ—â—å—é¬†`Pydantic`¬†–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω—ã –æ—Ç¬†`RequestSchema`, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑–∞–Ω–∞ –Ω–∏–∂–µ. –û–¥–Ω–∞–∫–æ, –∏—Å—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–≤–æ–¥–∏—Ç—å—Å—è –∫ –Ω–æ—Ç–∞—Ü–∏–∏¬†`camelCase`, –æ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —Å –ø–æ–º–æ—â—å—é¬†`Pydantic`¬†–º–æ–¥–µ–ª–µ–π –∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç¬†`ResponseSchema`.
```python

from __future__ import annotations

import uuid
from typing import Generic, Self, TypeVar

from pydantic import AliasGenerator, BaseModel, ConfigDict, field_validator
from pydantic.alias_generators import to_camel

class RequestSchema(BaseModel):
    """
    –°—Ö–µ–º–∞ –∑–∞–ø—Ä–æ—Å–∞.
    """
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–ª–∏–∞—Å–æ–≤ –∏ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ camelCase -> snake_case
    model_config = ConfigDict(
        alias_generator=AliasGenerator(
            validation_alias=to_camel,
        )
    )

class ResponseSchema(BaseModel):
    """
    –°—Ö–µ–º–∞ –æ—Ç–≤–µ—Ç–∞.
    """

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –≤ camelCase –∏–∑ snake_case -> camelCase
    model_config = ConfigDict(
        alias_generator=AliasGenerator(
            serialization_alias=to_camel,
        )
    )

RemoteResponseSchema = RequestSchema
RemoteRequestSchema = ResponseSchema

```

–ú–µ–∂—Å–µ—Ä–≤–∏—Å–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –¥–æ–ª–∂–Ω–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å—Å—è —Å –ø–æ–º–æ—â—å—é —ç—Ç–∏—Ö –∂–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π, –≤ —Å–ª–µ–¥—Å—Ç–≤–∏–µ —á–µ–≥–æ –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–ª–∞—Å—Å—ã¬†`RemoteResponseSchema`¬†–∏¬†`RemoteRequestSchema`.
## –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
**–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è**¬†‚Äî —ç—Ç–æ –µ–¥–∏–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π¬†_SQL_, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∫–∞–∫ –æ–¥–Ω–æ —Ü–µ–ª–æ–µ. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ–±–ª–∞–¥–∞—é—Ç —Å–≤–æ–π—Å—Ç–≤–∞–º–∏, –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –∫–∞–∫¬†_ACID_:

- **Atomicity (–ê—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç—å):**¬†–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–ª–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤–æ–≤—Å–µ. –ï—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—à–∏–±–∫–∞, –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–∫–∞—Ç—ã–≤–∞—é—Ç—Å—è.
- **Consistency (–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å):**¬†–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ–¥—è—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ–¥–Ω–æ–≥–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –¥—Ä—É–≥–æ–µ, —Å–æ–±–ª—é–¥–∞—è –≤—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏.
- **Isolation (–ò–∑–æ–ª—è—Ü–∏—è):**¬†–û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –≤–ª–∏—è—é—Ç –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
- **Durability (–î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å):**¬†–ü–æ—Å–ª–µ —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –µ–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–∞–∂–µ –≤ —Å–ª—É—á–∞–µ —Å–±–æ–µ–≤ —Å–∏—Å—Ç–µ–º—ã.

–¢–∏–ø–∏—á–Ω—ã–π –∫–æ–¥ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ª—é–±–æ–π –∑–∞–ø—Ä–æ—Å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é. –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —è–≤–Ω–æ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è - –æ–Ω–∞ –≤—Å–µ —Ä–∞–≤–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–æ—Å—Ç—è–º–∏¬†_SqlAlchemy_.

```python
import uuid
import sqlalchemy as sa
from typing import Protocol, Self

from fast_clean.depends import SessionManagerProtocol

from ..models import check_list_mark_template


class UserRepository:
    """
    –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ todo –ª–∏—Å—Ç–∞.
    """

    def __init__(self, session_manager: SessionManagerProtocol) -> None:
        self.session_manager = session_manager

    async def set_active(self: Self, todo_id: uuid.UUID, status: bool) -> None:
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–±–ª–æ–Ω—ã –æ—Ü–µ–Ω–∫–∏ —á–µ–∫-–ª–∏—Å—Ç–∞.
        """
        async with self.session_manager.get_session() as s:
            statement = (
                sa.update(self.model_type)
                .where(self.model_type.id == pk)
                .values({'status': status})
                .returning(self.model_type)
            )
            await s.execute(statement)
	        # –ú—ã –≤—Å–µ –µ—â–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –æ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞.
```
–í –≤–∏–¥—É —Ç–æ–≥–æ, —á—Ç–æ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Ç—Ä–∞–Ω–∑–∞—Ü–∏–∏ –≤ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —Å–µ—Å—Å–∏—è –≤¬†_SqlAlchemy_¬†–∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è, –ø–æ—ç—Ç–æ–º—É –Ω–∞–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å–µ—Å—Å–∏–∏ –ø–∏—à–µ—Ç—Å—è –æ–±–µ—Ä—Ç–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤–Ω—É—Ç—Ä–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤–ª–æ–∂–µ–Ω–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è (–∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–µ –∂–µ), –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ, —Ç.–µ. –ø–æ —Å—É—Ç–∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è¬†`SAVEPOINT`¬†–≤–Ω—É—Ç—Ä–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –ö–æ–¥ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –Ω–∏–∂–µ:

```python
from contextlib import asynccontextmanager
from typing import AsyncContextManager, AsyncIterator, Protocol, Self

import sqlalchemy as sa
from sqlalchemy.ext.asyncio import AsyncSession


class TransactionService:
    """
    –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
    """

    def __init__(self, session: AsyncSession) -> None:
        self.session = session

    @asynccontextmanager
    async def begin(self: Self, immediate: bool = True) -> AsyncIterator[None]:
        """
        –ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é.
        """
        async with self.session.begin():
            if immediate:
                await self.session.execute(sa.text('SET CONSTRAINTS ALL IMMEDIATE'))
            yield
```
–ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –Ω—É–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤ –æ–¥–Ω—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é, —Ç–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ –≤ —Å–µ—Ä–≤–∏—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:
```python


class TodoUseCase(UseCase[ResponseModel]):

    def __init__(
        self,
        transaction_service: TransactionService,
        service1: Service1,
        service2: Service2
    ) -> None:
        self.transaction_service = transaction_service
        self.service1 = Service1Protocol
        self.service2 = Service2Protocol

    def __call__(self) -> ResponseModel:
        async with self.transaction_service.begin():
            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ service1 –∏ service2 –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            await service1.do_smt()
            await service2.do_smt()
```
## –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```bash
git clone {{ repository }}
cp .env.example .env

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
uv run uvicorn {{ service name }}.entrypoints.main:app
```

## –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞

- [–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ FastAPI](https://github.com/zhanymkanov/fastapi-best-practices)
- [–ß–∏—Å—Ç–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞](https://www.litres.ru/book/robert-s-martin/chistaya-arhitektura-iskusstvo-razrabotki-programmnogo-obe-39113892/)
