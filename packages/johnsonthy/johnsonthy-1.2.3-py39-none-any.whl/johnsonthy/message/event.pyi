# Stub file for type hints

import threading
import asyncio
import types
import weakref
import functools
import inspect
from concurrent.futures import ThreadPoolExecutor as _ThreadPoolExecutor
from collections import defaultdict as _default_dict
from typing import Callable as _Callable
from functools import wraps as _wraps

EVENTS_CACHE: Events: ...
class Events:
    def __init__(self, *args, **kwargs): ...
    def _wrap_handler(self, *args, **kwargs): ...
    def subscribe(self, *args, **kwargs): ...
    def subscribe_once(self, *args, **kwargs): ...
    def unsubscribe(self, *args, **kwargs): ...
    def _run_handler(self, *args, **kwargs): ...
    def publish(self, *args, **kwargs): ...
    def clear_event(self, *args, **kwargs): ...
    def clear_all(self, *args, **kwargs): ...
    def shutdown(self, *args, **kwargs): ...
    @staticmethod
    def register_event(*args, **kwargs): ...
    def new_init(self, *args, **kwargs): ...
    @staticmethod
    def on_event(*args, **kwargs): ...
    def decorator(self, *args, **kwargs): ...
    def wrapper(self, *args, **kwargs): ...

