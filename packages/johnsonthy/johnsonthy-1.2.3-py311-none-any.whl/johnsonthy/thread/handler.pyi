# Stub file for type hints

import asyncio
import threading
import time
from concurrent.futures import ThreadPoolExecutor as _ThreadPoolExecutor
from typing import TypeVar as _TypeVar
from typing import Generic as _Generic
from typing import List as _List
from johnsonthy.logging import LOGGER as _LOGGER

interval_time: float: ...
interval_time: float: ...
max_workers: int: ...
thread_name_prefix: str: ...
interval_time: float: ...
interval_time: float: ...
thread_daemon: bool: ...
thread_name_prefix: str: ...
class Runnable:
    def run(self, *args, **kwargs): ...

class Controller:
    def __init__(self, *args, **kwargs): ...
    def set_status(self, *args, **kwargs): ...
    def get_status(self, *args, **kwargs): ...

class RunnableHandler:
    def __init__(self, *args, **kwargs): ...
    def loop(self, *args, **kwargs): ...

class ThreadPoolHandler:
    def __init__(self, *args, **kwargs): ...
    def set_status(self, *args, **kwargs): ...
    def get_status(self, *args, **kwargs): ...

class AsyncRunnable:

class AsyncRunnableHandler:
    def __init__(self, *args, **kwargs): ...

class AsyncLoopHandler:
    def __init__(self, *args, **kwargs): ...
    def _exec_loop(self, *args, **kwargs): ...
    def set_status(self, *args, **kwargs): ...
    def get_status(self, *args, **kwargs): ...

