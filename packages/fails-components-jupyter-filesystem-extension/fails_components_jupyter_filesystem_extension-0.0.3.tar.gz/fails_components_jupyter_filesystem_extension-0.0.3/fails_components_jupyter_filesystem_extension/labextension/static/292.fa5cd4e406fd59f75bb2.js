"use strict";(self.webpackChunk_fails_components_jupyter_filesystem_extension=self.webpackChunk_fails_components_jupyter_filesystem_extension||[]).push([[292],{292:(e,t,n)=>{n.r(t),n.d(t,{IFailsDriveMessages:()=>d,default:()=>p});var i=n(955),s=n(602);const r="application/json";class o{constructor(e){var t;this._fileContent=JSON.stringify(o.EMPTY_NB),this._isDisposed=!1,this._fileChanged=new s.Signal(this),this._fileName="unloaded.ipynb",this._serverSettings=null!==(t=e.serverSettings)&&void 0!==t?t:i.ServerConnection.makeSettings()}dispose(){this.isDisposed||(this._isDisposed=!0,s.Signal.clearData(this))}get isDisposed(){return this._isDisposed}get name(){return"JupyterFailsSingleFileDrive"}get serverSettings(){return this._serverSettings}get fileChanged(){return this._fileChanged}async getDownloadUrl(e){throw new Error("Method not implemented.")}async onMessage(e){switch(e.task){case"loadFile":{const t=e;this._fileContent=JSON.stringify(t.fileData||o.EMPTY_NB),this._fileName=t.fileName,this._fileChanged.emit({type:"save",oldValue:null,newValue:{name:this._fileName,path:this._fileName,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"json",mimetype:r,content:JSON.parse(this._fileContent),size:0,writable:!0,type:"notebook"}})}break;case"savedFile":{const t=e;return this._fileName!==t.fileName?{error:"Filename not found"}:{fileData:JSON.parse(this._fileContent)}}}}async get(e,t){e=decodeURIComponent(e.replace(/^\//,""));const n={name:this._fileName,path:this._fileName,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"json",mimetype:r,content:JSON.parse(this._fileContent),size:0,writable:!0,type:"notebook"};if(""===e)return{name:"",path:e,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"json",mimetype:r,content:[n],size:0,writable:!0,type:"directory"};if(e===this._fileName)return n;throw Error(`Could not find content with path ${e}`)}async save(e,t={}){if((e=decodeURIComponent(e))!==this._fileName)throw Error(`File ${e} is not the proxy file`);const n=t.chunk,i=!!n&&(n>1||-1===n);let s=await this.get(e,{content:i});if(!s)throw Error(`Could not find file with path ${e}`);const r=(new Date).toISOString();if(s={...s,...t,last_modified:r},t.content&&"base64"===t.format){const e=!n||-1===n,r=(new Date).toISOString();s={...s,...t,last_modified:r};const o=s.content,a=decodeURIComponent(escape(atob(t.content))),l=i?o+a:a;return s={...s,content:e?JSON.parse(l):l,format:"json",type:"notebook",size:l.length},this._fileContent=JSON.stringify(l),this._fileChanged.emit({type:"save",oldValue:null,newValue:s}),s}return this._fileContent=JSON.stringify(s.content),this._fileChanged.emit({type:"save",oldValue:null,newValue:s}),s}async newUntitled(e){throw new Error("NewUntitled not implemented")}async rename(e,t){throw new Error("rename not implemented")}async delete(e){throw new Error("delete not implemented")}async copy(e,t){throw new Error("copy not implemented")}async createCheckpoint(e){throw new Error("createCheckpoint not (yet?) implemented")}async listCheckpoints(e){return[{id:"fakeCheckpoint",last_modified:(new Date).toISOString()}]}async restoreCheckpoint(e,t){throw new Error("restoreCheckpoint not (yet?) implemented")}async deleteCheckpoint(e,t){throw new Error("deleteCheckpoint not (yet?) implemented")}}o.EMPTY_NB={metadata:{orig_nbformat:4},nbformat_minor:5,nbformat:4,cells:[]};var a=n(708),l=n(898);class c extends i.SettingManager{static override(e){if(c._overrides[e.id]){e.schema.properties||(e.schema.properties={});for(const[t,n]of Object.entries(c._overrides[e.id]||{}))e.schema.properties[t].default=n}return e}constructor(e){super({serverSettings:e.serverSettings})}async fetch(e){const t=(await this.list()).values.find((t=>t.id===e));if(!t)throw new Error(`Setting ${e} not found`);return t}async list(e){var t,n;const i=await this._getAll("all.json");let s=[];try{s=await this._getAll("all_federated.json")}catch(e){}const r=i.concat(s),o=await Promise.all(r.map((async e=>{const t=e.raw;return{...c.override(e),raw:t,settings:l.parse(t)}}))),a=null!==(t=o.map((e=>e.id)))&&void 0!==t?t:[];let d=[];return e||(d=null!==(n=o.map((e=>(e.data={composite:{},user:{}},e))))&&void 0!==n?n:[]),{ids:a,values:d}}async _getAll(e){var t;const n=null!==(t=a.PageConfig.getOption("settingsUrl"))&&void 0!==t?t:"/";return await(await fetch(a.URLExt.join(n,e))).json()}async save(e,t){}}c._overrides=JSON.parse(a.PageConfig.getOption("settingsOverrides")||"{}");const d=new(n(262).Token)("@fails-components/jupyter-fails:IFailsDriveMessages","A service to communicate to the FAILS single file drive."),p=[{id:"@fails-components/jupyter-applet-widget:drivemessages",requires:[],autoStart:!0,provides:d,activate:e=>{let t;const n=new Promise((e=>t=e));let i;return{registerMessageHandler:e=>{i=e,t&&t(void 0),t=void 0},sendMessage:async e=>(await n,i(e))}}},{id:"@fails-components/jupyter-applet-widget:drive",requires:[d],autoStart:!0,provides:i.IDefaultDrive,activate:(e,t)=>{const n=new o({});return t.registerMessageHandler((e=>n.onMessage(e))),n}},{id:"@fails-components/jupyter-applet-widget:settings",requires:[],autoStart:!0,provides:i.ISettingManager,optional:[i.IServerSettings],activate:(e,t)=>new c({serverSettings:null!=t?t:void 0})}]}}]);