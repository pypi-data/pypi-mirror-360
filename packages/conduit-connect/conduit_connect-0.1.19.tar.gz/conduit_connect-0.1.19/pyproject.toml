[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "conduit-connect"
version = "0.1.19"
description = "Enterprise Knowledge Integration Service"
readme = "README.md"
authors = [
    {name = "Tim Kitchens", email = "codingthefuturewithai@gmail.com"}
]
license = {text = "MIT"}
requires-python = ">=3.10,<3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["jira", "confluence", "atlassian", "integration", "cli"]
dependencies = [
    "atlassian-python-api>=3.41.0",
    "pydantic>=2.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "PyYAML>=6.0.1",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "mcp>=1.0.0",
    "mcp[cli]>=1.0.0",
    "anyio>=4.5",
    "starlette>=0.36.0",
    "uvicorn>=0.27.0",
    "md2cf>=2.3.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.4.1",
    "ruff>=0.0.284",
    "build"
]

[project.scripts]
conduit = "conduit.cli.main:cli"
mcp-server-conduit = "conduit.mcp.server:main"

[tool.setuptools.packages.find]
include = ["conduit*"]
namespaces = true

[tool.setuptools.package-data]
conduit = ["config/*.yaml"]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:_pytest.assertion.rewrite"
]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=conduit --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["conduit"]
omit = ["*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "raise ImportError"
]
