
"""
Trait definitions in the 'metadata' namespace.

Traits that are concerned with describing additional data associated
with an entity that is not considered part of its primary definition.
"""

# WARNING: This file is auto-generated by openassetio-traitgen, do not edit.

from typing import Union

from openassetio.trait import TraitsData


class ArbitraryMetadataTrait:
    """
    Additional key/value pairs associated with the entity that have no
    standardised definition of their values. This allows extra data
    specific to any given use case or pipeline to be conveyed through
    the Traits mechanism.

    Hosts may propagate this data throughout their own data model for
    use in downstream actions.

    As there are no standardised keys, the low level TraitsData API must
    be used to determine which keys/values are present.
    """
    kId = "openassetio-mediacreation:metadata.ArbitraryMetadata"

    def __init__(self, traitsData):
        """
        Construct this trait view, wrapping the given data.

        @param traitsData @fqref{TraitsData}} "TraitsData" The target
        data that holds/will hold the traits properties.
        """
        self.__data = traitsData

    def isImbued(self):
        """
        Checks whether the data this trait has been applied to
        actually has this trait.
        @return `True` if the underlying data has this trait, `False`
        otherwise.
        """
        return self.isImbuedTo(self.__data)

    @classmethod
    def isImbuedTo(cls, traitsData):
        """
        Checks whether the given data actually has this trait.
        @param traitsData: Data to check for trait.
        @return `True` if the underlying data has this trait, `False`
        otherwise.
        """
        return traitsData.hasTrait(cls.kId)

    def imbue(self):
        """
        Adds this trait to the held data.

        If the data already has this trait, it is a no-op.
        """
        self.__data.addTrait(self.kId)

    @classmethod
    def imbueTo(cls, traitsData):
        """
        Adds this trait to the provided data.

        If the data already has this trait, it is a no-op.
        """
        traitsData.addTrait(cls.kId)

    

