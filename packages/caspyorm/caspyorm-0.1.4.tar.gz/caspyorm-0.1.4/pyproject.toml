[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "caspyorm"
version = "0.1.4"
authors = [
  { name="CaspyORM Team", email="team@caspyorm.dev" },
]
description = "Um ORM moderno e eficiente para Apache Cassandra"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["cassandra", "orm", "database", "pydantic", "fastapi", "nosql"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: FastAPI",
    "Typing :: Typed",
]

dependencies = [
  "cassandra-driver>=3.28.0",
  "pydantic>=2.0.0",
  "typing-extensions>=4.0.0",
  "typer[all]>=0.9.0",
  "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-material-extensions>=1.3.0",
]
test = [
    "pytest>=8.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
]
fastapi = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "pydantic>=2.0.0",
]

[project.scripts]
caspy = "cli.main:app"

[project.urls]
Homepage = "https://github.com/caspyorm/caspyorm"
Documentation = "https://caspyorm.readthedocs.io"
Repository = "https://github.com/caspyorm/caspyorm"
"Bug Tracker" = "https://github.com/caspyorm/caspyorm/issues"
"Source Code" = "https://github.com/caspyorm/caspyorm"

[tool.hatch.build.targets.wheel]
packages = ["caspyorm", "cli"]
exclude = [
    "tests/",
    "scripts/",
    "examples/",
    "docs/",
    "venv/",
    "*.egg-info/",
    ".git/",
    ".pytest_cache/",
    "__pycache__/",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    ".coverage",
    "htmlcov/",
    ".mypy_cache/",
    ".ruff_cache/",
    ".pypirc",
    "coverage.xml",
    "dist/",
    ".gitignore",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py38']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cassandra.*",
    "pydantic.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=caspyorm",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marca testes que usam async/await",
] 