[project]
name = "emfitapi-python"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
]

[dependency-groups]
dev = [
    "bandit>=1.8.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "responses>=0.25.7",
    "ruff>=0.12.2",
    "safety>=3.3.1",
    "ty",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=emfit --cov-report=term-missing --cov-report=html --cov-report=xml"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "e2e: marks tests as end-to-end (deselect with '-m \"not e2e\"')",
]

[tool.coverage.run]
source = ["emfit"]
omit = [
    "tests/*",
    "example.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv.sources]
ty = { git = "https://github.com/astral-sh/ty" }
