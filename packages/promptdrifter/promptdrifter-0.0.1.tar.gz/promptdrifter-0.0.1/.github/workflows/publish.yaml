name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use current version)'
        required: false
        type: string

jobs:
  build-and-test:
    uses: ./.github/workflows/shared-build-and-test.yaml
    with:
      upload-artifacts: true
      artifact-name: 'python-package-dist'
      update-version-for-pr: false
      run-integration-tests: true

  publish-to-pypi:
    needs: build-and-test
    uses: ./.github/workflows/shared-publish-package.yaml
    with:
      is-test-pypi: false
    secrets: inherit
    permissions:
      pull-requests: write

  tag-release:
    needs: [build-and-test, publish-to-pypi]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: ⤵️ Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: 🚀 Install uv
      uses: astral-sh/setup-uv@v6

    - name: ⤵️ Download dist artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-dist
        path: dist/

    - name: 📖 Read version from built package
      id: get_version
      run: |
        if [ -n "${{ inputs.version }}" ]; then
          echo "version=${{ inputs.version }}" >> "$GITHUB_OUTPUT"
        else
          VERSION=$(uv run python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
        fi

    - name: 🏷️ Create and push tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v${{ steps.get_version.outputs.version }}" -m "Release v${{ steps.get_version.outputs.version }}"
        git push origin "v${{ steps.get_version.outputs.version }}"
