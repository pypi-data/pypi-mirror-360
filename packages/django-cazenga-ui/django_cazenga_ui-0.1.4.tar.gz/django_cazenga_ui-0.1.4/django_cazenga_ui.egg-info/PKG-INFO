Metadata-Version: 2.4
Name: django-cazenga-ui
Version: 0.1.4
Summary: Biblioteca moderna de componentes UI para Django usando Tailwind CSS v4 e Alpine.js
Author-email: Comunidade Cazenga <contato@cazenga.com>
License: MIT
Project-URL: Homepage, https://github.com/cazenga/django-cazenga-ui
Project-URL: Documentation, https://django-cazenga-ui.readthedocs.io
Project-URL: Repository, https://github.com/cazenga/django-cazenga-ui
Project-URL: Issues, https://github.com/cazenga/django-cazenga-ui/issues
Project-URL: Changelog, https://github.com/cazenga/django-cazenga-ui/blob/main/CHANGELOG.md
Keywords: django,tailwind,ui,components,alpine,shadcn
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 3.2
Classifier: Framework :: Django :: 4.0
Classifier: Framework :: Django :: 4.1
Classifier: Framework :: Django :: 4.2
Classifier: Framework :: Django :: 5.0
Classifier: Framework :: Django :: 5.1
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: Django>=3.2
Requires-Dist: django-tailwind[reload]
Requires-Dist: django-browser-reload
Requires-Dist: django-mathfilters
Provides-Extra: tailwind
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-django; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: django-stubs[compatible-mypy]; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-django; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Dynamic: license-file

# Django Cazenga UI

Biblioteca moderna de componentes UI para Django usando Tailwind CSS v4 e Alpine.js, inspirada no shadcn/ui.

## üöÄ Quick Start

### 1. Instala√ß√£o
```bash
pip install django-cazenga-ui
```

### 2. Auto-configura√ß√£o (Recomendado)
```bash
cazenga-setup --auto-configure
```

### 3. Inicializa√ß√£o Interativa
```bash
python manage.py cazenga init --with-tailwind
```
**‚ö†Ô∏è IMPORTANTE**: O comando ir√° parar e pedir para voc√™ adicionar `'theme'` ao `INSTALLED_APPS` manualmente. Ap√≥s adicionar, digite `1` para continuar.

### 4. Configura√ß√£o Manual (Alternativa)
Se preferir configurar manualmente antes:

```python
# settings.py
INSTALLED_APPS += [
    'tailwind',
    'cazenga_ui',
    'django_browser_reload',
    'mathfilters',
    # 'theme',  # ‚Üê Ser√° adicionado durante 'cazenga init'
]

MIDDLEWARE += [
    'django_browser_reload.middleware.BrowserReloadMiddleware',
]

TAILWIND_APP_NAME = 'theme'
NPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"  # Windows
# NPM_BIN_PATH = "/usr/local/bin/npm"  # macOS/Linux
```

### 5. Diagn√≥stico e Ajuda
```bash
cazenga-setup  # Status e orienta√ß√µes
python manage.py cazenga status  # Verificar configura√ß√£o
```

## üìã Fluxo Completo de Instala√ß√£o

### Cen√°rio A: Projeto Novo (Recomendado)
```bash
# 1. Instalar
pip install django-cazenga-ui

# 2. Auto-configurar depend√™ncias
cazenga-setup --auto-configure
# ‚úÖ Configura automaticamente settings.py e urls.py

# 3. Inicializar (Processo Interativo)
python manage.py cazenga init --with-tailwind --theme default
# ‚è∏Ô∏è COMANDO IR√Å PARAR e mostrar:
# "üìã Voc√™ precisa adicionar a app 'theme' ao INSTALLED_APPS"
# 
# 4. Adicionar 'theme' ao settings.py:
# INSTALLED_APPS += ['theme']
# 
# 5. Digitar '1' para continuar
# ‚úÖ Comando finaliza automaticamente

# 6. Executar projeto
python manage.py runserver
```

### Cen√°rio B: Configura√ß√£o Manual
```bash
# 1. Instalar
pip install django-cazenga-ui

# 2. Configurar settings.py manualmente (ver Quick Start)

# 3. Inicializar (mesmo processo interativo)
python manage.py cazenga init --with-tailwind

# 4. Quando parar, adicionar 'theme' ao INSTALLED_APPS
# 5. Digitar '1' para continuar
```

### Cen√°rio C: Diagn√≥stico de Problemas
```bash
# Se receber "Unknown command: 'cazenga'"
cazenga-setup
# ‚úÖ Mostra status e orienta√ß√µes detalhadas

# Seguir as orienta√ß√µes e depois:
python manage.py cazenga init --with-tailwind
```

## ‚ö†Ô∏è Troubleshooting

### "Unknown command: 'cazenga'"
- **Causa**: `cazenga_ui` n√£o est√° no `INSTALLED_APPS`
- **Solu√ß√£o**: Adicionar `'cazenga_ui'` ao `INSTALLED_APPS` no settings.py

### "Unknown command: 'tailwind'"  
- **Causa**: `tailwind` n√£o est√° no `INSTALLED_APPS`
- **Solu√ß√£o**: Adicionar `'tailwind'` ao `INSTALLED_APPS` no settings.py

### "TAILWIND_APP_NAME isn't set"
- **Causa**: Configura√ß√£o incompleta
- **Solu√ß√£o**: Adicionar `TAILWIND_APP_NAME = 'theme'` ao settings.py

## üéØ Arquitetura

```
projeto/
‚îú‚îÄ‚îÄ settings.py
‚îÇ   ‚îú‚îÄ‚îÄ INSTALLED_APPS = ['tailwind', 'cazenga_ui', 'theme', ...]
‚îÇ   ‚îî‚îÄ‚îÄ TAILWIND_APP_NAME = 'theme'
‚îú‚îÄ‚îÄ cazenga_ui/          # ‚Üê Biblioteca (pip install)
‚îî‚îÄ‚îÄ theme/               # ‚Üê App Django local (django-tailwind)
    ‚îú‚îÄ‚îÄ static_src/      # ‚Üê Arquivos fonte CSS
    ‚îú‚îÄ‚îÄ static/          # ‚Üê CSS compilado
    ‚îî‚îÄ‚îÄ templates/       # ‚Üê Templates base
```

- **cazenga_ui** = biblioteca com comandos e funcionalidades
- **theme** = app Django local com templates e assets est√°ticos

---

## üì¶ Caracter√≠sticas

- **53 componentes** prontos para uso
- **6 temas de cores** (azul, laranja, verde, roxo, vermelho, amarelo)
- **333 √≠cones SVG** do Radix Icons
- **5 arquivos JavaScript** (incluindo sistema SPA completo)
- **Integra√ß√£o opcional** com django-tailwind
- **Comandos CLI** poderosos para gest√£o de componentes

## üìã Pr√©-requisitos

- **Python 3.8+**
- **Django 3.2+**
- **Node.js 16+** (requerido para `--with-tailwind`)
- **npm** (inclu√≠do com Node.js)

### Instala√ß√£o do Node.js

**Windows:**
```bash
# Baixe de: https://nodejs.org
# Ou use chocolatey:
choco install nodejs
```

**macOS:**
```bash
# Usando Homebrew:
brew install node
```

**Linux (Ubuntu/Debian):**
```bash
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs
```

### Configura√ß√£o do NPM (Windows)

Se encontrar problemas com npm no Windows, adicione ao `settings.py`:
```python
NPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"
```

## üöÄ Instala√ß√£o

```bash
# Instala√ß√£o (inclui depend√™ncias Tailwind)
pip install django-cazenga-ui

# Nota: tamb√©m funciona com [tailwind] por compatibilidade
pip install django-cazenga-ui[tailwind]
```

## ‚öôÔ∏è Configura√ß√£o

### 1. Adicione ao INSTALLED_APPS

```python
# settings.py
INSTALLED_APPS = [
    # ... outras apps
    'cazenga_ui',
    'tailwind',  # se usando django-tailwind
    'theme',     # se usando django-tailwind
]
```

### 2. Inicialize o projeto

```bash
# Inicializa√ß√£o b√°sica
python manage.py cazenga init

# Com django-tailwind (recomendado)
python manage.py cazenga init --with-tailwind

# Com tema espec√≠fico
python manage.py cazenga init --theme roxo --with-tailwind
```

### 3. Compile os estilos

```bash
# Se usando django-tailwind
python manage.py tailwind build

# Para desenvolvimento
python manage.py tailwind start
```

## üé® Temas Dispon√≠veis

A biblioteca oferece 6 temas de cores pr√©-configurados:

- **azul** - Tema cl√°ssico em tons de azul
- **laranja** - Tema energ√©tico em tons de laranja  
- **verde** - Tema natural em tons de verde
- **roxo** - Tema moderno em tons de roxo
- **vermelho** - Tema vibrante em tons de vermelho
- **amarelo** - Tema alegre em tons de amarelo

### Alternar Tema

```bash
# Listar temas dispon√≠veis
python manage.py cazenga themes

# Alterar tema atual
python manage.py cazenga switch-theme verde
```

## üìÇ Estrutura de Componentes

Os componentes est√£o organizados em duas pastas principais:

### UI Components (`components/ui/`)
Cont√©m a maioria dos componentes de interface:
- **B√°sicos**: button, card, badge, avatar
- **Formul√°rios**: input, textarea, checkbox, select, form
- **Navega√ß√£o**: sidebar, tabs, breadcrumb, pagination
- **Feedback**: alert, progress, skeleton, spinner
- **Overlays**: dialog, modal, drawer, popover, tooltip
- **Interativos**: accordion, carousel, dropdown, toggle
- **Dados**: table, chart, calendar
- **Utilit√°rios**: separator, aspect-ratio, scroll-area

### Layout Components (`components/layout/`)
Cont√©m estruturas de layout de p√°gina:
- **layout** - Estruturas de p√°gina completas

## üîß Comandos CLI

### Comando Principal: `cazenga`

```bash
# Inicializar projeto
python manage.py cazenga init
python manage.py cazenga init --with-tailwind
python manage.py cazenga init --theme roxo

# Gerenciar temas
python manage.py cazenga themes
python manage.py cazenga switch-theme verde

# Verificar status
python manage.py cazenga status
```

### Comando de Componentes: `ui`

```bash
# Listar componentes
python manage.py ui list
python manage.py ui list --category form
python manage.py ui list --folder ui

# Informa√ß√µes de componente
python manage.py ui info button

# Adicionar componentes
python manage.py ui add button
python manage.py ui add form --with-dependencies

# Gerenciar √≠cones
python manage.py ui icons --install
python manage.py ui icons --count
```

## üí° Uso B√°sico

### 1. Adicionar Componentes

```bash
# Instalar um bot√£o
python manage.py ui add button

# Instalar formul√°rio com depend√™ncias
python manage.py ui add form --with-dependencies
```

### 2. Usar nos Templates

```html
<!-- Template base -->
{% extends "base.html" %}
{% load icon_tags %}

{% block content %}
    <!-- Bot√£o -->
    {% include "components/ui/button.html" %}
    
    <!-- Card -->
    {% include "components/ui/card.html" %}
    
    <!-- Layout completo -->
    {% include "components/layout/layout.html" %}
{% endblock %}
```

### 3. √çcones

```html
{% load icon_tags %}

<!-- √çcone b√°sico -->
{% icon "check" %}

<!-- Com classes CSS -->
{% icon "check" class="w-4 h-4 text-green-500" %}

<!-- Com atributos -->
{% icon "star" class="w-6 h-6" title="Favorito" %}
```

## üéØ Componentes por Categoria

### B√°sicos (4 componentes)
- **button** [9 varia√ß√µes] - Bot√£o interativo
- **card** [3 varia√ß√µes] - Container de conte√∫do  
- **badge** [5 varia√ß√µes] - R√≥tulos de status
- **avatar** [4 varia√ß√µes] - Imagens de perfil

### Formul√°rios (8 componentes)
- **input** [7 varia√ß√µes] - Campos de texto
- **textarea** [4 varia√ß√µes] - Texto multilinha
- **checkbox** [4 varia√ß√µes] - Sele√ß√£o m√∫ltipla
- **radio-group** [3 varia√ß√µes] - Sele√ß√£o exclusiva
- **select** [6 varia√ß√µes] - Lista suspensa üîß
- **switch** [3 varia√ß√µes] - Alternador on/off
- **form** [3 varia√ß√µes] - Container de formul√°rio
- **label** [2 varia√ß√µes] - R√≥tulos de campos

### Navega√ß√£o (6 componentes)
- **sidebar** [5 varia√ß√µes] - Painel lateral üîß
- **tabs** [4 varia√ß√µes] - Navega√ß√£o em abas üîß
- **breadcrumb** [3 varia√ß√µes] - Trilha de navega√ß√£o
- **pagination** [4 varia√ß√µes] - Navega√ß√£o de p√°ginas
- **navigation-menu** [5 varia√ß√µes] - Menu principal üîß
- **menubar** [4 varia√ß√µes] - Barra de menu üîß

### Feedback (5 componentes)
- **alert** [5 varia√ß√µes] - Mensagens de alerta
- **progress** [4 varia√ß√µes] - Indicador de progresso
- **skeleton** [5 varia√ß√µes] - Placeholder animado
- **spinner** [6 varia√ß√µes] - Indicador de carregamento
- **sonner** [8 varia√ß√µes] - Sistema de notifica√ß√µes üîß

### Overlays (7 componentes)
- **dialog** [5 varia√ß√µes] - Janela modal üîß
- **alert-dialog** [3 varia√ß√µes] - Dialog de confirma√ß√£o üîß
- **drawer** [3 varia√ß√µes] - Painel deslizante üîß
- **modal** [5 varia√ß√µes] - Modal simples üîß
- **sheet** [4 varia√ß√µes] - Painel inferior/lateral üîß
- **popover** [5 varia√ß√µes] - Popup contextual üîß
- **tooltip** [4 varia√ß√µes] - Dica ao passar mouse üîß

### Interativos (10 componentes)
- **accordion** [4 varia√ß√µes] - Lista expans√≠vel üîß
- **carousel** [3 varia√ß√µes] - Slider de imagens üîß
- **collapsible** [3 varia√ß√µes] - Se√ß√£o recolh√≠vel üîß
- **command** [5 varia√ß√µes] - Paleta de comandos üîß
- **context-menu** [3 varia√ß√µes] - Menu contextual üîß
- **dropdown** [5 varia√ß√µes] - Menu suspenso üîß
- **dropdown-menu** [4 varia√ß√µes] - Menu avan√ßado üîß
- **hover-card** [4 varia√ß√µes] - Card ao passar mouse üîß
- **toggle** [4 varia√ß√µes] - Bot√£o de altern√¢ncia üîß
- **toggle-group** [3 varia√ß√µes] - Grupo de toggles üîß

### Dados (3 componentes)
- **table** [5 varia√ß√µes] - Tabela de dados üîß
- **chart** [4 varia√ß√µes] - Gr√°ficos e visualiza√ß√µes üîß
- **calendar** [5 varia√ß√µes] - Seletor de data üîß

### Layout (1 componente)
- **layout** [4 varia√ß√µes] - Estruturas de p√°gina

### Utilit√°rios (5 componentes)
- **separator** [2 varia√ß√µes] - Linha divis√≥ria
- **aspect-ratio** [3 varia√ß√µes] - Container com propor√ß√£o
- **scroll-area** [6 varia√ß√µes] - √Årea com scroll üîß
- **resizable** [5 varia√ß√µes] - Pain√©is redimension√°veis üîß
- **icon** [1 varia√ß√£o] - Sistema de √≠cones SVG

### Especializados (4 componentes)
- **input-otp** [7 varia√ß√µes] - Input para c√≥digos OTP üîß
- **slider** [6 varia√ß√µes] - Controle deslizante üîß
- **text-editor** [6 varia√ß√µes] - Editor de texto rico üîß
- **content-manager** [4 varia√ß√µes] - Sistema de CMS üîß

üîß = Requer JavaScript (Alpine.js)

## üóÇÔ∏è Arquivos JavaScript Inclu√≠dos

- **spa.js** - Sistema SPA completo (385 linhas)
- **spa-intelligent.js** - SPA com funcionalidades avan√ßadas
- **spa-simple.js** - SPA b√°sico e leve
- **spa-debug.js** - SPA com debug habilitado
- **sidebar-highlight.js** - Destaque autom√°tico de links do sidebar

## üìã Status do Projeto

```bash
# Verificar configura√ß√£o atual
python manage.py cazenga status
```

## ü§ù Filosofia

Django Cazenga UI **n√£o √© uma biblioteca tradicional**. Em vez de importar componentes como "caixa preta", ela **copia o c√≥digo-fonte diretamente** para seu projeto, dando **controle total** sobre cada linha de c√≥digo.

### Vantagens:
- ‚úÖ **Controle total** sobre o c√≥digo
- ‚úÖ **F√°cil personaliza√ß√£o** de estilos e comportamento
- ‚úÖ **Sem depend√™ncias ocultas** em runtime
- ‚úÖ **C√≥digo transparente** e modific√°vel
- ‚úÖ **Aprendizado** atrav√©s do c√≥digo gerado

## üìö Exemplos de Uso

### Template Base Completo

```html
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Django Cazenga UI{% endblock %}</title>
    
    {% load tailwind_tags %}
    {% tailwind_css %}
    
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    {% load icon_tags %}
</head>
<body class="bg-background text-foreground">
    <div id="app">
        {% block content %}{% endblock %}
    </div>
</body>
</html>
```

### P√°gina com Componentes

```html
{% extends "base.html" %}

{% block content %}
<div class="container mx-auto p-6">
    <!-- Card com conte√∫do -->
    <div class="card max-w-md mx-auto">
        <div class="card-header">
            <h2 class="card-title">Bem-vindo</h2>
            <p class="card-description">Sistema Django Cazenga UI</p>
        </div>
        <div class="card-content">
            <!-- Formul√°rio -->
            {% include "components/ui/form.html" %}
        </div>
        <div class="card-footer">
            <!-- Bot√µes -->
            {% include "components/ui/button.html" %}
        </div>
    </div>
    
    <!-- Alertas -->
    {% include "components/ui/alert.html" %}
    
    <!-- √çcones -->
    <div class="flex gap-4 mt-6">
        {% icon "check" class="w-6 h-6 text-green-500" %}
        {% icon "star" class="w-6 h-6 text-yellow-500" %}
        {% icon "heart" class="w-6 h-6 text-red-500" %}
    </div>
</div>
{% endblock %}
```

## üîÑ Atualiza√ß√µes

Para manter a biblioteca atualizada:

```bash
pip install --upgrade django-cazenga-ui
```

## üìñ Documenta√ß√£o Adicional

- [Guia de Contribui√ß√£o](CONTRIBUTING.md)
- [Changelog](CHANGELOG.md)
- [Testes](tests/)

## üìÑ Licen√ßa

MIT License - veja [LICENSE](LICENSE) para detalhes.

---

**Django Cazenga UI** - Desenvolvimento r√°pido, controle total. üöÄ
