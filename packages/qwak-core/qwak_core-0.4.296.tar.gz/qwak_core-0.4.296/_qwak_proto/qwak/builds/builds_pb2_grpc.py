# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from _qwak_proto.qwak.builds import builds_pb2 as qwak_dot_builds_dot_builds__pb2


class BuildsManagementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterBuild = channel.unary_unary(
                '/qwak.builds.management.BuildsManagementService/RegisterBuild',
                request_serializer=qwak_dot_builds_dot_builds__pb2.RegisterBuildRequest.SerializeToString,
                response_deserializer=qwak_dot_builds_dot_builds__pb2.RegisterBuildResponse.FromString,
                )
        self.UpdateBuildStatus = channel.unary_unary(
                '/qwak.builds.management.BuildsManagementService/UpdateBuildStatus',
                request_serializer=qwak_dot_builds_dot_builds__pb2.UpdateBuildStatusRequest.SerializeToString,
                response_deserializer=qwak_dot_builds_dot_builds__pb2.UpdateBuildStatusResponse.FromString,
                )
        self.RegisterModelSchema = channel.unary_unary(
                '/qwak.builds.management.BuildsManagementService/RegisterModelSchema',
                request_serializer=qwak_dot_builds_dot_builds__pb2.RegisterModelSchemaRequest.SerializeToString,
                response_deserializer=qwak_dot_builds_dot_builds__pb2.RegisterModelSchemaResponse.FromString,
                )
        self.RegisterExperimentTrackingValues = channel.unary_unary(
                '/qwak.builds.management.BuildsManagementService/RegisterExperimentTrackingValues',
                request_serializer=qwak_dot_builds_dot_builds__pb2.RegisterExperimentTrackingValuesRequest.SerializeToString,
                response_deserializer=qwak_dot_builds_dot_builds__pb2.RegisterExperimentTrackingValuesResponse.FromString,
                )
        self.GetBuild = channel.unary_unary(
                '/qwak.builds.management.BuildsManagementService/GetBuild',
                request_serializer=qwak_dot_builds_dot_builds__pb2.GetBuildRequest.SerializeToString,
                response_deserializer=qwak_dot_builds_dot_builds__pb2.GetBuildResponse.FromString,
                )
        self.ListBuilds = channel.unary_unary(
                '/qwak.builds.management.BuildsManagementService/ListBuilds',
                request_serializer=qwak_dot_builds_dot_builds__pb2.ListBuildsRequest.SerializeToString,
                response_deserializer=qwak_dot_builds_dot_builds__pb2.ListBuildsResponse.FromString,
                )


class BuildsManagementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterBuild(self, request, context):
        """Register a Qwak build
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBuildStatus(self, request, context):
        """Update Build Status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterModelSchema(self, request, context):
        """Register model schema (interface) as part of a build
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterExperimentTrackingValues(self, request, context):
        """Register Qwak metrics and params
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuild(self, request, context):
        """Get build
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBuilds(self, request, context):
        """List registered builds for the given branch
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BuildsManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterBuild': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterBuild,
                    request_deserializer=qwak_dot_builds_dot_builds__pb2.RegisterBuildRequest.FromString,
                    response_serializer=qwak_dot_builds_dot_builds__pb2.RegisterBuildResponse.SerializeToString,
            ),
            'UpdateBuildStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBuildStatus,
                    request_deserializer=qwak_dot_builds_dot_builds__pb2.UpdateBuildStatusRequest.FromString,
                    response_serializer=qwak_dot_builds_dot_builds__pb2.UpdateBuildStatusResponse.SerializeToString,
            ),
            'RegisterModelSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterModelSchema,
                    request_deserializer=qwak_dot_builds_dot_builds__pb2.RegisterModelSchemaRequest.FromString,
                    response_serializer=qwak_dot_builds_dot_builds__pb2.RegisterModelSchemaResponse.SerializeToString,
            ),
            'RegisterExperimentTrackingValues': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterExperimentTrackingValues,
                    request_deserializer=qwak_dot_builds_dot_builds__pb2.RegisterExperimentTrackingValuesRequest.FromString,
                    response_serializer=qwak_dot_builds_dot_builds__pb2.RegisterExperimentTrackingValuesResponse.SerializeToString,
            ),
            'GetBuild': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuild,
                    request_deserializer=qwak_dot_builds_dot_builds__pb2.GetBuildRequest.FromString,
                    response_serializer=qwak_dot_builds_dot_builds__pb2.GetBuildResponse.SerializeToString,
            ),
            'ListBuilds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBuilds,
                    request_deserializer=qwak_dot_builds_dot_builds__pb2.ListBuildsRequest.FromString,
                    response_serializer=qwak_dot_builds_dot_builds__pb2.ListBuildsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qwak.builds.management.BuildsManagementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BuildsManagementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterBuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.builds.management.BuildsManagementService/RegisterBuild',
            qwak_dot_builds_dot_builds__pb2.RegisterBuildRequest.SerializeToString,
            qwak_dot_builds_dot_builds__pb2.RegisterBuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBuildStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.builds.management.BuildsManagementService/UpdateBuildStatus',
            qwak_dot_builds_dot_builds__pb2.UpdateBuildStatusRequest.SerializeToString,
            qwak_dot_builds_dot_builds__pb2.UpdateBuildStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterModelSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.builds.management.BuildsManagementService/RegisterModelSchema',
            qwak_dot_builds_dot_builds__pb2.RegisterModelSchemaRequest.SerializeToString,
            qwak_dot_builds_dot_builds__pb2.RegisterModelSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterExperimentTrackingValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.builds.management.BuildsManagementService/RegisterExperimentTrackingValues',
            qwak_dot_builds_dot_builds__pb2.RegisterExperimentTrackingValuesRequest.SerializeToString,
            qwak_dot_builds_dot_builds__pb2.RegisterExperimentTrackingValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.builds.management.BuildsManagementService/GetBuild',
            qwak_dot_builds_dot_builds__pb2.GetBuildRequest.SerializeToString,
            qwak_dot_builds_dot_builds__pb2.GetBuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBuilds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.builds.management.BuildsManagementService/ListBuilds',
            qwak_dot_builds_dot_builds__pb2.ListBuildsRequest.SerializeToString,
            qwak_dot_builds_dot_builds__pb2.ListBuildsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
