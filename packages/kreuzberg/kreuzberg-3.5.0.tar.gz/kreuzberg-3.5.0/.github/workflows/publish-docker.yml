
name: Publish Docker Images

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - name: core
            extras: ""
            tag_suffix: ""
          - name: easyocr
            extras: "easyocr"
            tag_suffix: "-easyocr"
          - name: paddle
            extras: "paddleocr"
            tag_suffix: "-paddle"
          - name: gmft
            extras: "gmft"
            tag_suffix: "-gmft"
          - name: all
            extras: "all"
            tag_suffix: "-all"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch || github.ref }}

      - name: Get release version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # For manual dispatch, get the latest tag by listing all tags
            git fetch --tags
            VERSION=$(git tag --sort=-version:refname | head -n1)
          else
            # For workflow_run, use the head branch
            VERSION="${{ github.event.workflow_run.head_branch }}"
            # If triggered by a tag, extract version
            if [[ "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
              VERSION="$VERSION"
            else
              # Get the latest tag by listing all tags
              git fetch --tags
              VERSION=$(git tag --sort=-version:refname | head -n1)
            fi
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: goldziher/kreuzberg
          tags: |
            # Release version tag (e.g., v3.0.0-easyocr)
            type=raw,value=${{ steps.get_version.outputs.VERSION }}${{ matrix.tag_suffix }}
            # Latest tag for each variant (e.g., latest-easyocr)
            type=raw,value=latest${{ matrix.tag_suffix }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./.docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            EXTRAS=${{ matrix.extras }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Update Docker Hub README
        uses: peter-evans/dockerhub-description@v4
        if: matrix.name == 'core'
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: goldziher/kreuzberg
          readme-filepath: ./.docker/README.md
