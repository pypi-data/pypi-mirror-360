[project]
name = "truelink"
dynamic = ["version"]
description = "Extract direct download links from various URL formats"
authors = [
    {name = "5hojib", email = "yesiamshojib@ganil.com"}
]
maintainers = [
    {name = "5hojib", email = "yesiamshojib@ganil.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["download", "link", "extractor", "direct-link", "url"]
dependencies = [
    "aiohttp>=3.8.0",
    "lxml>=4.9.0",
    "validators>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "flake8>=6.0.0",
    "types-requests>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/5hojib/truelink"
Repository = "https://github.com/5hojib/truelink"
Documentation = "https://github.com/5hojib/truelink#readme"
Issues = "https://github.com/5hojib/truelink/issues"
Changelog = "https://github.com/5hojib/truelink/releases"

[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/truelink/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/truelink"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "-v --strict-markers"
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/truelink"]
omit = ["tests/*", "src/truelink/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
