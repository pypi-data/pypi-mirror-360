name: Check and create tag
on:
  push:
    branches:
      - main
    paths:
      - _metadata.py

jobs:
  new_version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: qoomon/actions--context@v3
        id: context
      - name: Determine branch name
        id: branch-names
        run: echo "current_branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Get version number
        run: |
          echo "CURR_VER=v$(python -c "import runpy;runpy.run_path('_metadata.py', None, '__github__')")" >> $GITHUB_ENV
      - name: Check if version exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: mukunku/tag-exists-action@v1.0.0
        id: tagcheck
        with:
          tag: ${{ env.CURR_VER }}

      - name: Make tag
        uses: actions/github-script@v3
        if: steps.tagcheck.outputs.exists == 'false'
        with:
          github-token: ${{ secrets.WORKFLOW_TOKEN }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${process.env.CURR_VER}`,
              sha: context.sha
            })
      - name: Fallback
        if: steps.tagcheck.outputs.exists == 'true'
        run: echo "Nothing to see here, move along citizen"

      - name: Post webhook for failure
        if: failure()
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          embed-url: ${{ steps.context.outputs.job_log_url }}
          embed-title: "[${{ github.event.repository.name }}] ${{ steps.context.outputs.job }} failed on ${{ steps.branch-names.outputs.current_branch }}"
          username: "GitHub - ${{ github.repository }}"
          avatar-url: https://github.githubassets.com/favicons/favicon.png
