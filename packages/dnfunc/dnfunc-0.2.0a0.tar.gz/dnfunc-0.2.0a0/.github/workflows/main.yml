name: Main

on:
  push:
    branches: [main]
    tags: [v*.*.*]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup vapoursynth
        uses: deadnews/action-setup-vs@main

      - name: Install uv
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba # v6.3.1
        with:
          enable-cache: true

      - name: Install project
        run: uv sync --frozen

      - name: Lint code
        run: make lint

  pypi-deploy:
    name: Release to PyPI
    if: github.ref_type == 'tag'
    needs: [lint]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba # v6.3.1
        with:
          enable-cache: true

      - name: Build package
        run: uv build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4

  github-deploy:
    name: Release to GitHub
    if: github.ref_type == 'tag'
    needs: [lint]
    environment: github-releases
    permissions:
      contents: write
    env:
      CHANGELOG: https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md
      PRERELEASE: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub Release
        run: |
          gh release create ${{ github.ref_name }} \
            --title ${{ github.ref_name }} \
            --notes="See [the CHANGELOG](${{ env.CHANGELOG }}) for more details." \
            --draft=${{ env.PRERELEASE }} \
            --prerelease=${{ env.PRERELEASE }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
