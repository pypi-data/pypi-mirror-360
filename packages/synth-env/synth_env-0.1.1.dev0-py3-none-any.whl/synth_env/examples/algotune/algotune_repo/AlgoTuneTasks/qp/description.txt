QP Task:

Solve this convex quadratic optimization problem in standard form:

    minimize (1/2) x^T P x + q^T x
  subject to Gx <= h
             Ax == b

The matrix P is an (n x n)-dimensional positive semi-definite
for the quadratic term on the cost,
q is an n-dimensional real-valued vector for the linear term in the cost,
G is an (m x n)-dimensional real-valued matrix for the inequality constraints,
h is an m-dimensional real-valued vector for the inequality constraint,
A is a (p x n)-dimensional real-valued matrix for the equality constraint, and
b is a p-dimensional real-valued vector for the equality constraint.

Given input parameters (P, q, G, h, A, b), compute and return
the n-dimensional solution vector.

Input: A dictionary with keys:
  - "Q": A list of n lists of numbers representing the matrix Q.
  - "q": A list of n numbers representing the vector q.
  - "G": A list of m lists of numbers representing the matrix G.
  - "h": A list of m numbers representing the vector h.
  - "A": A list of p lists of numbers representing the matrix A.
  - "b": A list of p numbers representing the vector b.

Example input:
{
  "Q": [[1, 0], [0, 1]],
  "q": [0, 0],
  "G": [[-1, 0], [0, -1]],
  "h": [0, 0],
  "A": [[1, 1]],
  "b": [1]
}

Output: A dictionary with keys:
  - "solution": A list of n numbers representing the optimal (primal) solution.

Example output:
{
    "solution": [0.5, 0.5]
}

Category: convex_optimization