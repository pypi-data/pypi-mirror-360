[project]
name = "nornir-jsonrpc"
version = "0.2.13"
description = "Nornir connection plugin for the JSON RPC protocol"
readme = "README.md"
authors = [{ name = "David Gethings", email = "dgethings@me.com" }]
requires-python = ">=3.11"
license = { file = "LICENSE" }
keywords = ["nornir", "jsonrpc"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Framework :: Pydantic :: 2",
  "Framework :: Pytest",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Topic :: System :: Networking",
  "Typing :: Typed",
]
dependencies = ["httpx>=0.28.1", "nornir>=3.5.0", "pydantic>=2.10.6"]
[project.urls]
Repository = "https://github.com/dgethings/nornir_jsonrpc/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
release = ["python-semantic-release>=10.2.0"]
dev = ["pytest>=8.3.5", "pytest-httpx>=0.35.0", "ruff"]
[project.optional-dependencies]
build = ["uv ~= 0.7.19"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = """
    python -m pip install -e '.[build]'
    uv lock --upgrade-package "$PACKAGE_NAME"
    git add uv.lock
    uv build
"""
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
# repo_dir = "/Users/dgethings/git/nornir_jsonrpc"
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "update"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = true

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "style",
  "refactor",
  "test",
]
allowed_tags = [
  "feat",
  "fix",
  "perf",
  "build",
  "chore",
  "ci",
  "docs",
  "style",
  "refactor",
  "test",
]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = true

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
