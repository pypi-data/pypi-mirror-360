[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "benchwise"
version = "0.1.0a0"
description = "The GitHub of LLM Evaluation - Python SDK"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Bhuvnesh Sharma", email = "bhuvnesh875@gmail.com"},
]
keywords = ["llm", "evaluation", "benchmarking", "ai", "ml"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Testing",
]
dependencies = [
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "requests>=2.28.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]

[project.optional-dependencies]
metrics = [
    "rouge-score>=0.1.2",
    "sacrebleu>=2.3.0",
    "bert-score>=0.3.13",
    "nltk>=3.8.0",
]
llm-apis = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
]
transformers = [
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "sentence-transformers>=2.2.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.6",
    "pre-commit>=3.0.0",
    "mypy>=1.0.0",
    "psutil>=5.9.0",
]
all = [
    "rouge-score>=0.1.2",
    "sacrebleu>=2.3.0",
    "bert-score>=0.3.13",
    "nltk>=3.8.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "sentence-transformers>=2.2.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.6",
    "pre-commit>=3.0.0",
    "mypy>=1.0.0",
    "psutil>=5.9.0",
]

[project.urls]
Homepage = "https://github.com/Benchwise/benchwise"
Repository = "https://github.com/Benchwise/benchwise"
Issues = "https://github.com/Benchwise/benchwise/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["benchwise*"]
exclude = ["tests*"]

[tool.ruff]
# Same as Black
line-length = 88
indent-width = 4

# Assume Python 3.11+
target-version = "py311"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[project.scripts]
benchwise = "benchwise.cli:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
"--verbose",
"--tb=short",
"--color=yes",
"--asyncio-mode=auto"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests that may take a while",
    "api: Tests that require API access",
    "mock: Tests using mock models",
    "memory: Memory usage tests",
    "rate_limit: Rate limiting tests",
]
asyncio_mode = "auto"
