[build-system]
requires = ["maturin>=1.5,<2.0"]
build-backend = "maturin"

[project]
name = "prelude-parser"
requires-python = ">=3.10"
description = "Parses XML files exported from Prelude EDC into formats usable by Python."
authors = [{name = "Paul Sanders", email = "paul@pbsdatasolutions.com"}]
keywords = ["parser", "prelude-edc", "xml", "pandas", "polars"]
classifiers = [
  "Programming Language :: Rust",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Rust",
  "License :: OSI Approved :: MIT License",
  "Typing :: Typed",
]
license = {file = "LICENSE"}
readme = "README.md"
dynamic = ["version"]
repository = "https://github.com/pbs-data-solutions/prelude-parser"
homepage = "https://github.com/pbs-data-solutions/prelude-parser"
documentation = "https://github.com/pbs-data-solutions/prelude-parser"
dependencies = ["camel-converter>=3.0.0"]

[project.optional-dependencies]
pandas = ["pandas>=2.1.0"]
polars = ["polars>=0.17.14"]
all = ["pandas>=2.1.0", "polars>=0.17.14"]

[dependency-groups]
dev = [
  "maturin==1.7.4",
  "mypy==1.13.0",
  "pandas-stubs==2.2.3.241009",
  "pytest==8.3.3",
  "pytest-cov==6.0.0",
  "ruff==0.8.0",
  "tomli==2.0.2; python_version<'3.11'",
]

[tool.maturin]
module-name = "prelude_parser._prelude_parser"
binding = "pyo3"
features = ["pyo3/extension-module"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=prelude_parser --cov-report term-missing --no-cov-on-fail"

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.ruff]
line-length = 100
target-version = "py39"
fix = true

[tool.ruff.lint]
select=[
  "E",  # pycodestyle
  "B",  # flake8-bugbear
  "W",  # Warning
  "F",  # pyflakes
  "UP",  # pyupgrade
  "I001",  # unsorted-imports
  "T201",  # Don't allow print
  "T203",  # Don't allow pprint
  "RUF022",  # Unsorted __all__
  "RUF023",  # Unforted __slots__
]
ignore=[
  # Recommened ignores by ruff when using formatter
  "E501",
  "W191",
  "E111",
  "E114",
  "E117",
  "D206",
  "D300",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "COM812",
  "COM819",
  "ISC001",
  "ISC002",
]
