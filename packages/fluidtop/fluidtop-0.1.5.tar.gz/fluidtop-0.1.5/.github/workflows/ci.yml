name: 🧪 CI Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: ⚡ Install UV
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: 🔨 Build package
        run: |
          uv build
          echo "✅ Package built successfully"
          ls -la dist/

      - name: 🧪 Test package build
        run: |
          echo "🧪 Testing package functionality..."

          # Test help command works
          sudo uv run fluidtop --help
          echo "✅ Help command works"

          # Test package can be imported
          uv run python -c "import fluidtop.fluidtop; print('✅ Package imports successfully')"

          # Test CLI entry point exists
          if command -v fluidtop >/dev/null 2>&1 || uv run which fluidtop >/dev/null 2>&1; then
            echo "✅ CLI entry point found"
          else
            echo "⚠️  CLI entry point not in PATH (expected in development)"
          fi

      - name: 📦 Test wheel installation
        run: |
          echo "🧪 Testing wheel installation..."

          # Create test environment and install wheel
          python -m venv test_wheel
          source test_wheel/bin/activate

          # Install the built wheel
          pip install dist/*.whl

          # Test import in clean environment
          python -c "import fluidtop.fluidtop; print('✅ Wheel installs and imports correctly')"

          # Clean up
          deactivate
          rm -rf test_wheel

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: ⚡ Install UV
        uses: astral-sh/setup-uv@v6

      - name: 🔍 Check package metadata
        run: |
          echo "🔍 Checking package configuration..."

          # Validate pyproject.toml syntax
          python -c "import tomllib; tomllib.load(open('pyproject.toml', 'rb'))" 2>/dev/null && echo "✅ pyproject.toml syntax valid" || echo "❌ pyproject.toml syntax invalid"

          # Check required fields exist
          uv run python -c "import tomllib; config = tomllib.load(open('pyproject.toml', 'rb')); project = config.get('project', {}); required = ['name', 'version', 'description', 'authors']; [print(f'✅ {field}: {project[field]}') for field in required if field in project]; exit(1) if not all(field in project for field in required) else print('✅ All required package metadata present')"

      - name: 🔍 Validate dependencies
        run: |
          echo "🔍 Checking dependencies..."
          uv lock --check-hash || echo "⚠️  Lock file may need updating"
          echo "✅ Dependencies check complete"
