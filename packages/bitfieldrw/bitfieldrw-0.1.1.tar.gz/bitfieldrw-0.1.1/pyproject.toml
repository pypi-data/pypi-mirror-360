[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bitfieldrw"
version = "0.1.1"
description = "A Python library for reading and writing bit fields with type annotations"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [{ name = "DawnMagnet", email = "dawnmagnet@example.com" }]
maintainers = [{ name = "DawnMagnet", email = "dawnmagnet@example.com" }]
keywords = [
    "bitfield",
    "binary",
    "struct",
    "protocol",
    "serialization",
    "networking",
    "embedded",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Topic :: Software Development :: Embedded Systems",
    "Typing :: Typed",
]
dependencies = []

[project.urls]
Homepage = "https://github.com/DawnMagnet/bitfieldrw"
Documentation = "https://github.com/DawnMagnet/bitfieldrw#readme"
Repository = "https://github.com/DawnMagnet/bitfieldrw.git"
"Bug Tracker" = "https://github.com/DawnMagnet/bitfieldrw/issues"

[project.optional-dependencies]
dev = ["black", "ruff", "mypy", "twine", "build"]

[tool.hatch.build.targets.wheel]
packages = ["bitfieldrw"]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "B", "A", "C4", "T20"]
ignore = ["E501", "D"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.coverage.run]
source = ["bitfieldrw"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[[tool.uv.index]]
url = "https://mirrors.ustc.edu.cn/pypi/simple"
default = true

[dependency-groups]
dev = ["build>=1.2.2.post1", "twine>=6.1.0"]
