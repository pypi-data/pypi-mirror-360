# This file is auto-generated by the CDP protocol generator.
# Do not edit this file manually as your changes will be overwritten.
# Generated from Chrome DevTools Protocol specifications.

"""CDP SystemInfo Domain Types"""

from enum import Enum
from typing import Any, Dict, List
from typing_extensions import NotRequired, TypedDict

"""Describes a single graphics processor (GPU)."""
class GPUDevice(TypedDict):
    vendorId: "float"
    """PCI ID of the GPU vendor, if available; 0 otherwise."""
    deviceId: "float"
    """PCI ID of the GPU device, if available; 0 otherwise."""
    subSysId: "NotRequired[float]"
    """Sub sys ID of the GPU, only available on Windows."""
    revision: "NotRequired[float]"
    """Revision of the GPU, only available on Windows."""
    vendorString: "str"
    """String description of the GPU vendor, if the PCI ID is not available."""
    deviceString: "str"
    """String description of the GPU device, if the PCI ID is not available."""
    driverVendor: "str"
    """String description of the GPU driver vendor."""
    driverVersion: "str"
    """String description of the GPU driver version."""



"""Describes the width and height dimensions of an entity."""
class Size(TypedDict):
    width: "int"
    """Width in pixels."""
    height: "int"
    """Height in pixels."""



"""Describes a supported video decoding profile with its associated minimum and
maximum resolutions."""
class VideoDecodeAcceleratorCapability(TypedDict):
    profile: "str"
    """Video codec profile that is supported, e.g. VP9 Profile 2."""
    maxResolution: "Size"
    """Maximum video dimensions in pixels supported for this |profile|."""
    minResolution: "Size"
    """Minimum video dimensions in pixels supported for this |profile|."""



"""Describes a supported video encoding profile with its associated maximum
resolution and maximum framerate."""
class VideoEncodeAcceleratorCapability(TypedDict):
    profile: "str"
    """Video codec profile that is supported, e.g H264 Main."""
    maxResolution: "Size"
    """Maximum video dimensions in pixels supported for this |profile|."""
    maxFramerateNumerator: "int"
    """Maximum encoding framerate in frames per second supported for this
|profile|, as fraction's numerator and denominator, e.g. 24/1 fps,
24000/1001 fps, etc."""
    maxFramerateDenominator: "int"



"""YUV subsampling type of the pixels of a given image."""
class SubsamplingFormat(Enum):
    YUV420 = "yuv420"
    YUV422 = "yuv422"
    YUV444 = "yuv444"



"""Image format of a given image."""
class ImageType(Enum):
    JPEG = "jpeg"
    WEBP = "webp"
    UNKNOWN = "unknown"



"""Describes a supported image decoding profile with its associated minimum and
maximum resolutions and subsampling."""
class ImageDecodeAcceleratorCapability(TypedDict):
    imageType: "ImageType"
    """Image coded, e.g. Jpeg."""
    maxDimensions: "Size"
    """Maximum supported dimensions of the image in pixels."""
    minDimensions: "Size"
    """Minimum supported dimensions of the image in pixels."""
    subsamplings: "List[SubsamplingFormat]"
    """Optional array of supported subsampling formats, e.g. 4:2:0, if known."""



"""Provides information about the GPU(s) on the system."""
class GPUInfo(TypedDict):
    devices: "List[GPUDevice]"
    """The graphics devices on the system. Element 0 is the primary GPU."""
    auxAttributes: "NotRequired[Dict[str, Any]]"
    """An optional dictionary of additional GPU related attributes."""
    featureStatus: "NotRequired[Dict[str, Any]]"
    """An optional dictionary of graphics features and their status."""
    driverBugWorkarounds: "List[str]"
    """An optional array of GPU driver bug workarounds."""
    videoDecoding: "List[VideoDecodeAcceleratorCapability]"
    """Supported accelerated video decoding capabilities."""
    videoEncoding: "List[VideoEncodeAcceleratorCapability]"
    """Supported accelerated video encoding capabilities."""
    imageDecoding: "List[ImageDecodeAcceleratorCapability]"
    """Supported accelerated image decoding capabilities."""



"""Represents process info."""
class ProcessInfo(TypedDict):
    type: "str"
    """Specifies process type."""
    id: "int"
    """Specifies process id."""
    cpuTime: "float"
    """Specifies cumulative CPU usage in seconds across all threads of the
process since the process start."""
