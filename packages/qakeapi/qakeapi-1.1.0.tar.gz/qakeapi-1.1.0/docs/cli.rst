QakeAPI CLI
===========

QakeAPI CLI - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ QakeAPI —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∏ –æ–±—â–∏–º–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏.

–£—Å—Ç–∞–Ω–æ–≤–∫–∞
--------

CLI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤–∫–ª—é—á–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞–∫–µ—Ç QakeAPI. –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:

.. code-block:: bash

    python3 qakeapi_cli.py --help

–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
---------------

–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
~~~~~~~~~~~~~~~

–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç:

.. code-block:: bash

    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    python3 qakeapi_cli.py create my-app

    # –° —É–∫–∞–∑–∞–Ω–∏–µ–º —à–∞–±–ª–æ–Ω–∞
    python3 qakeapi_cli.py create my-api --template=api

    # –° –≤—ã–±–æ—Ä–æ–º —Ñ—É–Ω–∫—Ü–∏–π
    python3 qakeapi_cli.py create my-web --template=web --features=auth,templates,testing

    # –ë–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    python3 qakeapi_cli.py create my-app --no-interactive --template=basic

–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–π
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: bash

    python3 qakeapi_cli.py list

–î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
----------------

Basic API
~~~~~~~~~

–ü—Ä–æ—Å—Ç–æ–π API —Å –±–∞–∑–æ–≤—ã–º–∏ CRUD –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏.

**–§—É–Ω–∫—Ü–∏–∏:**
- HTTP routing —Å path –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
- –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤/–æ—Ç–≤–µ—Ç–æ–≤ —Å Pydantic
- OpenAPI/Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**
.. code-block:: bash

    python3 qakeapi_cli.py create my-basic-api --template=basic

Full API
~~~~~~~~

–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π API —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π, –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.

**–§—É–Ω–∫—Ü–∏–∏:**
- HTTP routing —Å path –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
- –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤/–æ—Ç–≤–µ—Ç–æ–≤ —Å Pydantic
- OpenAPI/Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (SQLAlchemy)
- Redis –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–æ–≤

**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**
.. code-block:: bash

    python3 qakeapi_cli.py create my-full-api --template=api

Web Application
~~~~~~~~~~~~~~~

–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º.

**–§—É–Ω–∫—Ü–∏–∏:**
- HTTP routing —Å path –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
- –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤/–æ—Ç–≤–µ—Ç–æ–≤ —Å Pydantic
- Jinja2 –¥–≤–∏–∂–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
- –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
- JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
- CSRF –∑–∞—â–∏—Ç–∞

**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**
.. code-block:: bash

    python3 qakeapi_cli.py create my-web-app --template=web

Microservice
~~~~~~~~~~~~

–õ–µ–≥–∫–æ–≤–µ—Å–Ω—ã–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏.

**–§—É–Ω–∫—Ü–∏–∏:**
- HTTP routing —Å path –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
- –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤/–æ—Ç–≤–µ—Ç–æ–≤ —Å Pydantic
- Health check —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
- –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**
.. code-block:: bash

    python3 qakeapi_cli.py create my-microservice --template=microservice

–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
----------------

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
~~~~~~~~~~~~~~~

- **routing** - HTTP routing —Å path –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
- **validation** - –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤/–æ—Ç–≤–µ—Ç–æ–≤ —Å Pydantic
- **docs** - OpenAPI/Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- **auth** - JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
- **database** - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (SQLAlchemy)
- **cache** - Redis –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
- **rate_limit** - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–æ–≤

–í–µ–±-—Ñ—É–Ω–∫—Ü–∏–∏
~~~~~~~~~~~

- **templates** - Jinja2 –¥–≤–∏–∂–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
- **static** - –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
- **csrf** - CSRF –∑–∞—â–∏—Ç–∞
- **websockets** - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ WebSocket
- **live_reload** - Live reload –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
~~~~~~~~~~~~~~~~~~~~~

- **background** - –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
- **file_upload** - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
- **health** - Health check —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
- **metrics** - –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- **logging** - –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
- **testing** - –¢–µ—Å—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä —Å pytest
- **docker** - Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
-----------------------------

–ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
~~~~~~~~~~~~~~~~

.. code-block:: text

    my-app/
    ‚îú‚îÄ‚îÄ app/
    ‚îÇ   ‚îú‚îÄ‚îÄ main.py          # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    ‚îÇ   ‚îú‚îÄ‚îÄ config.py        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    ‚îÇ   ‚îú‚îÄ‚îÄ auth.py          # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞)
    ‚îÇ   ‚îú‚îÄ‚îÄ models.py        # –ú–æ–¥–µ–ª–∏ –ë–î (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞)
    ‚îÇ   ‚îú‚îÄ‚îÄ api/             # API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    ‚îÇ   ‚îú‚îÄ‚îÄ core/            # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    ‚îÇ   ‚îú‚îÄ‚îÄ schemas/         # Pydantic —Å—Ö–µ–º—ã
    ‚îÇ   ‚îú‚îÄ‚îÄ services/        # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
    ‚îÇ   ‚îî‚îÄ‚îÄ utils/           # –£—Ç–∏–ª–∏—Ç—ã
    ‚îú‚îÄ‚îÄ tests/               # –¢–µ—Å—Ç—ã
    ‚îú‚îÄ‚îÄ docs/                # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
    ‚îú‚îÄ‚îÄ templates/           # –®–∞–±–ª–æ–Ω—ã (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã)
    ‚îú‚îÄ‚îÄ static/              # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã)
    ‚îú‚îÄ‚îÄ requirements.txt     # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    ‚îú‚îÄ‚îÄ README.md           # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    ‚îî‚îÄ‚îÄ pytest.ini         # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è pytest (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã —Ç–µ—Å—Ç—ã)

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
~~~~~~~~~~~~~~~~~~~

–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –º–æ–≥—É—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω—ã:

- **Dockerfile** - Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
- **docker-compose.yml** - Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
- **migrations/** - –ú–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
- **alembic/** - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Alembic

–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
------------------

–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–µ–∑ —Ñ–ª–∞–≥–∞ ``--no-interactive`` CLI –∑–∞–¥–∞—Å—Ç –≤–∞–º –≤–æ–ø—Ä–æ—Å—ã:

1. **–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞** - –∏–º—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
2. **–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞** - –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
3. **–í–µ—Ä—Å–∏—è** - –≤–µ—Ä—Å–∏—è –ø—Ä–æ–µ–∫—Ç–∞
4. **–ê–≤—Ç–æ—Ä** - –∏–º—è –∞–≤—Ç–æ—Ä–∞
5. **Email** - email –∞–≤—Ç–æ—Ä–∞
6. **–®–∞–±–ª–æ–Ω** - –≤—ã–±–æ—Ä –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤
7. **–§—É–Ω–∫—Ü–∏–∏** - –≤—ã–±–æ—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
8. **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ** - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞

–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è:

.. code-block:: bash

    $ python3 qakeapi_cli.py create my-app

    ============================================================
      üöÄ QakeAPI Project Generator
    ============================================================

    ‚ÑπÔ∏è  Let's create your QakeAPI project!
    Project name [my-app]: 
    Project description [A QakeAPI application]: My Awesome API
    Version [1.0.0]: 
    Author [Your Name]: John Doe
    Email [your.email@example.com]: john@example.com

    Select project template:
      ‚Üí 1. Basic API
        2. Full API
        3. Web Application
        4. Microservice

    Select option [1-4] (default: 1): 2

    ‚ÑπÔ∏è  Selected template: Full API
    ‚ÑπÔ∏è  Description: Complete API with authentication, database, and advanced features

    Available features:
    Select features to include:
      1. routing - HTTP routing with path parameters
      2. validation - Request/response validation with Pydantic
      ...
      19. live_reload - Development live reload

    Enter numbers separated by commas (e.g., 1,3,5) or 'all' for all features:
    Your choice: 1,2,3,4,5,6,7,17

    ‚úÖ Selected 8 features

    ============================================================
      üìã Project Summary
    ============================================================

    Project Name: my-app
    Description: My Awesome API
    Template: Full API
    Features: auth, cache, database, docs, rate_limit, routing, testing, validation

    Generate project? [Y/n]: Y

    ‚úÖ Project 'my-app' generated successfully!

–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
-------------

–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:

1. **–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞:**
   .. code-block:: bash

       cd my-app

2. **–°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:**
   .. code-block:: bash

       python -m venv venv
       source venv/bin/activate  # –ù–∞ Windows: venv\Scripts\activate

3. **–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:**
   .. code-block:: bash

       pip install -r requirements.txt

4. **–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:**
   .. code-block:: bash

       python app/main.py

5. **–û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:**
   - http://localhost:8000 - –æ—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
   - http://localhost:8000/docs - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

–ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω Docker:
.. code-block:: bash

    docker-compose up --build

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
--------------------

–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ API
~~~~~~~~~~~~~~~~~~~~

.. code-block:: bash

    python3 qakeapi_cli.py create simple-api --template=basic

–°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: bash

    python3 qakeapi_cli.py create web-app --template=web --features=auth,templates,testing

–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞
~~~~~~~~~~~~~~~~~~~~

.. code-block:: bash

    python3 qakeapi_cli.py create microservice --template=microservice --features=health,metrics,logging

–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ API —Å Docker
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: bash

    python3 qakeapi_cli.py create full-api --template=api --features=docker,testing

–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è
-----------------------

–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ:

1. **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é** –≤ ``app/config.py``
2. **–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã** –≤ ``app/main.py``
3. **–°–æ–∑–¥–∞—Ç—å –º–æ–¥–µ–ª–∏ –ë–î** –≤ ``app/models.py``
4. **–î–æ–±–∞–≤–∏—Ç—å —Å—Ö–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏** –≤ ``app/schemas/``
5. **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é** –≤ ``app/auth.py``
6. **–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç—ã** –≤ ``tests/``
7. **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å Docker** –≤ ``Dockerfile`` –∏ ``docker-compose.yml``

CLI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å—à–∏—Ä—è—Ç—å –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã. 