
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLOWnonassocMATCHINGnonassocREGEXright,nonassoc:nonassoc?leftORleftANDleftCMP_OPleftPLUS_OPMINUS_OPleft*DIVISION_OP%leftDOUBLE_STARnonassocNOTleftINleftCIDIDleft([leftMLSAND AS CID CMP_OP DEFINED DICT DIVISION_OP DOUBLE_STAR ELIF ELSE END ENTITY EXTENDS FALSE FLOAT FOR FSTRING ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MINUS_OP MLS NOT NULL OR PARENTS PEQ PLUS_OP REGEX REL RSTRING SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : head bodyempty : %prec LOWhead : emptyhead : MLSbody : top_stmt bodybody : emptytop_stmt : entity_def\n    | implement_def\n    | implementation_def\n    | relation\n    | statement\n    | typedef\n    | index\n    | importimport : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n    | for\n    | if\n    | expression emptystmt_list : statement stmt_liststmt_list : emptyassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF if_body ENDif_body : expression \':\' stmt_list if_nextif_next : emptyif_next : ELSE \':\' stmt_listif_next : ELIF if_bodyentity_def : ENTITY CID \':\' entity_body_outerentity_def : ENTITY ID \':\' entity_body_outerentity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outerentity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outerentity_body_outer : MLS entity_body ENDentity_body_outer : entity_body ENDentity_body_outer : ENDentity_body_outer : MLS ENDentity_body : entity_body attrentity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n    | attr_base_type \'?\'attr_type : attr_type_opt\n    | attr_type_multi\n    | attr_base_typeattr : attr_type CID empty\n    | attr_type CID \'=\' constant\n    | attr_type CID \'=\' constant_list\n    | attr_type CID \'=\' UNDEFattr : attr_type IDattr : attr_type ID \'=\' constant\n    | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT empty CID empty\n    | DICT empty CID \'=\' map_def\n    | DICT empty CID \'=\' NULL\n    | DICT \'?\' CID empty\n    | DICT \'?\'  CID \'=\' map_def\n    | DICT \'?\'  CID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n    | IMPLEMENT class_ref USING implement_ns_list MLSimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n    | IMPLEMENT class_ref USING implement_ns_list WHEN expression MLSimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : implementation_head blockimplementation_head : \':\'implementation_head : \':\' MLSblock : stmt_list ENDrelation : relation_def MLSrelation : relation_def emptyrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\'multi : \'[\' INT \':\' \']\'multi : \'[\' INT \':\' INT \']\'multi : \'[\'  \':\' INT \']\'typedef : typedef_inner emptytypedef : typedef_inner MLStypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF ID AS ns_ref REGEXtypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\'expression : boolean_expression\n    | constant\n    | function_call\n    | var_ref empty\n    | constructor\n    | list_def\n    | list_comprehension\n    | map_def\n    | map_lookup empty\n    | index_lookup\n    | conditional_expression\n    | arithmetic_expressionexpression : \'(\' expression \')\'boolean_expression : expression CMP_OP expression\n    | expression IN expression\n    | expression AND expression\n    | expression OR expressionboolean_expression : expression NOT IN expressionboolean_expression : NOT expressionboolean_expression : var_ref \'.\' ID IS DEFINEDboolean_expression : ID IS DEFINEDarithmetic_expression : expression PLUS_OP expression\n    | expression MINUS_OP expression\n    | expression DIVISION_OP expression\n    | expression \'*\' expression\n    | expression \'%\' expression\n    | expression DOUBLE_STAR expression\n    boolean_expression : map_lookup IS DEFINEDoperand : expression emptymap_lookup : attr_ref \'[\' operand \']\'\n    | var_ref \'[\' operand \']\'\n    | map_lookup \'[\' operand \']\'constructor : class_ref \'(\' param_list \')\'function_call : ns_ref \'(\' function_param_list \')\'function_call : attr_ref \'(\' function_param_list \')\'list_def : \'[\' operand_list \']\'list_comprehension : \'[\' expression list_comprehension_for list_comprehension_guard \']\'list_comprehension_for_empty : emptylist_comprehension_for : FOR ID IN expression list_comprehension_for_empty\n    | FOR ID IN expression list_comprehension_forlist_comprehension_guard : emptylist_comprehension_guard : IF expression list_comprehension_guarddict_key : RSTRINGdict_key : STRINGpair_list : dict_key \':\' operand \',\' pair_list\n    | dict_key \':\' operand empty pair_list_emptypair_list : pair_list_empty\n    pair_list_empty : emptymap_def : \'{\' pair_list \'}\'index_lookup : class_ref \'[\' param_list \']\'index_lookup : attr_ref \'[\' param_list \']\'conditional_expression : expression \'?\' expression \':\' expressionconstant : INT\n    | FLOAT\n    constant : NULLconstant : REGEXconstant : TRUEconstant : FALSEconstant : STRINGconstant : FSTRINGconstant : RSTRINGconstant : MLSconstant_list : \'[\' constants \']\'constants : constantconstants :constants : constant \',\' constantswrapped_kwargs : DOUBLE_STAR operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n    param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n    | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n    function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n    | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list : emptyvar_ref : attr_ref emptyattr_ref : var_ref \'.\' IDvar_ref : ns_ref emptyclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref : var_ref \'.\' CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : ID'
    
_lr_action_items = {'MLS':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,128,130,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,266,269,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,303,305,306,312,315,316,317,318,319,320,323,325,326,328,330,338,349,350,354,355,356,371,373,374,375,],[4,21,-3,-4,21,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,88,-17,-18,-19,91,21,-2,-2,21,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,21,-148,-149,-150,-152,-153,-154,-155,-156,21,-189,-20,21,21,21,21,21,21,21,21,21,21,21,-80,-81,-90,-91,-2,-2,-2,-15,-180,21,21,21,-99,21,-104,21,-178,21,21,-114,196,196,-116,21,-109,-110,-111,-112,21,-117,-118,-119,-120,-121,-122,21,-108,-182,-188,-2,-23,-24,-183,-179,-26,21,-123,-131,-124,21,-144,21,-31,-37,-32,271,-68,-69,21,-128,21,-145,-113,21,-16,-129,21,-126,21,-2,-2,-127,-94,-130,-125,-146,21,-38,-36,196,196,-71,-72,21,-147,-75,21,325,21,-95,-115,21,21,-93,-132,21,-35,21,21,-33,-34,350,-70,-83,-85,-86,-76,-78,-25,21,-92,21,-73,-74,-87,-89,-79,-88,21,-82,-84,]),'ENTITY':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,68,73,88,89,90,91,94,95,96,98,100,104,109,114,117,132,144,145,146,147,150,151,152,153,154,155,159,164,165,173,174,175,176,177,179,181,188,190,193,195,198,210,212,213,214,218,223,224,230,231,235,241,243,245,246,247,255,256,270,271,281,282,286,290,297,298,303,312,315,316,317,318,319,320,323,326,330,349,350,354,355,356,371,374,375,],[-2,16,-3,-4,16,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-189,-20,-80,-81,-90,-91,-2,-2,-2,-15,-180,-99,-104,-178,-114,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-182,-188,-2,-23,-24,-183,-179,-26,-123,-131,-124,-144,-31,-37,-32,-2,-68,-69,-128,-145,-113,-16,-129,-126,-127,-94,-130,-125,-146,-38,-36,-71,-72,-147,-75,-95,-115,-93,-132,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'IMPLEMENT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,68,73,88,89,90,91,94,95,96,98,100,104,109,114,117,132,144,145,146,147,150,151,152,153,154,155,159,164,165,173,174,175,176,177,179,181,188,190,193,195,198,210,212,213,214,218,223,224,230,231,235,241,243,245,246,247,255,256,270,271,281,282,286,290,297,298,303,312,315,316,317,318,319,320,323,326,330,349,350,354,355,356,371,374,375,],[-2,19,-3,-4,19,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-189,-20,-80,-81,-90,-91,-2,-2,-2,-15,-180,-99,-104,-178,-114,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-182,-188,-2,-23,-24,-183,-179,-26,-123,-131,-124,-144,-31,-37,-32,-2,-68,-69,-128,-145,-113,-16,-129,-126,-127,-94,-130,-125,-146,-38,-36,-71,-72,-147,-75,-95,-115,-93,-132,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'IMPLEMENTATION':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,68,73,88,89,90,91,94,95,96,98,100,104,109,114,117,132,144,145,146,147,150,151,152,153,154,155,159,164,165,173,174,175,176,177,179,181,188,190,193,195,198,210,212,213,214,218,223,224,230,231,235,241,243,245,246,247,255,256,270,271,281,282,286,290,297,298,303,312,315,316,317,318,319,320,323,326,330,349,350,354,355,356,371,374,375,],[-2,23,-3,-4,23,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-189,-20,-80,-81,-90,-91,-2,-2,-2,-15,-180,-99,-104,-178,-114,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-182,-188,-2,-23,-24,-183,-179,-26,-123,-131,-124,-144,-31,-37,-32,-2,-68,-69,-128,-145,-113,-16,-129,-126,-127,-94,-130,-125,-146,-38,-36,-71,-72,-147,-75,-95,-115,-93,-132,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'INDEX':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,68,73,88,89,90,91,94,95,96,98,100,104,109,114,117,132,144,145,146,147,150,151,152,153,154,155,159,164,165,173,174,175,176,177,179,181,188,190,193,195,198,210,212,213,214,218,223,224,230,231,235,241,243,245,246,247,255,256,270,271,281,282,286,290,297,298,303,312,315,316,317,318,319,320,323,326,330,349,350,354,355,356,371,374,375,],[-2,30,-3,-4,30,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-189,-20,-80,-81,-90,-91,-2,-2,-2,-15,-180,-99,-104,-178,-114,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-182,-188,-2,-23,-24,-183,-179,-26,-123,-131,-124,-144,-31,-37,-32,-2,-68,-69,-128,-145,-113,-16,-129,-126,-127,-94,-130,-125,-146,-38,-36,-71,-72,-147,-75,-95,-115,-93,-132,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'IMPORT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,68,73,88,89,90,91,94,95,96,98,100,104,109,114,117,132,144,145,146,147,150,151,152,153,154,155,159,164,165,173,174,175,176,177,179,181,188,190,193,195,198,210,212,213,214,218,223,224,230,231,235,241,243,245,246,247,255,256,270,271,281,282,286,290,297,298,303,312,315,316,317,318,319,320,323,326,330,349,350,354,355,356,371,374,375,],[-2,32,-3,-4,32,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-189,-20,-80,-81,-90,-91,-2,-2,-2,-15,-180,-99,-104,-178,-114,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-182,-188,-2,-23,-24,-183,-179,-26,-123,-131,-124,-144,-31,-37,-32,-2,-68,-69,-128,-145,-113,-16,-129,-126,-127,-94,-130,-125,-146,-38,-36,-71,-72,-147,-75,-95,-115,-93,-132,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'FOR':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,68,73,86,88,89,90,91,94,95,96,98,100,104,109,114,117,119,132,144,145,146,147,150,151,152,153,154,155,159,164,165,173,174,175,176,177,179,180,181,188,190,193,195,198,210,212,213,214,218,223,224,230,231,235,237,239,240,241,243,245,246,247,255,256,270,271,281,282,283,284,285,286,290,297,298,303,312,315,316,317,318,319,320,323,325,326,328,330,332,349,350,354,355,356,371,374,375,],[-2,24,-3,-4,24,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-189,-20,156,-80,-81,-90,-91,-2,-2,-2,-15,-180,-99,-104,-178,-114,191,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-182,-188,-2,-23,-24,-183,-179,-26,24,-123,-131,-124,-144,-31,-37,-32,-2,-68,-69,-128,-145,-113,-16,-129,-126,24,-2,-2,-127,-94,-130,-125,-146,-38,-36,-71,-72,-147,-75,24,-77,24,-95,-115,-93,-132,-35,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,24,-92,191,-73,-74,-87,-89,-79,-88,-82,-84,]),'IF':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,68,73,88,89,90,91,94,95,96,98,100,104,109,114,117,132,144,145,146,147,150,151,152,153,154,155,159,164,165,173,174,175,176,177,179,180,181,188,189,190,193,195,198,210,212,213,214,218,223,224,230,231,235,237,239,240,241,243,245,246,247,255,256,270,271,281,282,283,284,285,286,290,297,298,299,303,312,315,316,317,318,319,320,323,325,326,328,330,332,349,350,354,355,356,358,359,360,371,374,375,],[-2,35,-3,-4,35,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-189,-20,-80,-81,-90,-91,-2,-2,-2,-15,-180,-99,-104,-178,-114,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-182,-188,-2,-23,-24,-183,-179,-26,35,-123,-131,250,-124,-144,-31,-37,-32,-2,-68,-69,-128,-145,-113,-16,-129,-126,35,-2,-2,-127,-94,-130,-125,-146,-38,-36,-71,-72,-147,-75,35,-77,35,-95,-115,-93,-132,250,-35,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,35,-92,-2,-73,-74,-87,-89,-79,-134,-135,-133,-88,-82,-84,]),'(':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,20,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,92,94,95,96,97,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,172,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,244,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,303,312,315,316,317,318,319,320,323,325,326,328,330,349,350,354,355,356,371,374,375,],[-2,31,-3,-4,31,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,71,-157,-2,-2,-17,-18,-19,-2,31,101,-2,31,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,115,31,-148,-149,-150,-152,-153,-154,-155,-156,31,-189,-20,31,31,31,31,31,31,31,31,31,31,31,-80,-81,-90,-91,158,-2,101,115,71,-15,-180,31,31,31,-99,31,-104,31,-178,31,31,-114,-116,31,-109,-110,-111,-112,31,-117,-118,-119,-120,-121,-122,31,-108,-182,-188,-189,-2,-23,-24,-183,-179,-26,31,-123,-131,-124,31,-144,31,-31,-37,-32,-2,-68,-69,31,-128,31,-145,-113,31,-16,-129,31,-126,31,-2,101,-127,-94,71,-130,-125,-146,31,-38,-36,-71,-72,31,-147,-75,31,-77,31,-95,-115,31,31,-93,-132,31,-35,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,31,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'TYPEDEF':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,68,73,88,89,90,91,94,95,96,98,100,104,109,114,117,132,144,145,146,147,150,151,152,153,154,155,159,164,165,173,174,175,176,177,179,181,188,190,193,195,198,210,212,213,214,218,223,224,230,231,235,241,243,245,246,247,255,256,270,271,281,282,286,290,297,298,303,312,315,316,317,318,319,320,323,326,330,349,350,354,355,356,371,374,375,],[-2,47,-3,-4,47,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-189,-20,-80,-81,-90,-91,-2,-2,-2,-15,-180,-99,-104,-178,-114,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-182,-188,-2,-23,-24,-183,-179,-26,-123,-131,-124,-144,-31,-37,-32,-2,-68,-69,-128,-145,-113,-16,-129,-126,-127,-94,-130,-125,-146,-38,-36,-71,-72,-147,-75,-95,-115,-93,-132,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'CID':([0,2,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,21,22,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,99,100,101,102,103,104,105,106,109,111,114,115,116,117,120,121,129,131,132,134,142,144,145,146,147,148,150,151,152,153,154,155,156,157,159,160,161,164,165,173,174,175,176,177,179,180,181,184,188,190,192,193,194,195,198,200,201,202,203,204,205,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,252,255,256,260,261,263,264,267,268,270,271,272,274,275,281,282,283,284,285,286,290,294,296,297,298,300,303,311,312,315,316,317,318,319,320,323,325,326,328,330,349,350,354,355,356,371,374,375,],[-2,17,-3,-4,17,-7,-8,-9,-10,-11,-12,-13,-14,62,-181,-189,17,-157,-2,-2,-17,-18,-19,-2,17,17,-2,-2,17,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,113,-151,-2,17,-148,-149,-150,-152,-153,-154,-155,-156,17,-189,-20,17,17,17,17,17,17,17,17,17,17,17,-80,-81,-90,-91,-2,-2,-2,-15,164,-180,17,17,17,-99,176,17,-104,17,-178,17,17,-114,-176,-177,17,17,-116,176,17,-109,-110,-111,-112,17,-117,-118,-119,-120,-121,-122,17,17,-108,176,164,-182,-188,-2,-23,-24,-183,-179,-26,17,-123,17,-131,-124,17,-144,17,-31,-37,258,-2,-45,-46,-47,-41,-32,-2,-68,-69,17,-128,17,-145,-113,17,-16,-129,17,-126,17,-2,-2,-127,-94,-130,-125,-146,17,-175,-38,-36,307,308,-43,-44,17,17,-71,-72,17,17,17,-147,-75,17,-77,17,-95,-115,17,17,-93,-132,17,-35,-42,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,17,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'NOT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,93,94,95,96,98,100,101,102,103,104,106,108,109,111,114,115,116,117,119,132,142,144,145,146,147,148,149,150,151,152,153,154,155,157,159,164,165,172,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,299,300,303,312,315,316,317,318,319,320,323,325,326,328,330,332,349,350,354,355,356,371,374,375,],[-2,50,-3,-4,50,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,78,-2,-17,-18,-19,-2,50,-2,-2,50,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,50,-148,-149,-150,-152,-153,-154,-155,-156,50,-189,-20,50,50,50,50,50,50,50,50,50,50,50,-80,-81,-90,-91,78,-2,-2,-2,-15,-180,50,50,50,-99,50,78,-104,50,-178,50,50,None,78,-116,50,78,-110,78,78,50,78,78,78,78,78,78,78,50,-108,-182,-188,-189,78,-23,-24,-183,-179,-26,50,-123,-131,-124,50,-144,50,-31,-37,-32,-2,-68,-69,50,-128,50,-145,-113,50,-16,-129,50,-126,50,-2,-2,-127,-94,-130,-125,-146,50,-38,-36,-71,-72,50,78,-75,50,-77,50,-95,-115,50,50,-93,-132,78,50,-35,-33,-34,78,-70,-83,-85,-86,-76,-78,-25,50,78,78,-73,-74,-87,-89,-79,-88,-82,-84,]),'ID':([0,2,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,68,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,99,100,101,102,103,104,105,106,109,111,114,115,116,117,120,121,128,129,130,131,132,133,134,142,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,175,176,177,179,180,181,183,184,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,210,212,213,214,216,218,220,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,252,254,255,256,257,258,259,261,262,263,264,266,267,268,269,270,271,272,273,274,275,281,282,283,284,285,286,287,290,294,296,297,298,300,303,304,307,308,309,311,312,315,316,317,318,319,320,323,325,326,328,330,335,336,337,339,340,341,342,344,347,348,349,350,351,352,354,355,356,363,364,365,366,367,368,371,372,374,375,],[-2,18,-3,-4,18,-7,-8,-9,-10,-11,-12,-13,-14,63,-181,-189,68,-157,-2,86,87,-2,-17,-18,-19,-2,68,18,68,-2,-2,18,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,112,-151,-2,18,-148,-149,-150,-152,-153,-154,-155,-156,18,-189,135,140,140,-20,18,18,18,18,18,18,18,18,18,18,18,-80,-81,-90,-91,-2,-2,-2,-15,165,-180,172,18,18,-99,177,18,-104,18,-178,172,172,-114,-176,-177,68,68,68,68,-116,68,215,18,-109,-110,-111,-112,18,-117,-118,-119,-120,-121,-122,68,18,229,-108,177,165,230,165,-182,-188,-2,-23,-24,-183,-179,-26,18,-123,68,68,-131,-124,251,18,-144,18,-31,68,68,-37,-40,259,262,-45,-46,-47,-41,-32,-2,-68,-69,18,-128,140,18,-145,-113,18,-16,-129,172,-126,18,-2,-2,-127,-94,-130,-125,-146,18,-175,68,-38,-36,-39,-2,-52,309,-62,-43,-44,68,68,68,68,-71,-72,18,68,68,68,-147,-75,18,-77,18,-95,229,-115,18,18,-93,-132,18,-35,-48,-2,-2,-65,-42,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,18,-92,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-73,-74,369,370,-87,-89,-79,-57,-58,-60,-61,-66,-67,-88,-158,-82,-84,]),'INT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,217,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,277,281,282,283,284,285,286,290,294,296,297,298,300,303,305,306,312,315,316,317,318,319,320,321,323,325,326,328,330,338,349,350,354,355,356,371,373,374,375,],[-2,51,-3,-4,51,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,51,-2,-2,51,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,51,-148,-149,-150,-152,-153,-154,-155,-156,51,-189,-20,51,51,51,51,51,51,51,51,51,51,51,-80,-81,-90,-91,-2,-2,-2,-15,-180,51,51,51,-99,51,-104,51,-178,51,51,-114,-116,51,-109,-110,-111,-112,51,-117,-118,-119,-120,-121,-122,51,-108,-182,-188,-2,-23,-24,-183,-179,-26,51,-123,-131,-124,51,-144,51,-31,-37,-32,-2,-68,-69,51,276,-128,51,-145,-113,51,-16,-129,51,-126,51,-2,-2,-127,-94,-130,-125,-146,51,-38,-36,-71,-72,51,322,-147,-75,51,-77,51,-95,-115,51,51,-93,-132,51,-35,51,51,-33,-34,-2,-70,-83,-85,-86,353,-76,-78,-25,51,-92,51,-73,-74,-87,-89,-79,-88,51,-82,-84,]),'FLOAT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,303,305,306,312,315,316,317,318,319,320,323,325,326,328,330,338,349,350,354,355,356,371,373,374,375,],[-2,52,-3,-4,52,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,52,-2,-2,52,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,52,-148,-149,-150,-152,-153,-154,-155,-156,52,-189,-20,52,52,52,52,52,52,52,52,52,52,52,-80,-81,-90,-91,-2,-2,-2,-15,-180,52,52,52,-99,52,-104,52,-178,52,52,-114,-116,52,-109,-110,-111,-112,52,-117,-118,-119,-120,-121,-122,52,-108,-182,-188,-2,-23,-24,-183,-179,-26,52,-123,-131,-124,52,-144,52,-31,-37,-32,-2,-68,-69,52,-128,52,-145,-113,52,-16,-129,52,-126,52,-2,-2,-127,-94,-130,-125,-146,52,-38,-36,-71,-72,52,-147,-75,52,-77,52,-95,-115,52,52,-93,-132,52,-35,52,52,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,52,-92,52,-73,-74,-87,-89,-79,-88,52,-82,-84,]),'NULL':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,303,305,306,310,312,315,316,317,318,319,320,323,325,326,328,330,338,343,345,346,349,350,354,355,356,371,373,374,375,],[-2,53,-3,-4,53,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,53,-2,-2,53,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,53,-148,-149,-150,-152,-153,-154,-155,-156,53,-189,-20,53,53,53,53,53,53,53,53,53,53,53,-80,-81,-90,-91,-2,-2,-2,-15,-180,53,53,53,-99,53,-104,53,-178,53,53,-114,-116,53,-109,-110,-111,-112,53,-117,-118,-119,-120,-121,-122,53,-108,-182,-188,-2,-23,-24,-183,-179,-26,53,-123,-131,-124,53,-144,53,-31,-37,-32,-2,-68,-69,53,-128,53,-145,-113,53,-16,-129,53,-126,53,-2,-2,-127,-94,-130,-125,-146,53,-38,-36,-71,-72,53,-147,-75,53,-77,53,-95,-115,53,53,-93,-132,53,-35,53,53,348,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,53,-92,53,364,366,368,-73,-74,-87,-89,-79,-88,53,-82,-84,]),'REGEX':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,242,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,303,305,306,312,315,316,317,318,319,320,323,325,326,328,330,338,349,350,354,355,356,371,373,374,375,],[-2,48,-3,-4,48,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,48,-2,-2,48,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,48,-148,-149,-150,-152,-153,-154,-155,-156,48,-189,-20,48,48,48,48,48,48,48,48,48,48,48,-80,-81,-90,-91,-2,-2,-2,-15,-180,48,48,48,-99,48,-104,48,-178,48,48,-114,-116,48,-109,-110,-111,-112,48,-117,-118,-119,-120,-121,-122,48,-108,-182,-188,-2,-23,-24,-183,-179,-26,48,-123,-131,-124,48,-144,48,-31,-37,-32,-2,-68,-69,48,-128,48,-145,-113,48,-16,-129,48,-126,48,-2,-2,-127,297,-94,-130,-125,-146,48,-38,-36,-71,-72,48,-147,-75,48,-77,48,-95,-115,48,48,-93,-132,48,-35,48,48,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,48,-92,48,-73,-74,-87,-89,-79,-88,48,-82,-84,]),'TRUE':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,303,305,306,312,315,316,317,318,319,320,323,325,326,328,330,338,349,350,354,355,356,371,373,374,375,],[-2,54,-3,-4,54,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,54,-2,-2,54,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,54,-148,-149,-150,-152,-153,-154,-155,-156,54,-189,-20,54,54,54,54,54,54,54,54,54,54,54,-80,-81,-90,-91,-2,-2,-2,-15,-180,54,54,54,-99,54,-104,54,-178,54,54,-114,-116,54,-109,-110,-111,-112,54,-117,-118,-119,-120,-121,-122,54,-108,-182,-188,-2,-23,-24,-183,-179,-26,54,-123,-131,-124,54,-144,54,-31,-37,-32,-2,-68,-69,54,-128,54,-145,-113,54,-16,-129,54,-126,54,-2,-2,-127,-94,-130,-125,-146,54,-38,-36,-71,-72,54,-147,-75,54,-77,54,-95,-115,54,54,-93,-132,54,-35,54,54,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,54,-92,54,-73,-74,-87,-89,-79,-88,54,-82,-84,]),'FALSE':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,303,305,306,312,315,316,317,318,319,320,323,325,326,328,330,338,349,350,354,355,356,371,373,374,375,],[-2,55,-3,-4,55,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,55,-2,-2,55,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,55,-148,-149,-150,-152,-153,-154,-155,-156,55,-189,-20,55,55,55,55,55,55,55,55,55,55,55,-80,-81,-90,-91,-2,-2,-2,-15,-180,55,55,55,-99,55,-104,55,-178,55,55,-114,-116,55,-109,-110,-111,-112,55,-117,-118,-119,-120,-121,-122,55,-108,-182,-188,-2,-23,-24,-183,-179,-26,55,-123,-131,-124,55,-144,55,-31,-37,-32,-2,-68,-69,55,-128,55,-145,-113,55,-16,-129,55,-126,55,-2,-2,-127,-94,-130,-125,-146,55,-38,-36,-71,-72,55,-147,-75,55,-77,55,-95,-115,55,55,-93,-132,55,-35,55,55,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,55,-92,55,-73,-74,-87,-89,-79,-88,55,-82,-84,]),'STRING':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,301,303,305,306,312,315,316,317,318,319,320,323,325,326,328,330,338,349,350,354,355,356,371,373,374,375,],[-2,56,-3,-4,56,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,56,-2,-2,56,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,56,-148,-149,-150,-152,-153,-154,-155,-156,56,127,-189,-20,56,56,56,56,56,56,56,56,56,56,56,-80,-81,-90,-91,-2,-2,-2,-15,-180,56,56,56,-99,56,-104,56,-178,56,56,-114,-116,56,-109,-110,-111,-112,56,-117,-118,-119,-120,-121,-122,56,-108,-182,-188,-2,-23,-24,-183,-179,-26,56,-123,-131,-124,56,-144,56,-31,-37,-32,-2,-68,-69,56,-128,56,-145,-113,56,-16,-129,56,-126,56,-2,-2,-127,-94,-130,-125,-146,56,-38,-36,-71,-72,56,-147,-75,56,-77,56,-95,-115,56,56,-93,-132,56,127,-35,56,56,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,56,-92,56,-73,-74,-87,-89,-79,-88,56,-82,-84,]),'FSTRING':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,303,305,306,312,315,316,317,318,319,320,323,325,326,328,330,338,349,350,354,355,356,371,373,374,375,],[-2,57,-3,-4,57,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,57,-2,-2,57,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,57,-148,-149,-150,-152,-153,-154,-155,-156,57,-189,-20,57,57,57,57,57,57,57,57,57,57,57,-80,-81,-90,-91,-2,-2,-2,-15,-180,57,57,57,-99,57,-104,57,-178,57,57,-114,-116,57,-109,-110,-111,-112,57,-117,-118,-119,-120,-121,-122,57,-108,-182,-188,-2,-23,-24,-183,-179,-26,57,-123,-131,-124,57,-144,57,-31,-37,-32,-2,-68,-69,57,-128,57,-145,-113,57,-16,-129,57,-126,57,-2,-2,-127,-94,-130,-125,-146,57,-38,-36,-71,-72,57,-147,-75,57,-77,57,-95,-115,57,57,-93,-132,57,-35,57,57,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,57,-92,57,-73,-74,-87,-89,-79,-88,57,-82,-84,]),'RSTRING':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,301,303,305,306,312,315,316,317,318,319,320,323,325,326,328,330,338,349,350,354,355,356,371,373,374,375,],[-2,58,-3,-4,58,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,58,-2,-2,58,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,58,-148,-149,-150,-152,-153,-154,-155,-156,58,126,-189,-20,58,58,58,58,58,58,58,58,58,58,58,-80,-81,-90,-91,-2,-2,-2,-15,-180,58,58,58,-99,58,-104,58,-178,58,58,-114,-116,58,-109,-110,-111,-112,58,-117,-118,-119,-120,-121,-122,58,-108,-182,-188,-2,-23,-24,-183,-179,-26,58,-123,-131,-124,58,-144,58,-31,-37,-32,-2,-68,-69,58,-128,58,-145,-113,58,-16,-129,58,-126,58,-2,-2,-127,-94,-130,-125,-146,58,-38,-36,-71,-72,58,-147,-75,58,-77,58,-95,-115,58,58,-93,-132,58,126,-35,58,58,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,58,-92,58,-73,-74,-87,-89,-79,-88,58,-82,-84,]),'[':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,20,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,97,98,100,101,102,103,104,106,109,111,114,115,116,117,132,135,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,172,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,204,205,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,303,305,306,312,315,316,317,318,319,320,323,325,326,328,330,349,350,354,355,356,369,370,371,374,375,],[-2,59,-3,-4,59,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,72,-157,-2,-2,-17,-18,-19,-2,59,-2,106,59,-96,-97,-98,-100,-101,-102,-103,111,-105,-106,-107,-151,116,59,-148,-149,-150,-152,-153,-154,-155,-156,59,-189,-20,59,59,59,59,59,59,59,59,59,59,59,-80,-81,-90,-91,106,-2,116,72,-15,-180,59,59,59,-99,59,-104,59,-178,59,59,-114,-116,217,59,-109,-110,-111,-112,59,-117,-118,-119,-120,-121,-122,59,-108,-182,-188,-189,-2,-23,-24,-183,-179,-26,59,-123,-131,-124,59,-144,59,-31,-37,265,-41,-32,-2,-68,-69,59,-128,59,-145,-113,59,-16,-129,59,-126,59,106,-2,-127,-94,-130,-125,-146,59,-38,-36,-71,-72,59,-147,-75,59,-77,59,-95,-115,59,59,-93,-132,59,-35,338,338,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,59,-92,-73,-74,-87,-89,-79,217,217,-88,-82,-84,]),'{':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,73,74,75,76,77,79,80,81,82,83,84,85,88,89,90,91,94,95,96,98,100,101,102,103,104,106,109,111,114,115,116,117,132,142,144,145,146,147,148,150,151,152,153,154,155,157,159,164,165,173,174,175,176,177,179,180,181,188,190,192,193,194,195,198,210,212,213,214,216,218,221,223,224,225,230,231,233,235,237,239,240,241,243,245,246,247,250,255,256,270,271,272,281,282,283,284,285,286,290,294,296,297,298,300,303,310,312,315,316,317,318,319,320,323,325,326,328,330,343,345,346,349,350,354,355,356,371,374,375,],[-2,60,-3,-4,60,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,60,-2,-2,60,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,60,-148,-149,-150,-152,-153,-154,-155,-156,60,-189,-20,60,60,60,60,60,60,60,60,60,60,60,-80,-81,-90,-91,-2,-2,-2,-15,-180,60,60,60,-99,60,-104,60,-178,60,60,-114,-116,60,-109,-110,-111,-112,60,-117,-118,-119,-120,-121,-122,60,-108,-182,-188,-2,-23,-24,-183,-179,-26,60,-123,-131,-124,60,-144,60,-31,-37,-32,-2,-68,-69,60,-128,60,-145,-113,60,-16,-129,60,-126,60,-2,-2,-127,-94,-130,-125,-146,60,-38,-36,-71,-72,60,-147,-75,60,-77,60,-95,-115,60,60,-93,-132,60,-35,60,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,60,-92,60,60,60,-73,-74,-87,-89,-79,-88,-82,-84,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,61,68,73,88,89,90,91,94,95,96,98,100,104,109,114,117,132,144,145,146,147,150,151,152,153,154,155,159,164,165,173,174,175,176,177,179,181,188,190,193,195,198,210,212,213,214,218,223,224,230,231,235,241,243,245,246,247,255,256,270,271,281,282,286,290,297,298,303,312,315,316,317,318,319,320,323,326,330,349,350,354,355,356,371,374,375,],[-2,0,-2,-3,-4,-1,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-181,-189,-157,-2,-2,-17,-18,-19,-2,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-5,-189,-20,-80,-81,-90,-91,-2,-2,-2,-15,-180,-99,-104,-178,-114,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-182,-188,-2,-23,-24,-183,-179,-26,-123,-131,-124,-144,-31,-37,-32,-2,-68,-69,-128,-145,-113,-16,-129,-126,-127,-94,-130,-125,-146,-38,-36,-71,-72,-147,-75,-95,-115,-93,-132,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'.':([17,18,20,33,34,49,66,67,68,69,94,95,96,100,114,164,165,172,176,177,208,209,215,239,240,318,319,],[-181,-189,70,-2,105,-2,-2,134,-189,-2,160,-2,-2,-180,-178,-182,-188,-189,-183,-179,134,-2,-179,160,-2,351,352,]),'USING':([17,65,164,176,],[-181,133,-182,-183,]),',':([17,18,21,36,37,38,39,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,68,69,94,95,96,100,104,109,114,117,119,120,132,138,141,144,145,146,147,150,151,152,153,154,155,159,164,165,168,170,171,172,173,176,177,181,188,190,193,207,208,209,212,213,214,215,218,222,223,224,229,231,235,241,245,246,247,253,280,281,290,298,317,362,],[-181,-189,-157,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-148,-149,-150,-152,-153,-154,-155,-156,-189,-2,-2,-2,-2,-180,-99,-104,-178,-114,-2,192,-116,220,-164,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-182,-188,233,-169,-170,-189,-2,-183,-179,-123,-131,-124,-144,267,268,-2,273,-68,-69,-179,-128,-162,-145,-113,287,-129,-126,-127,-130,-125,-146,301,-163,-147,-115,-132,273,373,]),':':([17,18,21,36,37,38,39,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,62,63,68,69,94,95,96,100,104,108,109,114,117,123,126,127,132,144,145,146,147,149,150,151,152,153,154,155,159,164,165,173,176,177,181,188,190,193,206,207,208,209,211,215,217,218,223,224,226,227,231,235,241,245,246,247,276,281,290,293,298,313,314,],[-181,-189,-157,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-148,-149,-150,-152,-153,-154,-155,-156,128,130,-189,-2,-2,-2,-2,-180,-99,180,-104,-178,-114,194,-138,-139,-116,-109,-110,-111,-112,225,-117,-118,-119,-120,-121,-122,-108,-182,-188,-2,-183,-179,-123,-131,-124,-144,266,-186,-187,-2,269,-179,277,-128,-145,-113,284,285,-129,-126,-127,-130,-125,-146,321,-147,-115,328,-132,-184,-185,]),'IS':([18,43,172,177,235,241,246,],[64,110,64,234,-126,-127,-125,]),'SEP':([18,33,66,68,95,98,165,172,205,209,213,240,242,],[-189,99,99,-189,161,163,-188,-189,163,99,163,161,163,]),'=':([18,33,34,49,100,114,140,165,172,177,239,240,258,259,262,307,308,309,],[-189,-2,102,-2,-180,-178,221,-188,221,-179,102,-2,305,306,310,343,345,346,]),'PEQ':([18,33,34,49,100,114,165,177,239,240,],[-189,-2,103,-2,-180,-178,-188,-179,103,-2,]),'CMP_OP':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,93,94,95,96,100,104,108,109,114,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,218,223,224,231,235,239,240,241,245,246,247,281,290,298,299,316,330,332,],[-189,-157,74,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,74,-2,-2,-2,-180,-99,74,-104,-178,-114,74,-116,-109,-110,74,74,74,-117,-118,-119,-120,-121,-122,-108,-188,-189,74,-179,-123,-131,-144,-128,-145,-113,-129,-126,-2,-2,-127,-130,-125,-146,74,-115,-132,74,74,74,74,]),'IN':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,78,87,93,94,95,96,100,104,108,109,114,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,218,223,224,231,235,239,240,241,245,246,247,251,281,290,298,299,316,330,332,],[-189,-157,75,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,148,157,75,-2,-2,-2,-180,-99,75,-104,-178,75,75,-116,75,-110,75,75,75,75,75,75,75,75,75,-108,-188,-189,75,-179,-123,-131,-144,-128,-145,-113,-129,-126,-2,-2,-127,-130,-125,-146,300,75,-115,-132,75,75,75,75,]),'AND':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,93,94,95,96,100,104,108,109,114,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,218,223,224,231,235,239,240,241,245,246,247,281,290,298,299,316,330,332,],[-189,-157,76,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,76,-2,-2,-2,-180,-99,76,-104,-178,-114,76,-116,-109,-110,-111,76,76,-117,-118,-119,-120,-121,-122,-108,-188,-189,76,-179,-123,-131,-144,-128,-145,-113,-129,-126,-2,-2,-127,-130,-125,-146,76,-115,-132,76,76,76,76,]),'OR':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,93,94,95,96,100,104,108,109,114,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,218,223,224,231,235,239,240,241,245,246,247,281,290,298,299,316,330,332,],[-189,-157,77,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,77,-2,-2,-2,-180,-99,77,-104,-178,-114,77,-116,-109,-110,-111,-112,77,-117,-118,-119,-120,-121,-122,-108,-188,-189,77,-179,-123,-131,-144,-128,-145,-113,-129,-126,-2,-2,-127,-130,-125,-146,77,-115,-132,77,77,77,77,]),'?':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,68,93,94,95,96,100,104,108,109,114,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,201,203,204,205,218,223,224,231,235,239,240,241,245,246,247,281,290,298,299,311,316,330,332,],[-189,-157,79,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-189,79,-2,-2,-2,-180,-99,79,-104,-178,-114,79,-116,-109,-110,-111,-112,79,-117,-118,-119,-120,-121,-122,-108,-188,-189,79,-179,-123,-131,-144,261,263,264,-41,-128,-145,-113,-129,-126,-2,-2,-127,-130,-125,-146,79,-115,-132,79,-42,79,79,79,]),'PLUS_OP':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,93,94,95,96,100,104,108,109,114,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,218,223,224,231,235,239,240,241,245,246,247,281,290,298,299,316,330,332,],[-189,-157,80,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,80,-2,-2,-2,-180,-99,80,-104,-178,-114,80,-116,80,-110,80,80,80,-117,-118,-119,-120,-121,-122,-108,-188,-189,80,-179,-123,-131,-144,-128,-145,-113,-129,-126,-2,-2,-127,-130,-125,-146,80,-115,-132,80,80,80,80,]),'MINUS_OP':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,93,94,95,96,100,104,108,109,114,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,218,223,224,231,235,239,240,241,245,246,247,281,290,298,299,316,330,332,],[-189,-157,81,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,81,-2,-2,-2,-180,-99,81,-104,-178,-114,81,-116,81,-110,81,81,81,-117,-118,-119,-120,-121,-122,-108,-188,-189,81,-179,-123,-131,-144,-128,-145,-113,-129,-126,-2,-2,-127,-130,-125,-146,81,-115,-132,81,81,81,81,]),'DIVISION_OP':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,93,94,95,96,100,104,108,109,114,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,218,223,224,231,235,239,240,241,245,246,247,281,290,298,299,316,330,332,],[-189,-157,82,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,82,-2,-2,-2,-180,-99,82,-104,-178,-114,82,-116,82,-110,82,82,82,82,82,-119,-120,-121,-122,-108,-188,-189,82,-179,-123,-131,-144,-128,-145,-113,-129,-126,-2,-2,-127,-130,-125,-146,82,-115,-132,82,82,82,82,]),'*':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,93,94,95,96,100,104,108,109,114,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,218,223,224,231,235,239,240,241,245,246,247,281,290,298,299,316,330,332,],[-189,-157,83,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,83,-2,-2,-2,-180,-99,83,-104,-178,-114,83,-116,83,-110,83,83,83,83,83,-119,-120,-121,-122,-108,-188,-189,83,-179,-123,-131,-144,-128,-145,-113,-129,-126,-2,-2,-127,-130,-125,-146,83,-115,-132,83,83,83,83,]),'%':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,93,94,95,96,100,104,108,109,114,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,218,223,224,231,235,239,240,241,245,246,247,281,290,298,299,316,330,332,],[-189,-157,84,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,84,-2,-2,-2,-180,-99,84,-104,-178,-114,84,-116,84,-110,84,84,84,84,84,-119,-120,-121,-122,-108,-188,-189,84,-179,-123,-131,-144,-128,-145,-113,-129,-126,-2,-2,-127,-130,-125,-146,84,-115,-132,84,84,84,84,]),'DOUBLE_STAR':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,71,72,93,94,95,96,100,101,104,108,109,114,115,116,117,119,132,144,145,146,147,149,150,151,152,153,154,155,159,165,172,173,177,181,188,193,218,220,223,224,231,233,235,239,240,241,245,246,247,281,290,298,299,316,330,332,],[-189,-157,85,-2,-2,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,142,142,85,-2,-2,-2,-180,142,-99,85,-104,-178,142,142,-114,85,-116,85,-110,85,85,85,85,85,85,85,85,-122,-108,-188,-189,85,-179,-123,-131,-144,-128,142,-145,-113,-129,142,-126,-2,-2,-127,-130,-125,-146,85,-115,-132,85,85,85,85,]),')':([18,21,36,37,38,39,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,71,93,94,95,96,100,101,104,109,114,115,117,132,136,137,138,139,141,144,145,146,147,150,151,152,153,154,155,159,165,166,167,168,169,170,171,172,173,177,181,185,188,190,193,218,219,220,222,223,224,228,229,231,232,233,235,241,245,246,247,278,279,280,281,288,289,290,298,327,],[-189,-157,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-148,-149,-150,-152,-153,-154,-155,-156,-2,159,-2,-2,-2,-180,-2,-99,-104,-178,-2,-114,-116,218,-165,-2,-166,-164,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-188,231,-171,-2,-172,-169,-170,-189,-2,-179,-123,245,-131,-124,-144,-128,-2,-2,-162,-145,-113,286,-191,-129,-2,-2,-126,-127,-130,-125,-146,-167,-168,-163,-147,-173,-174,-115,-132,-190,]),']':([18,21,36,37,38,39,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,72,94,95,96,100,104,109,114,116,117,118,119,120,121,132,137,138,139,141,143,144,145,146,147,150,151,152,153,154,155,159,165,172,173,177,178,181,182,186,187,188,189,190,192,193,218,219,220,222,223,224,231,235,241,245,246,247,248,249,252,265,276,278,279,280,281,290,298,299,321,322,331,332,338,353,358,359,360,361,362,373,376,],[-189,-157,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-148,-149,-150,-152,-153,-154,-155,-156,-2,-2,-2,-2,-2,-180,-99,-104,-178,-2,-114,188,-2,-176,-177,-116,-165,-2,-166,-164,223,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-188,-189,-2,-179,235,-123,241,246,247,-131,-2,-124,-2,-144,-128,-2,-2,-162,-145,-113,-129,-126,-127,-130,-125,-146,298,-136,-175,311,320,-167,-168,-163,-147,-115,-132,-2,354,355,-137,-2,-160,371,-134,-135,-133,372,-159,-160,-161,]),'ELSE':([18,21,22,26,27,28,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,73,94,95,96,100,104,109,114,117,132,144,145,146,147,150,151,152,153,154,155,159,165,173,174,175,177,179,180,181,188,190,193,218,223,224,231,235,236,237,238,239,240,241,245,246,247,281,290,295,298,326,356,],[-189,-157,-2,-17,-18,-19,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-20,-2,-2,-2,-180,-99,-104,-178,-114,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-188,-2,-23,-24,-179,-26,-2,-123,-131,-124,-144,-128,-145,-113,-129,-126,293,-2,-22,-2,-2,-127,-130,-125,-146,-147,-115,-21,-132,-25,-79,]),'ELIF':([18,21,22,26,27,28,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,73,94,95,96,100,104,109,114,117,132,144,145,146,147,150,151,152,153,154,155,159,165,173,174,175,177,179,180,181,188,190,193,218,223,224,231,235,236,237,238,239,240,241,245,246,247,281,290,295,298,326,356,],[-189,-157,-2,-17,-18,-19,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-20,-2,-2,-2,-180,-99,-104,-178,-114,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-188,-2,-23,-24,-179,-26,-2,-123,-131,-124,-144,-128,-145,-113,-129,-126,294,-2,-22,-2,-2,-127,-130,-125,-146,-147,-115,-21,-132,-25,-79,]),'END':([18,21,22,26,27,28,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,57,58,73,94,95,96,100,104,107,109,114,117,128,130,132,144,145,146,147,150,151,152,153,154,155,159,165,173,174,175,177,179,180,181,188,190,193,196,197,199,218,223,224,231,235,236,237,238,239,240,241,245,246,247,254,257,258,259,262,266,269,281,283,284,285,290,291,292,295,298,304,307,308,309,324,325,326,328,329,335,336,337,339,340,341,342,344,347,348,356,357,363,364,365,366,367,368,372,],[-189,-157,-2,-17,-18,-19,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-2,-148,-149,-150,-152,-153,-154,-155,-156,-20,-2,-2,-2,-180,-99,179,-104,-178,-114,198,198,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-188,-2,-23,-24,-179,-26,-2,-123,-131,-124,-144,255,256,-40,-128,-145,-113,-129,-126,-2,-2,-22,-2,-2,-127,-130,-125,-146,303,-39,-2,-52,-62,198,198,-147,-2,-77,-2,-115,-27,-28,-21,-132,-48,-2,-2,-65,356,-78,-25,-2,-30,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-79,-29,-57,-58,-60,-61,-66,-67,-158,]),'}':([18,21,36,37,38,39,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,60,94,95,96,100,104,109,114,117,122,124,125,132,144,145,146,147,150,151,152,153,154,155,159,165,173,177,181,188,190,193,218,223,224,231,235,241,245,246,247,253,281,290,298,301,302,333,334,],[-189,-157,-96,-97,-98,-100,-101,-102,-103,-2,-105,-106,-107,-151,-148,-149,-150,-152,-153,-154,-155,-156,-2,-2,-2,-2,-180,-99,-104,-178,-114,193,-143,-142,-116,-109,-110,-111,-112,-117,-118,-119,-120,-121,-122,-108,-188,-2,-179,-123,-131,-124,-144,-128,-145,-113,-129,-126,-127,-130,-125,-146,-2,-147,-115,-132,-2,-2,-140,-141,]),'DICT':([21,48,51,52,53,54,55,56,57,58,128,130,193,196,197,199,254,257,258,259,262,266,269,304,307,308,309,335,336,337,339,340,341,342,344,347,348,363,364,365,366,367,368,372,],[-157,-151,-148,-149,-150,-152,-153,-154,-155,-156,201,201,-144,201,201,-40,201,-39,-2,-52,-62,201,201,-48,-2,-2,-65,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-57,-58,-60,-61,-66,-67,-158,]),'EXTENDS':([62,63,],[129,131,]),'DEFINED':([64,110,234,],[132,181,290,]),'AS':([68,98,112,113,165,],[-189,162,183,184,-188,]),'WHEN':([68,165,212,213,214,317,],[-189,-188,272,-68,-69,-70,]),'MATCHING':([68,165,242,],[-189,-188,296,]),'PARENTS':([133,273,],[214,214,]),'REL':([216,320,354,355,371,],[274,-86,-87,-89,-88,]),'UNDEF':([305,306,],[337,341,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'head':([0,],[2,]),'empty':([0,2,6,22,25,29,33,34,43,49,59,60,66,69,71,72,94,95,96,101,115,116,119,138,168,173,180,189,192,201,209,212,216,219,220,232,233,236,237,239,240,253,258,283,285,299,301,302,307,308,316,328,332,],[3,7,7,73,89,90,100,104,109,114,121,124,100,114,139,139,104,100,114,169,169,139,190,219,232,190,238,249,121,260,100,270,121,139,139,169,169,292,238,104,100,302,304,238,238,249,124,124,342,344,349,238,360,]),'body':([2,6,],[5,61,]),'top_stmt':([2,6,],[6,6,]),'entity_def':([2,6,],[8,8,]),'implement_def':([2,6,],[9,9,]),'implementation_def':([2,6,],[10,10,]),'relation':([2,6,],[11,11,]),'statement':([2,6,180,237,283,285,328,],[12,12,237,237,237,237,237,]),'typedef':([2,6,],[13,13,]),'index':([2,6,],[14,14,]),'import':([2,6,],[15,15,]),'class_ref':([2,6,19,30,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,129,131,142,148,156,157,180,184,192,194,216,221,225,233,237,250,267,268,272,274,275,283,285,294,296,300,328,],[20,20,65,92,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,207,207,97,97,226,97,97,244,97,97,97,97,97,97,97,97,207,207,97,318,319,97,97,97,97,97,97,]),'expression':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,328,],[22,22,93,108,117,119,144,145,146,147,149,150,151,152,153,154,155,173,173,173,173,173,173,173,173,224,173,22,173,173,173,173,281,173,22,299,316,22,22,108,330,332,22,]),'relation_def':([2,6,],[25,25,]),'assign':([2,6,180,237,283,285,328,],[26,26,26,26,26,26,26,]),'for':([2,6,180,237,283,285,328,],[27,27,27,27,27,27,27,]),'if':([2,6,180,237,283,285,328,],[28,28,28,28,28,28,28,]),'typedef_inner':([2,6,],[29,29,]),'ns_ref':([2,6,19,30,31,32,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,128,129,130,131,133,142,148,156,157,180,183,184,192,194,196,197,216,221,225,233,237,250,254,266,267,268,269,272,273,274,275,283,285,294,296,300,328,],[33,33,66,66,95,98,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,205,209,205,209,213,95,95,66,95,240,242,66,95,95,205,205,95,95,95,95,240,95,205,205,209,209,205,95,213,66,66,240,240,95,95,95,240,]),'var_ref':([2,6,19,30,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,129,131,142,148,156,157,180,184,192,194,216,221,225,233,237,250,267,268,272,274,275,283,285,294,296,300,328,],[34,34,67,67,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,208,208,94,94,67,94,239,67,94,94,94,94,94,94,239,94,208,208,94,67,67,239,239,94,94,94,239,]),'boolean_expression':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,328,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'constant':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,305,306,328,338,373,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,335,339,37,362,362,]),'function_call':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,328,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'constructor':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,184,192,194,216,221,225,233,237,250,272,283,285,294,296,300,328,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,243,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'list_def':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,328,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'list_comprehension':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,328,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'map_def':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,310,328,343,345,346,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,347,42,363,365,367,]),'map_lookup':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,328,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'index_lookup':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,328,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'conditional_expression':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,328,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'arithmetic_expression':([2,6,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,142,148,157,180,192,194,216,221,225,233,237,250,272,283,285,294,296,300,328,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'attr_ref':([2,6,19,30,31,35,50,59,74,75,76,77,79,80,81,82,83,84,85,101,102,103,106,111,115,116,129,131,142,148,156,157,180,184,192,194,216,221,225,233,237,250,267,268,272,274,275,283,285,294,296,300,328,],[49,49,69,69,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,69,69,96,96,69,96,49,69,96,96,96,96,96,96,49,96,69,69,96,69,69,49,49,96,96,96,49,]),'if_body':([35,294,],[107,329,]),'operand_list':([59,192,216,],[118,252,275,]),'operand':([59,101,102,103,106,111,115,116,142,157,192,194,216,221,233,],[120,171,174,175,178,182,171,186,222,227,120,253,120,280,171,]),'pair_list':([60,301,],[122,333,]),'dict_key':([60,301,],[123,123,]),'pair_list_empty':([60,301,302,],[125,125,334,]),'param_list':([71,72,116,220,],[136,143,187,279,]),'param_list_empty':([71,72,116,219,220,],[137,137,137,278,137,]),'param_list_element':([71,72,101,115,116,220,233,],[138,138,170,170,138,138,170,]),'wrapped_kwargs':([71,72,101,115,116,220,233,],[141,141,141,141,141,141,141,]),'function_param_list':([101,115,233,],[166,185,289,]),'function_param_list_empty':([101,115,232,233,],[167,167,288,167,]),'function_param_list_element':([101,115,233,],[168,168,168,]),'list_comprehension_for':([119,332,],[189,359,]),'entity_body_outer':([128,130,266,269,],[195,210,312,315,]),'entity_body':([128,130,196,266,269,],[197,197,254,197,197,]),'attr':([128,130,196,197,254,266,269,],[199,199,199,257,257,199,199,]),'attr_type':([128,130,196,197,254,266,269,],[200,200,200,200,200,200,200,]),'attr_type_opt':([128,130,196,197,254,266,269,],[202,202,202,202,202,202,202,]),'attr_type_multi':([128,130,196,197,254,266,269,],[203,203,203,203,203,203,203,]),'attr_base_type':([128,130,196,197,254,266,269,],[204,204,204,204,204,204,204,]),'class_ref_list':([129,131,267,268,],[206,211,313,314,]),'implement_ns_list':([133,273,],[212,317,]),'multi':([135,369,370,],[216,374,375,]),'id_list':([158,287,],[228,327,]),'stmt_list':([180,237,283,285,328,],[236,295,324,324,357,]),'list_comprehension_guard':([189,299,],[248,331,]),'implementation':([226,],[282,]),'implementation_head':([226,],[283,]),'if_next':([236,],[291,]),'block':([283,285,],[323,326,]),'constant_list':([305,306,],[336,340,]),'list_comprehension_for_empty':([332,],[358,]),'constants':([338,373,],[361,376,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> head body','main',2,'p_main','plyInmantaParser.py',134),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',145),
  ('head -> empty','head',1,'p_main_head','plyInmantaParser.py',149),
  ('head -> MLS','head',1,'p_main_head_doc','plyInmantaParser.py',154),
  ('body -> top_stmt body','body',2,'p_body_collect','plyInmantaParser.py',159),
  ('body -> empty','body',1,'p_body_term','plyInmantaParser.py',166),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',171),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',172),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',173),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',174),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',175),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',176),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',177),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',178),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',188),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',194),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',205),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',206),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',207),
  ('statement -> expression empty','statement',2,'p_stmt','plyInmantaParser.py',208),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',222),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_empty','plyInmantaParser.py',229),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',234),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',240),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',246),
  ('if -> IF if_body END','if',3,'p_if_start','plyInmantaParser.py',253),
  ('if_body -> expression : stmt_list if_next','if_body',4,'p_if_body','plyInmantaParser.py',259),
  ('if_next -> empty','if_next',1,'p_if_end','plyInmantaParser.py',266),
  ('if_next -> ELSE : stmt_list','if_next',3,'p_if_else','plyInmantaParser.py',272),
  ('if_next -> ELIF if_body','if_next',2,'p_if_elif','plyInmantaParser.py',278),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',290),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',297),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',302),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',309),
  ('entity_body_outer -> MLS entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',314),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',319),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',324),
  ('entity_body_outer -> MLS END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',329),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',334),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',340),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',345),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',351),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',357),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',358),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',364),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',365),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',366),
  ('attr -> attr_type CID empty','attr',3,'p_attr_err','plyInmantaParser.py',371),
  ('attr -> attr_type CID = constant','attr',4,'p_attr_err','plyInmantaParser.py',372),
  ('attr -> attr_type CID = constant_list','attr',4,'p_attr_err','plyInmantaParser.py',373),
  ('attr -> attr_type CID = UNDEF','attr',4,'p_attr_err','plyInmantaParser.py',374),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',381),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',387),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',388),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',394),
  ('attr -> DICT empty CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',400),
  ('attr -> DICT empty CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',401),
  ('attr -> DICT empty CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',402),
  ('attr -> DICT ? CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',403),
  ('attr -> DICT ? CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',404),
  ('attr -> DICT ? CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',405),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',412),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',418),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',424),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',429),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',435),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',441),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',448),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',453),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',458),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',463),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list MLS','implement_def',5,'p_implement','plyInmantaParser.py',464),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',473),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression MLS','implement_def',7,'p_implement_when','plyInmantaParser.py',474),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',484),
  ('implementation -> implementation_head block','implementation',2,'p_implementation','plyInmantaParser.py',497),
  ('implementation_head -> :','implementation_head',1,'p_implementation_head','plyInmantaParser.py',502),
  ('implementation_head -> : MLS','implementation_head',2,'p_implementation_head_doc','plyInmantaParser.py',507),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',512),
  ('relation -> relation_def MLS','relation',2,'p_relation_outer_comment','plyInmantaParser.py',518),
  ('relation -> relation_def empty','relation',2,'p_relation_outer','plyInmantaParser.py',525),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',530),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',536),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',542),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',548),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',554),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',559),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',564),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',569),
  ('typedef -> typedef_inner empty','typedef',2,'p_typedef_outer','plyInmantaParser.py',577),
  ('typedef -> typedef_inner MLS','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',582),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',589),
  ('typedef_inner -> TYPEDEF ID AS ns_ref REGEX','typedef_inner',5,'p_typedef_regex','plyInmantaParser.py',596),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',603),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',611),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',621),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',622),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',623),
  ('expression -> var_ref empty','expression',2,'p_expression','plyInmantaParser.py',624),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',625),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',626),
  ('expression -> list_comprehension','expression',1,'p_expression','plyInmantaParser.py',627),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',628),
  ('expression -> map_lookup empty','expression',2,'p_expression','plyInmantaParser.py',629),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',630),
  ('expression -> conditional_expression','expression',1,'p_expression','plyInmantaParser.py',631),
  ('expression -> arithmetic_expression','expression',1,'p_expression','plyInmantaParser.py',632),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',637),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',642),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',643),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',644),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',645),
  ('boolean_expression -> expression NOT IN expression','boolean_expression',4,'p_boolean_expression_not_in','plyInmantaParser.py',654),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',660),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',666),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',672),
  ('arithmetic_expression -> expression PLUS_OP expression','arithmetic_expression',3,'p_arithmetic_expression','plyInmantaParser.py',678),
  ('arithmetic_expression -> expression MINUS_OP expression','arithmetic_expression',3,'p_arithmetic_expression','plyInmantaParser.py',679),
  ('arithmetic_expression -> expression DIVISION_OP expression','arithmetic_expression',3,'p_arithmetic_expression','plyInmantaParser.py',680),
  ('arithmetic_expression -> expression * expression','arithmetic_expression',3,'p_arithmetic_expression','plyInmantaParser.py',681),
  ('arithmetic_expression -> expression % expression','arithmetic_expression',3,'p_arithmetic_expression','plyInmantaParser.py',682),
  ('arithmetic_expression -> expression DOUBLE_STAR expression','arithmetic_expression',3,'p_arithmetic_expression','plyInmantaParser.py',683),
  ('boolean_expression -> map_lookup IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_map_lookup','plyInmantaParser.py',693),
  ('operand -> expression empty','operand',2,'p_operand','plyInmantaParser.py',713),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',718),
  ('map_lookup -> var_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',719),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',720),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',725),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',731),
  ('function_call -> attr_ref ( function_param_list )','function_call',4,'p_function_call_err_dot','plyInmantaParser.py',738),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',743),
  ('list_comprehension -> [ expression list_comprehension_for list_comprehension_guard ]','list_comprehension',5,'p_list_comprehension','plyInmantaParser.py',764),
  ('list_comprehension_for_empty -> empty','list_comprehension_for_empty',1,'p_list_comprehension_for_empty','plyInmantaParser.py',789),
  ('list_comprehension_for -> FOR ID IN expression list_comprehension_for_empty','list_comprehension_for',5,'p_list_comprehension_for','plyInmantaParser.py',794),
  ('list_comprehension_for -> FOR ID IN expression list_comprehension_for','list_comprehension_for',5,'p_list_comprehension_for','plyInmantaParser.py',795),
  ('list_comprehension_guard -> empty','list_comprehension_guard',1,'p_list_comprehension_guard_empty','plyInmantaParser.py',802),
  ('list_comprehension_guard -> IF expression list_comprehension_guard','list_comprehension_guard',3,'p_list_comprehension_guard','plyInmantaParser.py',807),
  ('dict_key -> RSTRING','dict_key',1,'p_r_string_dict_key','plyInmantaParser.py',817),
  ('dict_key -> STRING','dict_key',1,'p_string_dict_key','plyInmantaParser.py',822),
  ('pair_list -> dict_key : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',837),
  ('pair_list -> dict_key : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',838),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',847),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',848),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',853),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',868),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',874),
  ('conditional_expression -> expression ? expression : expression','conditional_expression',5,'p_conditional_expression','plyInmantaParser.py',881),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',891),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',892),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',899),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',905),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',911),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',917),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',923),
  ('constant -> FSTRING','constant',1,'p_constant_fstring','plyInmantaParser.py',929),
  ('constant -> RSTRING','constant',1,'p_constant_rstring','plyInmantaParser.py',992),
  ('constant -> MLS','constant',1,'p_constant_mls','plyInmantaParser.py',998),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',1110),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',1116),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',1121),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',1126),
  ('wrapped_kwargs -> DOUBLE_STAR operand','wrapped_kwargs',2,'p_wrapped_kwargs','plyInmantaParser.py',1132),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',1138),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',1144),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',1150),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',1151),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',1157),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',1158),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',1173),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',1180),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',1186),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',1187),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1193),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1194),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',1212),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',1218),
  ('operand_list -> empty','operand_list',1,'p_operand_list_term_2','plyInmantaParser.py',1223),
  ('var_ref -> attr_ref empty','var_ref',2,'p_var_ref','plyInmantaParser.py',1228),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',1233),
  ('var_ref -> ns_ref empty','var_ref',2,'p_var_ref_2','plyInmantaParser.py',1239),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',1245),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',1256),
  ('class_ref -> var_ref . CID','class_ref',3,'p_class_ref_err_dot','plyInmantaParser.py',1262),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',1277),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',1283),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',1288),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',1293),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',1299),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',1305),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',1310),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',1316),
]
