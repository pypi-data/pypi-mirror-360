[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "aioeway"
version = "1.0.3"
authors = [
    {name = "PuuuTao", email = "kevinwang960105@gmail.com"},
]
description = "一个基于异步编程的MQTT设备通信库"
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Hardware",
    "Topic :: Communications",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = ["mqtt", "iot", "device", "communication", "monitoring", "async", "asyncio"]
dependencies = [
    "aiomqtt>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-asyncio>=0.18.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.910",
    "isort>=5.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-asyncio>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/PuuuTao/aioeway"
Documentation = "https://github.com/PuuuTao/aioeway/blob/main/README.md"
Repository = "https://github.com/PuuuTao/aioeway.git"
"Bug Reports" = "https://github.com/PuuuTao/aioeway/issues"
"Source Code" = "https://github.com/PuuuTao/aioeway"

[tool.setuptools]
py-modules = ["device_mqtt_client"]

[tool.setuptools.packages.find]
where = ["."]  # list of folders that contain the packages (["src"] by default)
include = ["aioeway*"]  # package names should match these glob patterns (["*"] by default)
exclude = ["tests*"]  # exclude packages matching these glob patterns (empty by default)
namespaces = false  # to disable scanning PEP 420 namespaces (true by default)

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded by a single or double slash
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["device_mqtt_client"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == \"__main__\":",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]