"use strict";(self.webpackChunk_fails_components_jupyter_launcher=self.webpackChunk_fails_components_jupyter_launcher||[]).push([[961],{961:(e,t,r)=>{r.r(t),r.d(t,{IFailsLauncherInfo:()=>d,default:()=>f});var n=r(904),s=r(805),a=r(186),i=r(518),o=r(341),c=r(602),l=r(12);const d=new(r(262).Token)("@fails-components/jupyter-fails:IFailsLauncherInfo","A service to communicate with FAILS.");let u=!1;const p=()=>{if(u)return;const e=HTMLCanvasElement.prototype.getContext;HTMLCanvasElement.prototype.getContext=function(t,r){if("webgl"===t||"webgl2"===t){const n={...r};return n.preserveDrawingBuffer=!0,e.apply(this,[t,n])}return e.apply(this,[t,r])},u=!0};let h=!1;class g{constructor(e){var t,r;this._inLectureChanged=new c.Signal(this),this._selectedAppidChanged=new c.Signal(this),this._remoteUpdateMessageArrived=new c.Signal(this),this._appletSizes={},this._appletSizesChanged=new c.Signal(this),this._appletSizesProxy=new Proxy(this._appletSizes,{get:(e,t)=>{if("symbol"!=typeof t)return e[t]},set:(e,t,r)=>"symbol"!=typeof t&&(e[t]!==r&&(e[t]=r,this._appletSizesChanged.emit(e)),!0)}),this._inLecture=null!==(t=null==e?void 0:e.inLecture)&&void 0!==t&&t,this._selectedAppid=null!==(r=null==e?void 0:e.selectedAppid)&&void 0!==r?r:void 0}get inLectureChanged(){return this._inLectureChanged}get inLecture(){return this._inLecture}set inLecture(e){e!==this._inLecture&&(this._inLecture=e,!1===e&&this._selectedAppid&&(this._selectedAppid=void 0,this._selectedAppidChanged.emit(void 0)),this._inLectureChanged.emit(e))}get selectedAppid(){return this._selectedAppid}get selectedAppidChanged(){return this._selectedAppidChanged}set selectedAppid(e){e!==this._selectedAppid&&(this._selectedAppid=e,this._inLecture||void 0===e?this._inLecture&&void 0===e&&(this._inLecture=!1,this._inLectureChanged.emit(!1)):(this._inLecture=!0,this._inLectureChanged.emit(!0)),this._selectedAppidChanged.emit(e))}get appletSizes(){return this._appletSizesProxy}get appletSizesChanged(){return this._appletSizesChanged}get updateMessageArrived(){return this._updateMessageArrived}set updateMessageArrived(e){this._updateMessageArrived=e}get remoteUpdateMessageArrived(){return this._remoteUpdateMessageArrived}receiveRemoteUpdateMessage(e){this._remoteUpdateMessageArrived.emit(e)}}const f=[{id:"@fails-components/jupyter-applet-widget:launcher",description:"Configures the notebooks application over messages",autoStart:!0,activate:function(e,t,r,n,s,a){const{serviceManager:i,started:c}=e,l=s.sendMessage;Promise.all([c,i.ready]).then((async()=>{}));const{docRegistry:d}=e,u=new g;let f,m;const y=(e,t)=>{void 0!==m&&window.parent.postMessage(e,m,t)};r.dirtySignal.connect(((e,t)=>{y({task:"docDirty",dirty:t})})),u.reportMetadata=e=>{y({task:"reportMetadata",metadata:e})},u.inLectureChanged.connect(((e,t)=>{null!==a&&a.menu.setHidden(t)})),u.appletSizesChanged.connect(((e,t)=>{y({task:"reportFailsAppletSizes",appletSizes:t})}));let b=!1;const v=(e,t)=>{y({task:"sendInterceptorUpdate",...t})};return window.addEventListener("message",(e=>{var r;switch(void 0===m&&(m=e.origin),e.data.type){case"loadJupyter":{const n=e.data;u.inLecture=null!==(r=n.inLecture)&&void 0!==r?r:u.inLecture,t.autosave=!1,n.installScreenShotPatches&&p(),n.installGDPRProxy&&(({allowedSites:e,proxySites:t,proxyURL:r})=>{if(h)return;const n=[location.origin,...e||[]],s=n.map((e=>"'"+new URL(e).origin+"'")).join(","),a=(t||[]).map((e=>"'"+new URL(e).origin+"'")).join(","),i=globalThis.fetch;globalThis.fetch=async(e,s={})=>{const a=e instanceof URL?e:new URL(e instanceof Request?e.url:e,location.href);if(n.includes(a.origin))return i(e instanceof Request?e:a,s);if(t&&t.includes(a.origin)){const t=r+a.hostname+a.pathname;if(e instanceof Request){const r=e,n=new Request(t,{method:r.method,headers:r.headers,body:r.body,credentials:r.credentials,mode:r.mode,integrity:r.integrity,keepalive:r.keepalive,referrerPolicy:r.referrerPolicy,cache:r.cache,redirect:r.redirect,referrer:r.referrer,signal:r.signal});return i(n,s)}return a.href=t,i(a,s)}return console.log("alien fetch URL:",a.href),new Response("Blocked domain, access forbidden",{status:403,statusText:"Forbidden",headers:{"Content-Type":"text/plain"}})};const o=globalThis.importScripts;globalThis.importScripts=(...e)=>{const s=e.map((e=>{const s=new URL(e,location.href);if(n.includes(s.origin))return e;if(t&&t.includes(s.origin))return r+s.hostname+s.pathname;throw new Error("Script is from blocked URL")}));return o(...s)};const c=Worker,l=function(e,t){const i=e instanceof URL?e:new URL(e,location.href);if(!n.includes(i.origin))return void console.log("Creating worker from blocked origin:",i.origin);console.log("Tap into creating worker:",i.href);const o=`(function() {\n      const allowedOrigins = [ ${s} ];\n      const proxySites = [ ${a} ];\n      const proxyURL = '${r}';\n      const oldFetch = globalThis.fetch;\n      globalThis.fetch = async function(url, options = {}) {\n        const urlObj = url instanceof URL ? url : new URL(url instanceof Request ? url.url : url, location.href);\n        if (allowedOrigins.includes(urlObj.origin)) {\n          return oldFetch(url instanceof Request ? url : urlObj, options);\n        }\n        if (proxySites && proxySites.includes(urlObj.origin)) {\n           // rewrite the URL and response\n          const resURL = proxyURL + urlObj.hostname + urlObj.pathname;\n          console.log('proxy url debug', resURL, urlObj.href);\n          if (url instanceof Request) {\n            const request = url;\n            const newRequest = new Request(resURL, {\n              method: request.method,\n              headers: request.headers,\n              body: request.body,\n              credentials: request.credentials,\n              mode: request.mode,\n              integrity: request.integrity,\n              keepalive: request.keepalive,\n              referrerPolicy: request.referrerPolicy,\n              cache: request.cache,\n              redirect: request.redirect,\n              referrer: request.referrer,\n              signal: request.signal\n          });\n          console.log('proxy request debug', newRequest, request);\n          return oldFetch(newRequest, options);\n        } else {\n          urlObj.href = resURL;\n          return oldFetch(urlObj, options);\n        }\n      }\n      console.log('alien fetch URL worker:', urlObj.href);\n      return new Response('Blocked domain, access forbidden',{\n        status: 403,\n        statusText: 'Forbidden',\n        headers: { 'Content-Type': 'text/plain' }\n      });\n      };\n      const oldImportScripts = globalThis.importScripts;\n      globalThis.importScripts = (...args) => {\n      const newargs = args.map(url => {\n        const urlObj = new URL(url, location.href);\n        if (allowedOrigins.includes(urlObj.origin)) {\n          return url;\n        }\n        if (proxySites && proxySites.includes(urlObj.origin)) {\n          return proxyURL + urlObj.hostname + urlObj.pathname;\n        }\n          throw new Error('Script is from blocked URL');\n        });\n        return oldImportScripts(...newargs);\n      };\n      Object.defineProperty(globalThis, 'location', {\n        value: new URL('${i.href}'),\n        writable: false,\n        configurable: false,\n        enumerable: true,\n      });\n      })();`+("module"===(null==t?void 0:t.type)?`\n      import('${i.href}').catch(error => {\n        console.error('Can not load module patching Worker:', error);\n      });`:`\n      importScripts('${i.href}')\n      `),l=new Blob([o],{type:"application/javascript"}),d=URL.createObjectURL(l),u=new c(d,t);return u.addEventListener("message",(()=>{URL.revokeObjectURL(d)}),{once:!0}),u};(l.prototype=c.prototype).constructor=l,globalThis.Worker=l,h=!0})(n.installGDPRProxy),l({task:"loadFile",fileData:n.fileData,fileName:n.fileName}).then((()=>{const e={name:n.kernelName||"python"},r=d.defaultWidgetFactory(n.fileName).name;f=t.open(n.fileName,r,e,{ref:"_noref"}),n.appid&&(u.selectedAppid=n.appid);let s=n.rerunAtStartup;if(void 0!==f){const e=f;e.sessionContext.statusChanged.connect(((t,r)=>{if(y({task:"reportKernelStatus",status:r}),"idle"===r&&s){console.log("Run all cells after startup");const{context:t,content:r}=e,n=r.widgets;o.NotebookActions.runCells(r,n,t.sessionContext).then((()=>{console.log("Run all cells after startup finished")})).catch((e=>{console.log("Run all cells after startup error",e)})),s=!1}}))}})).catch((e=>{console.log("Problem task load file",e)}))}break;case"saveJupyter":{const r=e.data;if(void 0===f){y({requestId:e.data.requestId,task:"saveJupyter",error:"No document loaded"});break}const n=t.contextForWidget(f);if(void 0===n){y({requestId:e.data.requestId,task:"saveJupyter",error:"No document context"});break}n.save().then((async()=>await l({task:"savedFile",fileName:r.fileName}))).then((({fileData:t})=>{y({requestId:e.data.requestId,task:"saveJupyter",fileData:t})})).catch((t=>{y({requestId:e.data.requestId,task:"saveJupyter",error:t.toString()})}))}break;case"activateApp":{const t=e.data;t.inLecture?u.selectedAppid=t.appid:u.inLecture=!1,y({requestId:e.data.requestId,task:"activateApp"})}break;case"screenshotApp":{const t=e.data,r=f;"function"!=typeof r.takeAppScreenshot&&y({requestId:e.data.requestId,task:"screenshotApp",error:"Take App Screenshot unsupported"}),r.takeAppScreenshot({dpi:t.dpi}).then((async t=>{if(t){const r=await t.arrayBuffer();null==y||y({requestId:e.data.requestId,task:"screenshotApp",screenshot:{data:r,type:t.type}},[r])}else null==y||y({requestId:e.data.requestId,task:"screenshotApp",error:"Screenshot failed?"})})).catch((t=>{console.log("Screenshot error",t),y({requestId:e.data.requestId,task:"screenshotApp",error:t.toString()})}))}break;case"activateInterceptor":{const t=e.data;b!==t.activate&&u.updateMessageArrived&&(b?(u.updateMessageArrived.disconnect(v),b=!1):(u.updateMessageArrived.connect(v),b=!0)),y({requestId:e.data.requestId,task:"activateInterceptor"})}break;case"receiveInterceptorUpdate":{const t=e.data,{path:r,mime:n,state:s}=t;u.receiveRemoteUpdateMessage({path:r,mime:n,state:s}),y({requestId:e.data.requestId,task:"receiveInterceptorUpdate"})}break;case"restartKernelAndRerunCells":{if(void 0===f){y({requestId:e.data.requestId,task:"restartKernelAndRerunCell",error:"No document loaded"});break}const t=f,{context:r,content:n}=t,s=n.widgets;console.log("rerun kernel hook"),t.sessionContext.restartKernel().then((async()=>{await o.NotebookActions.runCells(n,s,r.sessionContext),y({requestId:e.data.requestId,task:"restartKernelAndRerunCell",success:!0})})).catch((t=>{y({requestId:e.data.requestId,task:"restartKernelAndRerunCell",error:t.toString()})}))}break;case"getLicenses":n.getBundles().then((async t=>{y({requestId:e.data.requestId,task:"getLicenses",licenses:t})})).catch((t=>{y({requestId:e.data.requestId,task:"getLicenses",error:t.toString()})}))}})),e.started.then((async()=>{window.parent&&window.parent.postMessage({task:"appLoaded"},"*"),a&&(a.collapseTop(),u.inLecture)&&a._menuWrapper.hide()})),u},provides:d,requires:[s.IDocumentManager,n.ILabStatus,a.ILicensesClient,l.IFailsDriveMessages],optional:[i.INotebookShell]}]}}]);