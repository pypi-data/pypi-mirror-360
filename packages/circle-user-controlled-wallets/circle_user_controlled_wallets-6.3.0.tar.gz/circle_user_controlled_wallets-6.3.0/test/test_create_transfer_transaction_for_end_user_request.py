# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.user_controlled_wallets
from circle.web3.user_controlled_wallets.models.create_transfer_transaction_for_end_user_request import CreateTransferTransactionForEndUserRequest  # noqa: E501
from circle.web3.user_controlled_wallets.rest import ApiException

class TestCreateTransferTransactionForEndUserRequest(unittest.TestCase):
    """CreateTransferTransactionForEndUserRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateTransferTransactionForEndUserRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateTransferTransactionForEndUserRequest`
        """
        model = circle.web3.user_controlled_wallets.models.create_transfer_transaction_for_end_user_request.CreateTransferTransactionForEndUserRequest()  # noqa: E501
        if include_optional :
            return CreateTransferTransactionForEndUserRequest(
                idempotency_key = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11', 
                amounts = ["6.62607015"], 
                destination_address = '0xca9142d0b9804ef5e239d3bc1c7aa0d1c74e7350', 
                fee_level = 'MEDIUM', 
                gas_limit = '21000', 
                gas_price = '', 
                max_fee = '5.935224468', 
                priority_fee = '1.022783914', 
                nft_token_ids = [
                    '2'
                    ], 
                ref_id = 'grouptransaction123', 
                token_id = '', 
                token_address = '', 
                blockchain = 'MATIC-AMOY', 
                wallet_id = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'
            )
        else :
            return CreateTransferTransactionForEndUserRequest(
                idempotency_key = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
                destination_address = '0xca9142d0b9804ef5e239d3bc1c7aa0d1c74e7350',
                wallet_id = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
        )
        """

    def testCreateTransferTransactionForEndUserRequest(self):
        """Test CreateTransferTransactionForEndUserRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
