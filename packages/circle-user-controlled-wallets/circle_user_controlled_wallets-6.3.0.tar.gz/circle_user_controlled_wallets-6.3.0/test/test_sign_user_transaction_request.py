# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.user_controlled_wallets
from circle.web3.user_controlled_wallets.models.sign_user_transaction_request import SignUserTransactionRequest  # noqa: E501
from circle.web3.user_controlled_wallets.rest import ApiException

class TestSignUserTransactionRequest(unittest.TestCase):
    """SignUserTransactionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SignUserTransactionRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SignUserTransactionRequest`
        """
        model = circle.web3.user_controlled_wallets.models.sign_user_transaction_request.SignUserTransactionRequest()  # noqa: E501
        if include_optional :
            return SignUserTransactionRequest(
                wallet_id = 'c4d1da72-111e-4d52-bdbf-2e74a2d803d5', 
                raw_transaction = 'AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAIAAQROrEbiYfF3zCII9...', 
                transaction = '{"nonce":1,"to":"0x9e4ebf23f713268b8e72cd162337f20c536357c9","value":"10000000000000000","gas":"21000","maxFeePerGas":"42000000000","maxPriorityFeePerGas":"25000000000","chainId":80002}', 
                memo = 'Transfer USDC to Sam'
            )
        else :
            return SignUserTransactionRequest(
                wallet_id = 'c4d1da72-111e-4d52-bdbf-2e74a2d803d5',
        )
        """

    def testSignUserTransactionRequest(self):
        """Test SignUserTransactionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
