[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jsnac"
version = "0.3.0"
description = "JSON Schema (for) Network as Code: Build JSON schemas from YAML"
authors = [{ name = "Andrew Jones", email = "jsnac@commitconfirmed.com" }]
requires-python = ">=3.11,<4.0"
readme = "README.md"
license = "MIT"
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = ["pyyaml>=6.0.2,<7.0.0"]

[project.urls]
Repository = "https://github.com/commitconfirmed/jsnac"

[project.scripts]
jsnac = "jsnac.utils.jsnac_cli:main"

[dependency-groups]
dev = [
    "pytest>=8.4.1,<9.0.0",
    "pytest-cov>=5.0.0,<6.0.0",
    "jsonschema>=4.24.0,<5.0.0",
    "tox>=4.27.0,<5.0.0",
    "mypy>=1.16.1,<2.0.0",
    "types-PyYAML>=6.0.12,<7.0.0",
    "ruff>=0.12.0,<1.0.0",
]
docs = [
    "sphinx>=8.2.3,<9.0.0",
    "sphinx-rtd-theme>=3.0.2,<4.0.0",
]

[tool.uv]
default-groups = [
    "dev",
    "docs",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "venv.*/",
    "data/",
    "tests/",
]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "COM812",   # Recommended to be disabled
    "CPY001",   # Missing copyright notice at top of file
    "D100",     # Missing docstring in public module
    "D205",     # One blank line required between summary line and description
    "D203",     # One blank line before class
    "D212",     # Multi-line docstring summary should start at the first line
    "D401",     # First line of docstring should be in imperative mood
    "D400",     # First line should end with a period
    "D415",     # First line should end with a period, question mark, or exclamation point
    "ISC001",   # Recommended to be disabled
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "ANN001",   # Type annotations
    "CPY001",   # Copyright
    "S101",     # Use of `assert` detected
    "S104",     # Valid tests against 0.0.0.0
    "D100",     # Missing docstring in public module
    "D103",     # Missing docstring in public function
    "D104",     # Missing docstring in public package
]
"**/__init__.py" = [
    "D104",     # Missing docstring in public package
    "F401",     # Imported but unused
    "F403",     # Wildcard imports
]
"docs/**" = [
    "A001",     # Variable `copyright` is shadowing a Python builtin
    "D100",     # Missing docstring in public module
    "E402",     # Module level import not at top of file
    "INP001",   # Requires __init__.py but docs folder is not a package.
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
