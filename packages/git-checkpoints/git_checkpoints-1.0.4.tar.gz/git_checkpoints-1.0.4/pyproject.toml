[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "git-checkpoints"
version = "1.0.4"
description = "Automatic Git checkpoints every 5 minutes - zero configuration needed"
authors = [
    { name = "Moussa Mokhtari", email = "me@moussamokhtari.com" }
]
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Version Control :: Git",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Environment :: Console",
]
keywords = ["git", "backup", "checkpoint", "snapshot", "automation", "vcs", "version-control"]
dependencies = []

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
release = ["build>=0.8.0", "twine>=4.0.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "build>=0.8.0",
    "twine>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
]

[project.urls]
Homepage = "https://github.com/moussa-m/git-checkpoints"
Repository = "https://github.com/moussa-m/git-checkpoints"
Documentation = "https://github.com/moussa-m/git-checkpoints#readme"
Issues = "https://github.com/moussa-m/git-checkpoints/issues"
Changelog = "https://github.com/moussa-m/git-checkpoints/releases"
"Bug Tracker" = "https://github.com/moussa-m/git-checkpoints/issues"
"Source Code" = "https://github.com/moussa-m/git-checkpoints"

[project.scripts]
git-checkpoints = "git_checkpoints.cli:main"
git-checkpoints-setup = "git_checkpoints.setup:setup_git_checkpoints"
git-checkpoints-cleanup = "git_checkpoints.uninstall:global_cleanup"
git-checkpoints-uninstall = "git_checkpoints.hooks:pre_uninstall"

[project.entry-points."distutils.commands"]
install = "git_checkpoints.setup_commands:InstallCommand"
develop = "git_checkpoints.setup_commands:DevelopCommand"
uninstall = "git_checkpoints.setup_commands:UninstallCommand"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
git_checkpoints = ["scripts/*"]


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=git_checkpoints",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]

[dependency-groups]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.1",
]
