import pandas as pd

implemented_conditions = pd.DataFrame(
    data=[
        ['DowntrendFibRetracementLevelCondition', 'fib_level:FibonacciLevels length:int'],
        ['UptrendFibRetracementLevelCondition', 'fib_level:FibonacciLevels length:int'],
        ['AND', '*conditions:Condition'],
        ['OR', '*conditions:Condition'],
        ['AfterXDaysCondition', 'condition:Condition number_of_days:int'],
        ['ChangeOfXPercentPerYDaysCondition', 'series:TradingSeries percent:float number_of_days:int'],
        ['IntraIntervalChangeOfXPercentCondition', 'series:TradingSeries percent:float'],
        ['CrossOverCondition', 'first_series:TradingSeries second_series:TradingSeries'],
        ['CrossUnderCondition', 'first_series:TradingSeries second_series:TradingSeries'],
        ['GreaterThanCondition', 'first_series:TradingSeries second_series:TradingSeries'],
        ['LessThanCondition', 'first_series:TradingSeries second_series:TradingSeries'],
        ['DowntrendForXDaysCondition', 'series:TradingSeries number_of_days:int'],
        ['UptrendForXDaysCondition', 'series:TradingSeries number_of_days:int']
    ],
    columns=['Class_name', 'Parameters']
)

implemented_indicators = pd.DataFrame(
    data=[['Average Directional Index', 'ADX', 'ADX', 'ticker:str smoothing_length:int length:int'],
          ['Aroon Indicator Down', 'AROON DOWN', 'AROON_DOWN', 'ticker:str, length:int'],
          ['Aron Indicator Up', 'AROON UP', 'AROON_UP', 'ticker:str, length:int'],
          ['Average True Range', 'ATR', 'ATR', 'ticker:str length:int smoothing_type:SmoothingType'],
          ['Bollinger Bands Lower band', 'BB LOWER', 'BB_LOWER', 'ticker:str source:SourceType length:int ma_type:SmoothingType std_dev:float offset:int'],
          ['Bollinger Bands Middle band', 'BB MIDDLE', 'BB_MIDDLE', 'ticker:str source:SourceType length:int ma_type:SmoothingType std_dev:float offset:int'],
          ['Bollinger Bands Upper band', 'BB UPPER', 'BB_UPPER', 'ticker:str source:SourceType length:int ma_type:SmoothingType std_dev:float offset:int'],
          ['Bull and Bear Power', 'BBP', 'BBP', 'ticker:str length:int'],
          ['Commodity Channel Index', 'CCI', 'CCI', 'ticker:str source:SourceType length:int'],
          ['Commodity Channel Index Smoothened', 'CCI Smoothened', 'CCI_SMOOTHENED', 'ticker:str source:SourceType length:int smoothing_type:SmoothingType smoothing_length:int'],
          ['Chaikin Oscillator', 'Chaikin osc.', 'CHAIKIN_OSC', 'ticker:str fast_length:int slow_length:int'],
          ['Choppiness Index', 'CHOP', 'CHOP', 'ticker:str length:int offset:int'],
          ['Chaikin Money Flow', 'CMF', 'CMF', 'ticker:str length:int'],
          ['Chande Momentum Oscillator', 'CMO', 'CMO', 'ticker:str source:SourceType length:int'],
          ['Coppock Curve', 'COPPOCK', 'COPPOCK', 'ticker:str length:int long_roc_length:int short_roc_length:int'],
          ['Donchain Channel Basis', 'DC basis', 'DC_BASIS', 'ticker:str length:int offset:int'],
          ['Donchain Channel Upper', 'DC upper', 'DC_UPPER', 'ticker:str length:int offset:int'],
          ['Donchain Channel Lower', 'DC lower', 'DC_LOWER', 'ticker:str length:int offset:int'],
          ['Close Price', 'Close', 'CLOSE', 'ticker:str'],
          ['', '', 'CONST', 'const_number:int'],
          ['High Price', 'High', 'HIGH', 'ticker:str'],
          ['Low Price', 'Low', 'LOW', 'ticker:str'],
          ['Open Price', 'Open', 'OPEN', 'ticker:str'],
          ['Volume', 'Vol', 'VOLUME', 'ticker:str'],
          ['Negative Directional Indicator', 'DI-', 'DI_MINUS', 'ticker:str length:int'],
          ['Positive Directional Indicator', 'DI+', 'DI_PLUS', 'ticker:str length:int'],
          ['Detrended Price Oscillator', 'DPO', 'DPO', 'ticker:str length:int'],
          ['Elder Force Index', 'EFI', 'EFI', 'ticker:str length:int'],
          ['Ease of Movement', 'EOM', 'EOM', 'ticker:str length:int divisor:int'],
          ['Hammer Candlestick Pattern', 'HAMMER', 'HAMMER', 'ticker:str'],
          ['Kijun-sen', 'Ichinoku Base', 'ICHIMOKU_BASE', 'ticker:str length:int'],
          ['Tenkan-sen', 'Ichinoku Conversion', 'ICHIMOKU_CONVERSION', 'ticker:str length:int'],
          ['Senkou Span A', 'Ichinoku Leading Span A', 'ICHIMOKU_LEADING_SPAN_A', 'ticker:str displacement:int'],
          ['Chikou Span', 'Ichinoku Lagging Span', 'ICHIMOKU_LAGGING_SPAN', 'ticker:str displacement:int'],
          ['Senkou Span B', 'Ichinoku Leading Span B', 'ICHIMOKU_LEADING_SPAN_B', 'ticker:str length:int displacement:int'],
          ['Keltner Channel Lower', 'KC Lower', 'KC_LOWER', 'ticker:str source:SourceType length:int multiplier:int use_exp_ma:bool atr_length:int'],
          ['Keltner Channel Upper', 'KC Upper', 'KC_UPPER', 'ticker:str source:SourceType length:int multiplier:int use_exp_ma:bool atr_length:int'],
          ['Know Sure Thing', 'KST', 'KST', 'ticker:str source:SourceType roc_length_1:int roc_length_2:int roc_length_3:int roc_length_4:int sma_length_1:int sma_length_2:int sma_length_3:int sma_length_4:int'],
          ['Know Sure Thing Signal', 'KST Signal', 'KST_SIGNAL', 'ticker:str source:SourceType roc_length_1:int roc_length_2:int roc_length_3:int roc_length_4:int sma_length_1:int sma_length_2:int sma_length_3:int sma_length_4:int signal_length:int'],
          ['Exponential Moving Average', 'EMA', 'EMA', 'ticker:str source:SourceType length:int offset:int'],
          ['Simple Moving Average', 'SMA', 'SMA', 'ticker:str source:SourceType length:int offset:int'],
          ['Moving Average Convergence Divergence', 'MACD', 'MACD', 'ticker:str source:SourceType fast_length:int slow_length:int ma_type:SmoothingType'],
          ['Moving Average Convergence Divergence Signal', 'MACD Signal', 'MACD_SIGNAL', 'ticker:str source:SourceType fast_length:int slow_length:int oscillator_ma_type:SmoothingType signal_ma_type:SmoothingType signal_length:int'],
          ['Mass Index', 'Mass Index', 'MASS_INDEX', 'ticker:str length:int'],
          ['Money Flow Index', 'MFI', 'MFI', 'ticker:str length:int'],
          ['Momentum Indicator', 'Momentum', 'MOMENTUM', 'ticker:str source:SourceType length:int'],
          ['On Balance Volume', 'OBV', 'OBV', 'ticker:str'],
          ['Positive Volume Index', 'PVI', 'PVI', 'ticker:str'],
          ['Price Volume Trend', 'PVT', 'PVT', 'ticker:str'],
          ['Rate of Change', 'ROC', 'ROC', 'ticker:str source:SourceType length:int'],
          ['Relative Strength Index', 'RSI', 'RSI', 'ticker:str source:SourceType length:int'],
          ['Stochastic Percent D', 'Stochastic %D', 'STOCH_PERCENT_D', 'ticker:str length:int smoothing_length:int'],
          ['Stochastic Percent K', 'Stochastic %K', 'STOCH_PERCENT_K', 'ticker:str length:int'],
          ['Triple Exponential Average', 'TRIX', 'TRIX', 'ticker:str length:int'],
          ['Ultimate Oscillator', 'UO', 'UO', 'ticker:str fast_length:int middle_length:int slow_length:int'],
          ['Williams %R', 'WILLR', 'WILLR', 'ticker:str source:SourceType length:int'],
          ],
    columns=['Indicator', 'Shortcut', 'Class_name', 'Parameters']
)

implemented_trading_series = implemented_indicators[['Class_name', 'Parameters']].copy()