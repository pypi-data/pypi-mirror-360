# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .automations_update_request_trigger_conditions_item import AutomationsUpdateRequestTriggerConditionsItem


class AutomationsUpdateRequestTrigger(UncheckedBaseModel):
    """
    Defines the trigger event and conditions. To clear/remove a trigger, provide null. To update, provide the new trigger object.
    """

    event: typing.Optional[str] = pydantic.Field(default=None)
    """
    The event that triggers the automation
    """

    conditions: typing.Optional[typing.List[AutomationsUpdateRequestTriggerConditionsItem]] = pydantic.Field(
        default=None
    )
    """
    Conditions that must be met for the trigger to activate.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
