[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[project]
name = "dagster-postgres-pandas"
version = "0.1.0"
description = "PostgreSQL I/O manager for Dagster with Pandas DataFrame support"
readme = "README.md"
license = "MIT"
authors = [{ name = "Klemens Graf", email = "klemensgraf15@gmail.com" }]
maintainers = [{ name = "Klemens Graf", email = "klemensgraf15@gmail.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
]
keywords = ["dagster", "postgresql", "pandas", "io-manager", "data-engineering"]
requires-python = ">=3.10"
dependencies = [
    "dagster>=1.8.0",
    "pandas>=2.1.0",
    "sqlalchemy>=2.0.25",
    "psycopg2-binary>=2.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.6",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.5.0",
    "mkdocs-mermaid2-plugin>=0.6.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/klemensgraf/dagster-postgres-pandas"
Documentation = "https://github.com/klemensgraf/dagster-postgres-pandas/blob/main/README.md"
Repository = "https://github.com/klemensgraf/dagster-postgres-pandas.git"
"Bug Tracker" = "https://github.com/klemensgraf/dagster-postgres-pandas/issues"
Changelog = "https://github.com/klemensgraf/dagster-postgres-pandas/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["dagster_postgres_pandas"]

[tool.hatch.build.targets.sdist]
include = [
    "dagster_postgres_pandas",
    "tests",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=dagster_postgres_pandas --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
source = ["dagster_postgres_pandas"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
