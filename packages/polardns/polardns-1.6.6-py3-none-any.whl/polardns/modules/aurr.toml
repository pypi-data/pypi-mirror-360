[module]
name = "aurr"
type = "modifier"
info = "Set Authority RRs in the Header"
short = "Modify the number of Authority records (RRs) in the DNS response header"
category = "Header manipulation"
desc = '''
This modifier allows to modify the number of Authority records (RRs) in the DNS response header.

It's important to note that this does not change the actual Authority section in the DNS response body in any way.

This modifier is compatible with and can be combined with any other existing feature or modifier.
'''
format = '''
**`*.aurr<NUMBER>.*`**

Where:

- The **`<NUMBER>`** parameter specifies the number of Authority records in the DNS response header. Note that the maximum number of Authority records that can be set is 65535, as it is a 2-byte field.
'''
seealso = "newid, tc, noq, slp, ttl, len, cnk, flgs, rc, qurr, anrr, aurr, adrr, cut, add, rl, fc, nc"

[[module.example]]
description = "In this example, we use the basic [always] feature which always resolves to an IP address. Additionally, we set the number of Authority records (RRs) in the DNS header to 0. This arrangement actually accurately reflects the actual content of the DNS response body since there are no authority records:"
command = "dig always.aurr0.yourdomain.com @127.0.0.1"

[[module.example]]
description = "Similar to the previous example, but in this case, we set the number of Authority records (RRs) in the DNS header to 1. This arrangement leads to a warning about malformed packet because there is no authority record present in the body, while the parser is expecting one authority record (`AUTHORITY: 1`):"
command = "dig always.aurr1.yourdomain.com @127.0.0.1"

[[module.example]]
description = "Similar to the previous examples, but in this case, we set the number of Authority records (RRs) in the DNS header to 100. This arrangement also leads to a warning about malformed packet because there are no authority records in the body, while the parser is expecting a hundred authority records (`AUTHORITY: 100`):"
command = "dig always.aurr100.yourdomain.com @127.0.0.1"

[module.code]
# The code is located in the polardns/core.py file.
