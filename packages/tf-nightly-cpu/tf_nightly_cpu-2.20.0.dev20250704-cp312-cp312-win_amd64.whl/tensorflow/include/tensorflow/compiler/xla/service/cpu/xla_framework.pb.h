// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/service/cpu/xla_framework.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fcpu_2fxla_5fframework_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fcpu_2fxla_5fframework_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xla_2fservice_2fcpu_2fxla_5fframework_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_xla_2fservice_2fcpu_2fxla_5fframework_2eproto {
  static const ::uint32_t offsets[];
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xla_2fservice_2fcpu_2fxla_5fframework_2eproto;
namespace xla {
namespace cpu {
class XlaFrameworkMappingProto;
struct XlaFrameworkMappingProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern XlaFrameworkMappingProtoDefaultTypeInternal _XlaFrameworkMappingProto_default_instance_;
}  // namespace cpu
}  // namespace xla
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xla {
namespace cpu {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT XlaFrameworkMappingProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.cpu.XlaFrameworkMappingProto) */ {
 public:
  inline XlaFrameworkMappingProto() : XlaFrameworkMappingProto(nullptr) {}
  ~XlaFrameworkMappingProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR XlaFrameworkMappingProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline XlaFrameworkMappingProto(const XlaFrameworkMappingProto& from) : XlaFrameworkMappingProto(nullptr, from) {}
  inline XlaFrameworkMappingProto(XlaFrameworkMappingProto&& from) noexcept
      : XlaFrameworkMappingProto(nullptr, std::move(from)) {}
  inline XlaFrameworkMappingProto& operator=(const XlaFrameworkMappingProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline XlaFrameworkMappingProto& operator=(XlaFrameworkMappingProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const XlaFrameworkMappingProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const XlaFrameworkMappingProto* internal_default_instance() {
    return reinterpret_cast<const XlaFrameworkMappingProto*>(
        &_XlaFrameworkMappingProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(XlaFrameworkMappingProto& a, XlaFrameworkMappingProto& b) { a.Swap(&b); }
  inline void Swap(XlaFrameworkMappingProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(XlaFrameworkMappingProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  XlaFrameworkMappingProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<XlaFrameworkMappingProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const XlaFrameworkMappingProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const XlaFrameworkMappingProto& from) { XlaFrameworkMappingProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(XlaFrameworkMappingProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "xla.cpu.XlaFrameworkMappingProto"; }

 protected:
  explicit XlaFrameworkMappingProto(::google::protobuf::Arena* arena);
  XlaFrameworkMappingProto(::google::protobuf::Arena* arena, const XlaFrameworkMappingProto& from);
  XlaFrameworkMappingProto(::google::protobuf::Arena* arena, XlaFrameworkMappingProto&& from) noexcept
      : XlaFrameworkMappingProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputsFieldNumber = 1,
    kFlattenedOutputsFieldNumber = 2,
    kOutputIsTupleFieldNumber = 4,
    kResultFieldNumber = 3,
  };
  // repeated int64 inputs = 1 [packed = true];
  int inputs_size() const;
  private:
  int _internal_inputs_size() const;

  public:
  void clear_inputs() ;
  ::int64_t inputs(int index) const;
  void set_inputs(int index, ::int64_t value);
  void add_inputs(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& inputs() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_inputs();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_inputs() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_inputs();

  public:
  // repeated int64 flattened_outputs = 2 [packed = true];
  int flattened_outputs_size() const;
  private:
  int _internal_flattened_outputs_size() const;

  public:
  void clear_flattened_outputs() ;
  ::int64_t flattened_outputs(int index) const;
  void set_flattened_outputs(int index, ::int64_t value);
  void add_flattened_outputs(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& flattened_outputs() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_flattened_outputs();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_flattened_outputs() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_flattened_outputs();

  public:
  // optional bool output_is_tuple = 4;
  bool has_output_is_tuple() const;
  void clear_output_is_tuple() ;
  bool output_is_tuple() const;
  void set_output_is_tuple(bool value);

  private:
  bool _internal_output_is_tuple() const;
  void _internal_set_output_is_tuple(bool value);

  public:
  // optional int64 result = 3 [default = -1];
  bool has_result() const;
  void clear_result() ;
  ::int64_t result() const;
  void set_result(::int64_t value);

  private:
  ::int64_t _internal_result() const;
  void _internal_set_result(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:xla.cpu.XlaFrameworkMappingProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;


  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const XlaFrameworkMappingProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int64_t> inputs_;
    mutable ::google::protobuf::internal::CachedSize _inputs_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> flattened_outputs_;
    mutable ::google::protobuf::internal::CachedSize _flattened_outputs_cached_byte_size_;
    bool output_is_tuple_;
    ::int64_t result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fcpu_2fxla_5fframework_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// XlaFrameworkMappingProto

// repeated int64 inputs = 1 [packed = true];
inline int XlaFrameworkMappingProto::_internal_inputs_size() const {
  return _internal_inputs().size();
}
inline int XlaFrameworkMappingProto::inputs_size() const {
  return _internal_inputs_size();
}
inline void XlaFrameworkMappingProto::clear_inputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputs_.Clear();
}
inline ::int64_t XlaFrameworkMappingProto::inputs(int index) const {
  // @@protoc_insertion_point(field_get:xla.cpu.XlaFrameworkMappingProto.inputs)
  return _internal_inputs().Get(index);
}
inline void XlaFrameworkMappingProto::set_inputs(int index, ::int64_t value) {
  _internal_mutable_inputs()->Set(index, value);
  // @@protoc_insertion_point(field_set:xla.cpu.XlaFrameworkMappingProto.inputs)
}
inline void XlaFrameworkMappingProto::add_inputs(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_inputs()->Add(value);
  // @@protoc_insertion_point(field_add:xla.cpu.XlaFrameworkMappingProto.inputs)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& XlaFrameworkMappingProto::inputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.cpu.XlaFrameworkMappingProto.inputs)
  return _internal_inputs();
}
inline ::google::protobuf::RepeatedField<::int64_t>* XlaFrameworkMappingProto::mutable_inputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.cpu.XlaFrameworkMappingProto.inputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_inputs();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
XlaFrameworkMappingProto::_internal_inputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inputs_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* XlaFrameworkMappingProto::_internal_mutable_inputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.inputs_;
}

// repeated int64 flattened_outputs = 2 [packed = true];
inline int XlaFrameworkMappingProto::_internal_flattened_outputs_size() const {
  return _internal_flattened_outputs().size();
}
inline int XlaFrameworkMappingProto::flattened_outputs_size() const {
  return _internal_flattened_outputs_size();
}
inline void XlaFrameworkMappingProto::clear_flattened_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flattened_outputs_.Clear();
}
inline ::int64_t XlaFrameworkMappingProto::flattened_outputs(int index) const {
  // @@protoc_insertion_point(field_get:xla.cpu.XlaFrameworkMappingProto.flattened_outputs)
  return _internal_flattened_outputs().Get(index);
}
inline void XlaFrameworkMappingProto::set_flattened_outputs(int index, ::int64_t value) {
  _internal_mutable_flattened_outputs()->Set(index, value);
  // @@protoc_insertion_point(field_set:xla.cpu.XlaFrameworkMappingProto.flattened_outputs)
}
inline void XlaFrameworkMappingProto::add_flattened_outputs(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_flattened_outputs()->Add(value);
  // @@protoc_insertion_point(field_add:xla.cpu.XlaFrameworkMappingProto.flattened_outputs)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& XlaFrameworkMappingProto::flattened_outputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.cpu.XlaFrameworkMappingProto.flattened_outputs)
  return _internal_flattened_outputs();
}
inline ::google::protobuf::RepeatedField<::int64_t>* XlaFrameworkMappingProto::mutable_flattened_outputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.cpu.XlaFrameworkMappingProto.flattened_outputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_flattened_outputs();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
XlaFrameworkMappingProto::_internal_flattened_outputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flattened_outputs_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* XlaFrameworkMappingProto::_internal_mutable_flattened_outputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.flattened_outputs_;
}

// optional int64 result = 3 [default = -1];
inline bool XlaFrameworkMappingProto::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void XlaFrameworkMappingProto::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = ::int64_t{-1};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t XlaFrameworkMappingProto::result() const {
  // @@protoc_insertion_point(field_get:xla.cpu.XlaFrameworkMappingProto.result)
  return _internal_result();
}
inline void XlaFrameworkMappingProto::set_result(::int64_t value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:xla.cpu.XlaFrameworkMappingProto.result)
}
inline ::int64_t XlaFrameworkMappingProto::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void XlaFrameworkMappingProto::_internal_set_result(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// optional bool output_is_tuple = 4;
inline bool XlaFrameworkMappingProto::has_output_is_tuple() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void XlaFrameworkMappingProto::clear_output_is_tuple() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_is_tuple_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool XlaFrameworkMappingProto::output_is_tuple() const {
  // @@protoc_insertion_point(field_get:xla.cpu.XlaFrameworkMappingProto.output_is_tuple)
  return _internal_output_is_tuple();
}
inline void XlaFrameworkMappingProto::set_output_is_tuple(bool value) {
  _internal_set_output_is_tuple(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:xla.cpu.XlaFrameworkMappingProto.output_is_tuple)
}
inline bool XlaFrameworkMappingProto::_internal_output_is_tuple() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_is_tuple_;
}
inline void XlaFrameworkMappingProto::_internal_set_output_is_tuple(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_is_tuple_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace cpu
}  // namespace xla


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fcpu_2fxla_5fframework_2eproto_2epb_2eh
