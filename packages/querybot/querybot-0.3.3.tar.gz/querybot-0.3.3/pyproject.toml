[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "querybot"
version = "0.3.3"
description = "A natural language interface for querying datasets using LLMs"
authors = [
    {name = "Prudhvi Krovvidi", email = "kprudhvi71@gmail.com"},
    {name = "Anand S", email = "root.node@gmail.com"},
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
keywords = ["llm", "data", "query", "chat", "sql", "duckdb"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "duckdb",
    "fastapi",
    "httpx",
    "numpy",
    "pandas",
    "platformdirs",
    "pydantic",
    "python-dotenv",
    "python-multipart",
    "requests",
    "uvicorn",
]

[project.scripts]
querybot = "querybot.app:main"

[project.urls]
Homepage = "https://github.com/gramener/querybot"
Repository = "https://github.com/gramener/querybot.git"
Documentation = "https://github.com/gramener/querybot#readme"
"Bug Tracker" = "https://github.com/gramener/querybot/issues"

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
]

[tool.poetry]
name = "querybot"
version = "0.2.1"
description = "A natural language interface for querying datasets using LLMs"
authors = ["Prudhvi Krovvidi <kprudhvi71@gmail.com>"]
include = ["querybot/static/*"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=querybot"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100

[tool.coverage.run]
source = ["querybot"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
