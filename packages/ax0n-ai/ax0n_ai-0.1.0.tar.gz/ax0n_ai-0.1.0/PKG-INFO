Metadata-Version: 2.4
Name: ax0n-ai
Version: 0.1.0
Summary: Model-agnostic Think & Memory layer for LLMs
Project-URL: Homepage, https://github.com/axon-ai/axon
Project-URL: Documentation, https://axon.readthedocs.io
Project-URL: Repository, https://github.com/axon-ai/axon.git
Project-URL: Bug Tracker, https://github.com/axon-ai/axon/issues
Author-email: Ax0n Team <install.py@gmail.com>
License: MIT
License-File: LICENSE
Keywords: ai,grounding,llm,memory,reasoning
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.8
Requires-Dist: aiohttp>=3.8.0
Requires-Dist: anthropic>=0.7.0
Requires-Dist: asyncio-mqtt>=0.11.0
Requires-Dist: beautifulsoup4>=4.11.0
Requires-Dist: lxml>=4.9.0
Requires-Dist: numpy>=1.21.0
Requires-Dist: openai>=1.0.0
Requires-Dist: pinecone-client>=2.2.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: redis>=4.5.0
Requires-Dist: requests>=2.28.0
Requires-Dist: structlog>=23.0.0
Requires-Dist: tenacity>=8.2.0
Requires-Dist: weaviate-client>=3.25.0
Provides-Extra: dev
Requires-Dist: black>=23.0.0; extra == 'dev'
Requires-Dist: flake8>=6.0.0; extra == 'dev'
Requires-Dist: isort>=5.12.0; extra == 'dev'
Requires-Dist: mypy>=1.0.0; extra == 'dev'
Requires-Dist: pre-commit>=3.0.0; extra == 'dev'
Requires-Dist: pytest-asyncio>=0.21.0; extra == 'dev'
Requires-Dist: pytest-cov>=4.0.0; extra == 'dev'
Requires-Dist: pytest>=7.0.0; extra == 'dev'
Provides-Extra: docs
Requires-Dist: mkdocs-material>=9.0.0; extra == 'docs'
Requires-Dist: mkdocs>=1.4.0; extra == 'docs'
Requires-Dist: mkdocstrings[python]>=0.20.0; extra == 'docs'
Description-Content-Type: text/markdown

# Ax0n: Model-Agnostic Think & Memory Layer for LLMs

[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python 3.8+](https://img.shields.io/badge/python-3.8+-blue.svg)](https://www.python.org/downloads/)

Ax0n is a **model-agnostic Think & Memory layer** for LLMs. It enables structured, parallel reasoning with real-world grounding and persistent memoryâ€”no MCP needed.

## Features

- **Structured Reasoning**: Multi-step thought processes with JSON meta-control
- **Parallel Execution**: Tree of Thoughts / APR-style branching and merging
- **Real-world Grounding**: Fact verification with citations and evidence
- **Persistent Memory**: Mem0-inspired knowledge extraction and storage
- **Model Agnostic**: Works with any LLM (OpenAI, Anthropic, local models)

## Quick Start

```bash
pip install axon
```

```python
from axon import Axon

# Initialize with your preferred LLM
ax = Axon(llm_client="openai", api_key="your-key")

# Generate structured thoughts
result = await ax.think(
    "What's the best time to visit Kyoto?",
    max_depth=3,
    enable_grounding=True
)

print(result.answer)
print(result.trace)  # Full reasoning trace
print(result.citations)  # Evidence sources
```

## Architecture

Ax0n consists of 7 core modules:

1. **Retriever** - Context fetching via embeddings and KV lookup
2. **Think Layer** - Structured, parallel thought generation
3. **Grounding Module** - Real-world fact validation
4. **Memory Manager** - Knowledge extraction and persistence
5. **Renderer** - Output formatting with traces and citations
6. **Orchestrator** - Module coordination and flow control
7. **Testing & Validation** - Comprehensive test suite

## Documentation

- [Installation Guide](docs/installation.md)
- [API Reference](docs/api.md)
- [Architecture Overview](docs/architecture.md)
- [Examples](examples/)

## Contributing

We welcome contributions! Please see our [Contributing Guide](CONTRIBUTING.md) for details.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Acknowledgments

- Inspired by Mem0's memory extraction patterns
- Built on Tree of Thoughts and APR research
- Community feedback and testing 