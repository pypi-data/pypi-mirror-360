Metadata-Version: 2.4
Name: easy-slam
Version: 0.1.0
Summary: Beginner-friendly yet powerful SLAM library for robotics and research
Home-page: https://github.com/Sherin-SEF-AI/EasySLAM
Author: sherin joseph roy
Author-email: sherin joseph roy <sherin.joseph2217@gmail.com>
License: MIT License
        
        Copyright (c) 2024 sherin joseph roy
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE. 
Project-URL: Source, https://github.com/Sherin-SEF-AI/EasySLAM
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: opencv-python
Requires-Dist: scipy
Requires-Dist: matplotlib
Requires-Dist: pyyaml
Provides-Extra: 3d
Requires-Dist: open3d; extra == "3d"
Provides-Extra: realsense
Requires-Dist: pyrealsense2; extra == "realsense"
Provides-Extra: g2o
Requires-Dist: python-g2o; extra == "g2o"
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: sphinx; extra == "dev"
Requires-Dist: jupyter; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# EasySLAM

**EasySLAM** is a production-ready Python package that makes Simultaneous Localization and Mapping (SLAM) accessible to beginners while providing advanced features for researchers and professionals.

[![PyPI version](https://badge.fury.io/py/easy-slam.svg)](https://badge.fury.io/py/easy-slam)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python 3.7+](https://img.shields.io/badge/python-3.7+-blue.svg)](https://www.python.org/downloads/)

## üöÄ Features

### Core SLAM Algorithms
- **ORB-SLAM**: Feature-based visual SLAM with loop closure
- **FastSLAM**: Particle filter SLAM for mobile robots
- **GraphSLAM**: Graph optimization-based SLAM
- **Visual-Inertial SLAM**: Camera + IMU fusion
- **RGB-D SLAM**: Depth camera SLAM with Open3D

### Sensor Support
- **Webcam**: Standard USB cameras
- **RealSense**: Intel RealSense depth cameras
- **Stereo Cameras**: Dual camera setups
- **LiDAR**: 3D laser scanners
- **Datasets**: TUM, KITTI, custom datasets

### Advanced Features
- **Semantic Mapping**: Object detection and labeling
- **Sensor Fusion**: Multi-sensor data fusion with EKF
- **Map Merging**: Combine multiple SLAM sessions
- **Performance Profiling**: Real-time monitoring and optimization
- **GUI Interface**: PyQt6-based visualization tool

### Output Formats
- **Trajectory**: TUM format, JSON, CSV
- **Point Clouds**: PLY, PCD formats
- **3D Maps**: Mesh reconstruction
- **Performance Reports**: Detailed analytics

## üì¶ Installation

### From PyPI (Recommended)
```bash
pip install easy-slam
```

### From Source
```bash
git clone https://github.com/Sherin-SEF-AI/EasySLAM.git
cd EasySLAM
pip install -e .
```

### Optional Dependencies
```bash
# For 3D visualization
pip install easy-slam[3d]

# For RealSense cameras
pip install easy-slam[realsense]

# For advanced optimization
pip install easy-slam[g2o]

# For development
pip install easy-slam[dev]
```

## üéØ Quick Start

### Basic Usage
```python
from easy_slam import EasySLAM

# Initialize with webcam
slam = EasySLAM(camera=0, algorithm='orb_slam')
slam.start()
```

### Advanced Usage
```python
from easy_slam import EasySLAM

# Configure with advanced features
slam = EasySLAM(
    camera='realsense',
    algorithm='rgbd_slam',
    semantic_mapping=True,
    sensor_fusion=True,
    save_trajectory=True,
    output_dir='./results'
)

# Start SLAM processing
slam.start()

# Get results
trajectory = slam.get_trajectory()
map_data = slam.get_map()
```

### GUI Interface
```bash
# Launch the GUI
easy-slam-gui

# Or run programmatically
python -m easy_slam.gui
```

## üìñ Documentation

### API Reference

#### EasySLAM Class
```python
class EasySLAM:
    def __init__(self, 
                 camera: Union[int, str] = 0,
                 config: Optional[str] = None,
                 mode: str = 'realtime',
                 algorithm: str = 'orb_slam',
                 visualization: bool = True,
                 save_trajectory: bool = False,
                 output_dir: str = "./results",
                 **kwargs):
        """
        Initialize SLAM system.
        
        Args:
            camera: Camera index, path, or sensor type
            config: Optional path to YAML config file
            mode: 'realtime' or 'offline'
            algorithm: SLAM algorithm name
            visualization: Enable 3D visualization
            save_trajectory: Save trajectory to file
            output_dir: Directory for output files
        """
```

#### Available Algorithms
- `'orb_slam'`: ORB-SLAM (default)
- `'fastslam'`: FastSLAM particle filter
- `'graphslam'`: Graph optimization SLAM
- `'visual_inertial'`: Visual-inertial SLAM
- `'rgbd_slam'`: RGB-D SLAM

#### Available Cameras
- `0, 1, 2...`: Webcam indices
- `'webcam'`: Default webcam
- `'realsense'`: Intel RealSense
- `'stereo'`: Stereo camera setup
- `'lidar'`: LiDAR sensor
- `'path/to/dataset'`: Dataset file or directory

### Configuration

Create a YAML configuration file:
```yaml
slam:
  algorithm: orb_slam
  mode: realtime

sensor:
  type: webcam
  resolution: [640, 480]
  fps: 30

algorithm:
  max_features: 2000
  scale_factor: 1.2
  levels: 8

visualization:
  enabled: true
  update_rate: 10

output:
  save_trajectory: true
  directory: "./results"

performance:
  threading: true
  memory_limit: "2GB"
```

## üéÆ GUI Features

The EasySLAM GUI provides:
- **Real-time video display**
- **2D trajectory visualization**
- **3D map view**
- **Feature point visualization**
- **Performance monitoring**
- **Live log output**
- **Camera and algorithm selection**
- **Advanced feature toggles**

## üîß Advanced Features

### Semantic Mapping
```python
slam = EasySLAM(
    camera=0,
    semantic_mapping=True,
    semantic_model='yolov8'
)
```

### Sensor Fusion
```python
slam = EasySLAM(
    camera='realsense',
    sensor_fusion=True,
    imu_enabled=True
)
```

### Map Merging
```python
slam = EasySLAM(
    camera=0,
    map_merging=True,
    loop_closure=True
)
```

## üìä Performance

EasySLAM is optimized for real-time performance:
- **30+ FPS** on standard webcams
- **Memory efficient** for long sessions
- **Multi-threaded** processing
- **GPU acceleration** support (optional)

## ü§ù Contributing

We welcome contributions! Please see our [Contributing Guidelines](CONTRIBUTING.md) for details.

### Development Setup
```bash
git clone https://github.com/Sherin-SEF-AI/EasySLAM.git
cd EasySLAM
pip install -e .[dev]
pytest tests/
```

## üìÑ License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## üôè Acknowledgments

- OpenCV for computer vision algorithms
- Open3D for 3D processing
- PyQt6 for GUI framework
- NumPy and SciPy for numerical computing

## üìû Support

- **Issues**: [GitHub Issues](https://github.com/Sherin-SEF-AI/EasySLAM/issues)
- **Email**: sherin.joseph2217@gmail.com
- **Documentation**: [GitHub Wiki](https://github.com/Sherin-SEF-AI/EasySLAM/wiki)

## üîó Links

- **Source Code**: https://github.com/Sherin-SEF-AI/EasySLAM
- **PyPI Package**: https://pypi.org/project/easy-slam/
- **Documentation**: https://github.com/Sherin-SEF-AI/EasySLAM/wiki

---

**Made with ‚ù§Ô∏è by sherin joseph roy** 
