# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: iamanager/v1/iamanagerprotected.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from aos_prov.communication.unit.v1.generated import iamanagercommon_pb2 as iamanager_dot_v1_dot_iamanagercommon__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='iamanager/v1/iamanagerprotected.proto',
  package='iamanager.v1',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n%iamanager/v1/iamanagerprotected.proto\x12\x0ciamanager.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\"iamanager/v1/iamanagercommon.proto\"\x1a\n\tCertTypes\x12\r\n\x05types\x18\x01 \x03(\t\"\x1c\n\x0c\x43learRequest\x12\x0c\n\x04type\x18\x01 \x01(\t\"1\n\x0fSetOwnerRequest\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\"2\n\x10\x43reateKeyRequest\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\".\n\x11\x43reateKeyResponse\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0b\n\x03\x63sr\x18\x02 \x01(\t\".\n\x10\x41pplyCertRequest\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0c\n\x04\x63\x65rt\x18\x02 \x01(\t\"3\n\x11\x41pplyCertResponse\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x10\n\x08\x63\x65rt_url\x18\x02 \x01(\t\">\n\x0eGetCertRequest\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06issuer\x18\x02 \x01(\x0c\x12\x0e\n\x06serial\x18\x03 \x01(\t\"B\n\x0fGetCertResponse\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x10\n\x08\x63\x65rt_url\x18\x02 \x01(\t\x12\x0f\n\x07key_url\x18\x03 \x01(\t\"\xc7\x01\n\x16RegisterServiceRequest\x12\x12\n\nservice_id\x18\x01 \x01(\t\x12J\n\x0bpermissions\x18\x02 \x03(\x0b\x32\x35.iamanager.v1.RegisterServiceRequest.PermissionsEntry\x1aM\n\x10PermissionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12(\n\x05value\x18\x02 \x01(\x0b\x32\x19.iamanager.v1.Permissions:\x02\x38\x01\")\n\x17RegisterServiceResponse\x12\x0e\n\x06secret\x18\x01 \x01(\t\".\n\x18UnregisterServiceRequest\x12\x12\n\nservice_id\x18\x01 \x01(\t\"&\n\x12\x45ncryptDiskRequest\x12\x10\n\x08password\x18\x01 \x01(\t2\xcd\x06\n\x13IAMProtectedService\x12\x41\n\x0cGetCertTypes\x12\x16.google.protobuf.Empty\x1a\x17.iamanager.v1.CertTypes\"\x00\x12\x46\n\x12\x46inishProvisioning\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00\x12=\n\x05\x43lear\x12\x1a.iamanager.v1.ClearRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x43\n\x08SetOwner\x12\x1d.iamanager.v1.SetOwnerRequest\x1a\x16.google.protobuf.Empty\"\x00\x12N\n\tCreateKey\x12\x1e.iamanager.v1.CreateKeyRequest\x1a\x1f.iamanager.v1.CreateKeyResponse\"\x00\x12N\n\tApplyCert\x12\x1e.iamanager.v1.ApplyCertRequest\x1a\x1f.iamanager.v1.ApplyCertResponse\"\x00\x12H\n\x07GetCert\x12\x1c.iamanager.v1.GetCertRequest\x1a\x1d.iamanager.v1.GetCertResponse\"\x00\x12\x39\n\x08SetUsers\x12\x13.iamanager.v1.Users\x1a\x16.google.protobuf.Empty\"\x00\x12`\n\x0fRegisterService\x12$.iamanager.v1.RegisterServiceRequest\x1a%.iamanager.v1.RegisterServiceResponse\"\x00\x12U\n\x11UnregisterService\x12&.iamanager.v1.UnregisterServiceRequest\x1a\x16.google.protobuf.Empty\"\x00\x12I\n\x0b\x45ncryptDisk\x12 .iamanager.v1.EncryptDiskRequest\x1a\x16.google.protobuf.Empty\"\x00\x62\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,iamanager_dot_v1_dot_iamanagercommon__pb2.DESCRIPTOR,])




_CERTTYPES = _descriptor.Descriptor(
  name='CertTypes',
  full_name='iamanager.v1.CertTypes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='types', full_name='iamanager.v1.CertTypes.types', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=120,
  serialized_end=146,
)


_CLEARREQUEST = _descriptor.Descriptor(
  name='ClearRequest',
  full_name='iamanager.v1.ClearRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='iamanager.v1.ClearRequest.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=148,
  serialized_end=176,
)


_SETOWNERREQUEST = _descriptor.Descriptor(
  name='SetOwnerRequest',
  full_name='iamanager.v1.SetOwnerRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='iamanager.v1.SetOwnerRequest.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='password', full_name='iamanager.v1.SetOwnerRequest.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=178,
  serialized_end=227,
)


_CREATEKEYREQUEST = _descriptor.Descriptor(
  name='CreateKeyRequest',
  full_name='iamanager.v1.CreateKeyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='iamanager.v1.CreateKeyRequest.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='password', full_name='iamanager.v1.CreateKeyRequest.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=229,
  serialized_end=279,
)


_CREATEKEYRESPONSE = _descriptor.Descriptor(
  name='CreateKeyResponse',
  full_name='iamanager.v1.CreateKeyResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='iamanager.v1.CreateKeyResponse.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='csr', full_name='iamanager.v1.CreateKeyResponse.csr', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=281,
  serialized_end=327,
)


_APPLYCERTREQUEST = _descriptor.Descriptor(
  name='ApplyCertRequest',
  full_name='iamanager.v1.ApplyCertRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='iamanager.v1.ApplyCertRequest.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cert', full_name='iamanager.v1.ApplyCertRequest.cert', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=329,
  serialized_end=375,
)


_APPLYCERTRESPONSE = _descriptor.Descriptor(
  name='ApplyCertResponse',
  full_name='iamanager.v1.ApplyCertResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='iamanager.v1.ApplyCertResponse.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cert_url', full_name='iamanager.v1.ApplyCertResponse.cert_url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=377,
  serialized_end=428,
)


_GETCERTREQUEST = _descriptor.Descriptor(
  name='GetCertRequest',
  full_name='iamanager.v1.GetCertRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='iamanager.v1.GetCertRequest.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='issuer', full_name='iamanager.v1.GetCertRequest.issuer', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='serial', full_name='iamanager.v1.GetCertRequest.serial', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=430,
  serialized_end=492,
)


_GETCERTRESPONSE = _descriptor.Descriptor(
  name='GetCertResponse',
  full_name='iamanager.v1.GetCertResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='iamanager.v1.GetCertResponse.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cert_url', full_name='iamanager.v1.GetCertResponse.cert_url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key_url', full_name='iamanager.v1.GetCertResponse.key_url', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=494,
  serialized_end=560,
)


_REGISTERSERVICEREQUEST_PERMISSIONSENTRY = _descriptor.Descriptor(
  name='PermissionsEntry',
  full_name='iamanager.v1.RegisterServiceRequest.PermissionsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='iamanager.v1.RegisterServiceRequest.PermissionsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='iamanager.v1.RegisterServiceRequest.PermissionsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=685,
  serialized_end=762,
)

_REGISTERSERVICEREQUEST = _descriptor.Descriptor(
  name='RegisterServiceRequest',
  full_name='iamanager.v1.RegisterServiceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_id', full_name='iamanager.v1.RegisterServiceRequest.service_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='permissions', full_name='iamanager.v1.RegisterServiceRequest.permissions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_REGISTERSERVICEREQUEST_PERMISSIONSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=563,
  serialized_end=762,
)


_REGISTERSERVICERESPONSE = _descriptor.Descriptor(
  name='RegisterServiceResponse',
  full_name='iamanager.v1.RegisterServiceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='secret', full_name='iamanager.v1.RegisterServiceResponse.secret', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=764,
  serialized_end=805,
)


_UNREGISTERSERVICEREQUEST = _descriptor.Descriptor(
  name='UnregisterServiceRequest',
  full_name='iamanager.v1.UnregisterServiceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_id', full_name='iamanager.v1.UnregisterServiceRequest.service_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=807,
  serialized_end=853,
)


_ENCRYPTDISKREQUEST = _descriptor.Descriptor(
  name='EncryptDiskRequest',
  full_name='iamanager.v1.EncryptDiskRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='password', full_name='iamanager.v1.EncryptDiskRequest.password', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=855,
  serialized_end=893,
)

_REGISTERSERVICEREQUEST_PERMISSIONSENTRY.fields_by_name['value'].message_type = iamanager_dot_v1_dot_iamanagercommon__pb2._PERMISSIONS
_REGISTERSERVICEREQUEST_PERMISSIONSENTRY.containing_type = _REGISTERSERVICEREQUEST
_REGISTERSERVICEREQUEST.fields_by_name['permissions'].message_type = _REGISTERSERVICEREQUEST_PERMISSIONSENTRY
DESCRIPTOR.message_types_by_name['CertTypes'] = _CERTTYPES
DESCRIPTOR.message_types_by_name['ClearRequest'] = _CLEARREQUEST
DESCRIPTOR.message_types_by_name['SetOwnerRequest'] = _SETOWNERREQUEST
DESCRIPTOR.message_types_by_name['CreateKeyRequest'] = _CREATEKEYREQUEST
DESCRIPTOR.message_types_by_name['CreateKeyResponse'] = _CREATEKEYRESPONSE
DESCRIPTOR.message_types_by_name['ApplyCertRequest'] = _APPLYCERTREQUEST
DESCRIPTOR.message_types_by_name['ApplyCertResponse'] = _APPLYCERTRESPONSE
DESCRIPTOR.message_types_by_name['GetCertRequest'] = _GETCERTREQUEST
DESCRIPTOR.message_types_by_name['GetCertResponse'] = _GETCERTRESPONSE
DESCRIPTOR.message_types_by_name['RegisterServiceRequest'] = _REGISTERSERVICEREQUEST
DESCRIPTOR.message_types_by_name['RegisterServiceResponse'] = _REGISTERSERVICERESPONSE
DESCRIPTOR.message_types_by_name['UnregisterServiceRequest'] = _UNREGISTERSERVICEREQUEST
DESCRIPTOR.message_types_by_name['EncryptDiskRequest'] = _ENCRYPTDISKREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CertTypes = _reflection.GeneratedProtocolMessageType('CertTypes', (_message.Message,), {
  'DESCRIPTOR' : _CERTTYPES,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.CertTypes)
  })
_sym_db.RegisterMessage(CertTypes)

ClearRequest = _reflection.GeneratedProtocolMessageType('ClearRequest', (_message.Message,), {
  'DESCRIPTOR' : _CLEARREQUEST,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.ClearRequest)
  })
_sym_db.RegisterMessage(ClearRequest)

SetOwnerRequest = _reflection.GeneratedProtocolMessageType('SetOwnerRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETOWNERREQUEST,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.SetOwnerRequest)
  })
_sym_db.RegisterMessage(SetOwnerRequest)

CreateKeyRequest = _reflection.GeneratedProtocolMessageType('CreateKeyRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEKEYREQUEST,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.CreateKeyRequest)
  })
_sym_db.RegisterMessage(CreateKeyRequest)

CreateKeyResponse = _reflection.GeneratedProtocolMessageType('CreateKeyResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEKEYRESPONSE,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.CreateKeyResponse)
  })
_sym_db.RegisterMessage(CreateKeyResponse)

ApplyCertRequest = _reflection.GeneratedProtocolMessageType('ApplyCertRequest', (_message.Message,), {
  'DESCRIPTOR' : _APPLYCERTREQUEST,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.ApplyCertRequest)
  })
_sym_db.RegisterMessage(ApplyCertRequest)

ApplyCertResponse = _reflection.GeneratedProtocolMessageType('ApplyCertResponse', (_message.Message,), {
  'DESCRIPTOR' : _APPLYCERTRESPONSE,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.ApplyCertResponse)
  })
_sym_db.RegisterMessage(ApplyCertResponse)

GetCertRequest = _reflection.GeneratedProtocolMessageType('GetCertRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCERTREQUEST,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.GetCertRequest)
  })
_sym_db.RegisterMessage(GetCertRequest)

GetCertResponse = _reflection.GeneratedProtocolMessageType('GetCertResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCERTRESPONSE,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.GetCertResponse)
  })
_sym_db.RegisterMessage(GetCertResponse)

RegisterServiceRequest = _reflection.GeneratedProtocolMessageType('RegisterServiceRequest', (_message.Message,), {

  'PermissionsEntry' : _reflection.GeneratedProtocolMessageType('PermissionsEntry', (_message.Message,), {
    'DESCRIPTOR' : _REGISTERSERVICEREQUEST_PERMISSIONSENTRY,
    '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
    # @@protoc_insertion_point(class_scope:iamanager.v1.RegisterServiceRequest.PermissionsEntry)
    })
  ,
  'DESCRIPTOR' : _REGISTERSERVICEREQUEST,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.RegisterServiceRequest)
  })
_sym_db.RegisterMessage(RegisterServiceRequest)
_sym_db.RegisterMessage(RegisterServiceRequest.PermissionsEntry)

RegisterServiceResponse = _reflection.GeneratedProtocolMessageType('RegisterServiceResponse', (_message.Message,), {
  'DESCRIPTOR' : _REGISTERSERVICERESPONSE,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.RegisterServiceResponse)
  })
_sym_db.RegisterMessage(RegisterServiceResponse)

UnregisterServiceRequest = _reflection.GeneratedProtocolMessageType('UnregisterServiceRequest', (_message.Message,), {
  'DESCRIPTOR' : _UNREGISTERSERVICEREQUEST,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.UnregisterServiceRequest)
  })
_sym_db.RegisterMessage(UnregisterServiceRequest)

EncryptDiskRequest = _reflection.GeneratedProtocolMessageType('EncryptDiskRequest', (_message.Message,), {
  'DESCRIPTOR' : _ENCRYPTDISKREQUEST,
  '__module__' : 'iamanager.v1.iamanagerprotected_pb2'
  # @@protoc_insertion_point(class_scope:iamanager.v1.EncryptDiskRequest)
  })
_sym_db.RegisterMessage(EncryptDiskRequest)


_REGISTERSERVICEREQUEST_PERMISSIONSENTRY._options = None

_IAMPROTECTEDSERVICE = _descriptor.ServiceDescriptor(
  name='IAMProtectedService',
  full_name='iamanager.v1.IAMProtectedService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=896,
  serialized_end=1741,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetCertTypes',
    full_name='iamanager.v1.IAMProtectedService.GetCertTypes',
    index=0,
    containing_service=None,
    input_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    output_type=_CERTTYPES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='FinishProvisioning',
    full_name='iamanager.v1.IAMProtectedService.FinishProvisioning',
    index=1,
    containing_service=None,
    input_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='Clear',
    full_name='iamanager.v1.IAMProtectedService.Clear',
    index=2,
    containing_service=None,
    input_type=_CLEARREQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetOwner',
    full_name='iamanager.v1.IAMProtectedService.SetOwner',
    index=3,
    containing_service=None,
    input_type=_SETOWNERREQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CreateKey',
    full_name='iamanager.v1.IAMProtectedService.CreateKey',
    index=4,
    containing_service=None,
    input_type=_CREATEKEYREQUEST,
    output_type=_CREATEKEYRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ApplyCert',
    full_name='iamanager.v1.IAMProtectedService.ApplyCert',
    index=5,
    containing_service=None,
    input_type=_APPLYCERTREQUEST,
    output_type=_APPLYCERTRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetCert',
    full_name='iamanager.v1.IAMProtectedService.GetCert',
    index=6,
    containing_service=None,
    input_type=_GETCERTREQUEST,
    output_type=_GETCERTRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetUsers',
    full_name='iamanager.v1.IAMProtectedService.SetUsers',
    index=7,
    containing_service=None,
    input_type=iamanager_dot_v1_dot_iamanagercommon__pb2._USERS,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterService',
    full_name='iamanager.v1.IAMProtectedService.RegisterService',
    index=8,
    containing_service=None,
    input_type=_REGISTERSERVICEREQUEST,
    output_type=_REGISTERSERVICERESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UnregisterService',
    full_name='iamanager.v1.IAMProtectedService.UnregisterService',
    index=9,
    containing_service=None,
    input_type=_UNREGISTERSERVICEREQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='EncryptDisk',
    full_name='iamanager.v1.IAMProtectedService.EncryptDisk',
    index=10,
    containing_service=None,
    input_type=_ENCRYPTDISKREQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_IAMPROTECTEDSERVICE)

DESCRIPTOR.services_by_name['IAMProtectedService'] = _IAMPROTECTEDSERVICE

# @@protoc_insertion_point(module_scope)
