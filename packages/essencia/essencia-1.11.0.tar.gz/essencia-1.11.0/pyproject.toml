[project]
name = "essencia"
version = "1.11.0"
description = "A comprehensive Python framework for building secure medical and business applications with advanced security features and Flet integration"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Daniel Arantes", email = "arantesdv@me.com"},
]
keywords = ["flet", "mongodb", "medical", "framework", "brazil", "encryption"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "flet[all]>=0.28.3",
    "motor>=3.7.1",
    "pydantic[email]>=2.11.5",
    "pymongo>=4.13.0",
    "python-dotenv>=1.0.0",
    "redis>=6.1.0",
    "aioredis>=2.0.1",
    "unidecode>=1.3.8",
    "bson>=0.5.10",
    "cryptography>=44.0.0",
    "python-dateutil>=2.8.0",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    "starlette>=0.27.0",
    "itsdangerous>=2.0.0",
    "pyjwt>=2.8.0",
    "numpy>=1.26.0",
    "typer[all]>=0.12.0",
    "rich>=13.0.0",
    "httpx>=0.27.0",
    "psutil>=5.9.0",
    "aiofiles>=23.2.1",
]

[project.optional-dependencies]
security = [
    "bcrypt>=4.0.0",
    "argon2-cffi>=23.0.0",
]
async = [
    "motor>=3.7.1",
]
flet = [
    "flet[all]>=0.28.3",
]
postgresql = [
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
]
monitoring = [
    "prometheus-client>=0.20.0",
    "opentelemetry-api>=1.24.0",
    "opentelemetry-sdk>=1.24.0",
    "opentelemetry-instrumentation>=0.45b0",
    "opentelemetry-instrumentation-fastapi>=0.45b0",
    "opentelemetry-instrumentation-pymongo>=0.45b0",
    "opentelemetry-instrumentation-redis>=0.45b0",
    "opentelemetry-instrumentation-requests>=0.45b0",
    "opentelemetry-exporter-otlp>=1.24.0",
    "opentelemetry-exporter-jaeger>=1.21.0",
    "opentelemetry-exporter-zipkin>=1.24.0",
]
graphql = [
    "strawberry-graphql[fastapi]>=0.235.0",
    "graphene>=3.3.0",
]
websocket = [
    "websockets>=12.0",
    "python-socketio>=5.11.0",
]
mobile = [
    "flet[all]>=0.28.3",
    "aiofiles>=23.2.1",
]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-timeout>=2.3.0",
    "pytest-xdist>=3.6.0",
    "faker>=30.0.0",
    "factory-boy>=3.3.0",
    "httpx>=0.27.0",
    "respx>=0.21.0",
]
dev = [
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.11.0",
    "pre-commit>=4.0.0",
    "ruff>=0.8.0",
]
all = [
    "bcrypt>=4.0.0",
    "argon2-cffi>=23.0.0",
    "motor>=3.7.1",
    "flet[all]>=0.28.3",
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-timeout>=2.3.0",
    "pytest-xdist>=3.6.0",
    "faker>=30.0.0",
    "factory-boy>=3.3.0",
    "httpx>=0.27.0",
    "respx>=0.21.0",
]

[project.scripts]
essencia = "essencia.cli.main:main"

[project.urls]
"Homepage" = "https://github.com/arantesdv/essencia"
"Bug Tracker" = "https://github.com/arantesdv/essencia/issues"
"Documentation" = "https://github.com/arantesdv/essencia#readme"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
