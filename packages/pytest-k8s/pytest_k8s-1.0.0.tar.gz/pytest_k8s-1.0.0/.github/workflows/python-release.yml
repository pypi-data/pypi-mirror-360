name: Release

on:
  push:
    branches:
      - main

permissions: {}

jobs:
  lint:
    name: Run Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        
      - name: Install dependencies
        run: |
          uv sync --all-extras
          
      - name: Run ruff check
        run: |
          uv run ruff check .
          
      - name: Run ruff format check
        run: |
          uv run ruff format --check .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        
      - name: Install kind
        run: |
          # Download and install kind
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          
      - name: Install kubectl
        run: |
          # Download and install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          
      - name: Verify Docker, kind, and kubectl
        run: |
          # Docker should already be available on GitHub Actions Ubuntu runners
          docker --version
          kind --version
          kubectl version --client
          
      - name: Install dependencies
        run: |
          uv sync --all-extras
          
      - name: Run tests
        run: |
          uv run pytest -x

  release:
    name: Release on GitHub
    runs-on: ubuntu-latest
    needs: [lint, test]
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false

    permissions:
      contents: write
    outputs:
      new_release_version: ${{ steps.cz.outputs.version }}
      
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install

      - id: cz
        name: Create Bump and Changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          changelog_increment_filename: body.md
      
      - name: Build Library
        run: uv build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      
      - id: release
        name: Release to GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          bodyFile: "body.md"
          tag: "v${{ steps.cz.outputs.version }}"
      

  pypi-publish:
    name: Publish to PyPI
    needs: [release]
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing to PyPI
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: pypi
      url: https://pypi.org/p/pytest-k8s/

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
