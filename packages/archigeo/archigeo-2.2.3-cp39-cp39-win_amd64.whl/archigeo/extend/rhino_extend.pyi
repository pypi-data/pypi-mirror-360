import basic.geometry as goo
from _typeshed import Incomplete

ver_path: Incomplete

class RHPlaneSpace(goo.Space3d):
    rhplane: Incomplete
    def __init__(self, basept=[0, 0, 0], x_dir=[1, 0, 0], y_dir_maybe=[0, 1, 0], scale: int = 1) -> None: ...
    @classmethod
    def from_space3d(cls, space3d): ...
    @classmethod
    def from_dict(cls, dict): ...
    def update(self) -> None: ...
    def xform(self): ...
    def inverse_xform(self): ...
    def xform_to(self, rhplanespace2): ...
    def draw_selfplanarsrf(self, w: int = 800, h: int = 600): ...
    def draw_pt(self, pt, layer: Incomplete | None = None): ...
    def draw_lineseg(self, lineseg, layer: Incomplete | None = None): ...
    def draw_poly(self, pts, layer: Incomplete | None = None): ...
    def draw_circle(self, cir, layer: Incomplete | None = None): ...
    def draw_arc(self, arc, draw_cen: bool = False, layer: Incomplete | None = None): ...
    def draw_arcseries(self, arcseries, join, layer: Incomplete | None = None): ...
    def get_pt(self) -> None: ...
    def get_pt2d(self) -> None: ...
    def get_poly(self): ...
    def get_poly2d(self): ...

world: Incomplete

class RHPerspective(goo.Perspective):
    rhplane: Incomplete
    def __init__(self, viewpt, plane_expr) -> None: ...

def distance_pt2rhcrv(pt, crv_id): ...
def ptid2pt(ptid): ...
