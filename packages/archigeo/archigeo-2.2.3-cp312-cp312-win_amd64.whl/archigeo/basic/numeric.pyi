def near(a, b, max_gap): ...
def near_l1(lsta, lstb, max_gap): ...
def near_l2(lsta, lstb, max_gap): ...
def bubble_sort(lst0): ...
def list_min(xs): ...
def list_max(xs): ...
def list_max_index(xs): ...
def rangef(start, stop, step: int = 1): ...
def index_bubble_sort(lst0, indexs0): ...
def avg_near_x(xs, tole: int = 1): ...
def avg_near_xg(xs, tole: int = 1): ...
def list2d_len(xss): ...
def list_sum(xs): ...
def list_avg(xs): ...
def in_list(x0, xs): ...
def list_2to1(xss): ...
def index_1to2(index, xss): ...
def get_remainder(x, unit, x_min: int = 0, count_limit: int = 100): ...
def get_congruence(x, unit, x_min: int = 0, x_max: int = 1, count_limit2: int = 100): ...
def randints(start, end, num, gap: int = 0): ...
def solve_linear_equation(ass, bs): ...
def arrange(t, sum): ...
def arg(elements, n): ...
def arg_n12(elements_n1, elements_n2, sum_range, n12=[2, 3]): ...
def cbn(elements, n): ...
def cbn_n12(elements_n1, elements_n2, sum_range, n12=[2, 3]): ...
