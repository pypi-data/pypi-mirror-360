from _typeshed import Incomplete

class Space_1d:
    basept: Incomplete
    dir_vec: Incomplete
    def __init__(self, basept_2d=[0, 0], pt2=[1, 0]) -> None: ...
    def line_expr(self): ...
    def decrease(self, pt): ...
    def increase(self, x): ...
    def move_pt(self, pt, delta_x): ...
    def pt_remainder(self, pt, modular_unit: int = 1, x_min: int = 0, count_limit: int = 100): ...
    def pt_reverse_remainder(self, pt, modular_unit: int = 1, x_max: int = 0, contain: bool = True): ...
    def get_pt_congruence(self, pt, unit, x_min: int = 0, x_max: int = 1): ...
    @classmethod
    def sampling_lineseg(cls, lineseg, unit, cut: int = 0): ...
    @classmethod
    def sampling_poly(cls, poly_pts, unit, cut): ...
