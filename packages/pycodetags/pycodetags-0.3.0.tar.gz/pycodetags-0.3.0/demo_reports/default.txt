[INFO] pycodetags.aggregate: aggregate_all_kinds_multiple_input: module_names=['demo.__main__'], source_paths=['demo']
[INFO] pycodetags.aggregate: aggregate_all_kinds: module_name=demo.__main__, source_path=, active_schemas=['todo', 'folk', 'data']
[INFO] pycodetags.collect: Collecting from module demo.__main__ with max depth 10
[DEBUG] pycodetags.collect: Collecting module <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : ALERT
[DEBUG] pycodetags.collect: Collecting something ...ALERT: <function ALERT at 0x7fce95f68a40>
[DEBUG] pycodetags.collect: Collecting function/method <function ALERT at 0x7fce95f68a40>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function ALERT at 0x7fce95f68a40>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : BUG
[DEBUG] pycodetags.collect: Collecting something ...BUG: <function BUG at 0x7fce95f687c0>
[DEBUG] pycodetags.collect: Collecting function/method <function BUG at 0x7fce95f687c0>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function BUG at 0x7fce95f687c0>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : DOCUMENT
[DEBUG] pycodetags.collect: Collecting something ...DOCUMENT: <function DOCUMENT at 0x7fce95f68b80>
[DEBUG] pycodetags.collect: Collecting function/method <function DOCUMENT at 0x7fce95f68b80>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function DOCUMENT at 0x7fce95f68b80>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : FISH_CHARS
[DEBUG] pycodetags.collect: Collecting something ...FISH_CHARS: ['<><', '><>', ')-<', '>-(', '=^..^=']
[DEBUG] pycodetags.collect: Found a list/set/tuple ['<><', '><>', ')-<', '>-(', '=^..^=']
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : FIXME
[DEBUG] pycodetags.collect: Collecting something ...FIXME: <function FIXME at 0x7fce95f68720>
[DEBUG] pycodetags.collect: Collecting function/method <function FIXME at 0x7fce95f68720>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function FIXME at 0x7fce95f68720>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : FRAME_RATE
[DEBUG] pycodetags.collect: Collecting something ...FRAME_RATE: 0.1
[DEBUG] pycodetags.collect: Don't know what to do with 0.1
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : Fish
[DEBUG] pycodetags.collect: Collecting something ...Fish: <function Fish at 0x7fce95539800>
[DEBUG] pycodetags.collect: Collecting function/method <function Fish at 0x7fce95539800>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Collecting function/method <function Fish.chase at 0x7fce95539c60>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='BUG', comment='Chase algorithm causes fish to get stuck on edges. This needs a significant fix.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Alice', originator=None, origination_date=None, due='08/01/2025', release_due=None, release=None, iteration=None, change_type='Added', closed_date=None, closed_comment=None, tracker='https://example.com/FSH-7', priority=None, status='Testing', category='Chase Algorithm', _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function Fish.chase at 0x7fce95539c60>
[DEBUG] pycodetags.collect: Collecting function/method <function Fish.move at 0x7fce95539b20>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='HACK', comment='Simplified bounce logic, consider more realistic physics.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Bob', originator=None, origination_date=None, due='07/30/2025', release_due=None, release=None, iteration=None, change_type='Added', closed_date=None, closed_comment=None, tracker=None, priority=None, status=None, category=None, _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function Fish.move at 0x7fce95539b20>
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Refactor Fish class for better extensibility and maintainability.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Alice', originator=None, origination_date=None, due='09/15/2025', release_due='2.0.0', release=None, iteration=None, change_type=None, closed_date=None, closed_comment=None, tracker='https://example.com/FSH-20', priority=None, status='Development', category='Fish Movement', _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function Fish at 0x7fce95539800>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : FishTank
[DEBUG] pycodetags.collect: Collecting something ...FishTank: <function FishTank at 0x7fce9553a3e0>
[DEBUG] pycodetags.collect: Collecting function/method <function FishTank at 0x7fce9553a3e0>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Collecting function/method <function FishTank._clear_screen at 0x7fce9553a700>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='BUG', comment='Screen clearing works sufficiently for a terminal app.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee=None, originator='Kstar', origination_date=None, due=None, release_due=None, release='1.5.0', iteration=None, change_type='Added', closed_date='2024-06-20', closed_comment=None, tracker=None, priority=None, status='NOBUG', category=None, _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function FishTank._clear_screen at 0x7fce9553a700>
[DEBUG] pycodetags.collect: Collecting function/method <function FishTank._handle_user_input at 0x7fce9553ae80>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='ALERT', comment='User input is critical for interactivity, needs immediate implementation.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Bob', originator=None, origination_date=None, due='07/15/2025', release_due=None, release=None, iteration=None, change_type='Added', closed_date=None, closed_comment=None, tracker=None, priority=None, status=None, category=None, _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function FishTank._handle_user_input at 0x7fce9553ae80>
[DEBUG] pycodetags.collect: Collecting function/method <function FishTank._initialize_elements at 0x7fce9553a5c0>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Consider different fish types with unique behaviors, beyond just character.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Carl', originator=None, origination_date=None, due=None, release_due=None, release=None, iteration='1', change_type=None, closed_date=None, closed_comment=None, tracker=None, priority=None, status='Planning', category='Fish Movement', _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function FishTank._initialize_elements at 0x7fce9553a5c0>
[DEBUG] pycodetags.collect: Collecting function/method <function FishTank._spawn_new_fish_if_needed at 0x7fce9553ad40>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Implement fish spawning logic to replenish tank population.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Alice', originator=None, origination_date=None, due='10/01/2025', release_due=None, release=None, iteration=None, change_type=None, closed_date=None, closed_comment=None, tracker='https://example.com/FSH-15', priority=None, status=None, category=None, _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function FishTank._spawn_new_fish_if_needed at 0x7fce9553ad40>
[DEBUG] pycodetags.collect: Collecting function/method <function FishTank.render at 0x7fce9553aa20>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Add background details and rocks at the bottom.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Bob', originator=None, origination_date=None, due='07/01/2025', release_due='1.5.0', release=None, iteration='1', change_type=None, closed_date=None, closed_comment=None, tracker='https://example.com/FSH-10', priority=None, status='Planning', category='Flavor Text', _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function FishTank.render at 0x7fce9553aa20>
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Add dynamic environment elements like bubbles, currents, and lighting effects.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Alice', originator=None, origination_date=None, due='09/01/2025', release_due='2.0.0', release=None, iteration='3', change_type=None, closed_date=None, closed_comment=None, tracker=None, priority=None, status='Planning', category='Flavor Text', _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Collecting function/method <function FishTank.update at 0x7fce9553ac00>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Implement collision detection for fish and tank walls.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Alice', originator=None, origination_date=None, due=None, release_due='1.5.0', release=None, iteration='2', change_type=None, closed_date=None, closed_comment=None, tracker='https://example.com/FSH-13', priority=None, status='Development', category='Fish Movement', _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function FishTank.update at 0x7fce9553ac00>
[DEBUG] pycodetags.collect: Don't know what to do with <function FishTank at 0x7fce9553a3e0>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : HACK
[DEBUG] pycodetags.collect: Collecting something ...HACK: <function HACK at 0x7fce95f68860>
[DEBUG] pycodetags.collect: Collecting function/method <function HACK at 0x7fce95f68860>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function HACK at 0x7fce95f68860>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : PLANT_CHARS
[DEBUG] pycodetags.collect: Collecting something ...PLANT_CHARS: ['Y', '|', '!', '/', '\\']
[DEBUG] pycodetags.collect: Found a list/set/tuple ['Y', '|', '!', '/', '\\']
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : Plant
[DEBUG] pycodetags.collect: Collecting something ...Plant: <function Plant at 0x7fce95539d00>
[DEBUG] pycodetags.collect: Collecting function/method <function Plant at 0x7fce95539d00>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Enhance Plant class to support different types and interactions.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Carl', originator=None, origination_date=None, due='10/01/2025', release_due='2.0.0', release=None, iteration=None, change_type=None, closed_date=None, closed_comment=None, tracker=None, priority=None, status='Planning', category='Plant Generator', _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Collecting function/method <function Plant.update at 0x7fce95539ee0>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DOCUMENT', comment='Add detailed documentation for Plant.update and explain why NotImplementedError is raised.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee=None, originator='Kstar', origination_date=None, due=None, release_due=None, release=None, iteration=None, change_type='Added', closed_date=None, closed_comment=None, tracker=None, priority=None, status=None, category=None, _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function Plant.update at 0x7fce95539ee0>
[DEBUG] pycodetags.collect: Don't know what to do with <function Plant at 0x7fce95539d00>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : SCREEN_HEIGHT
[DEBUG] pycodetags.collect: Collecting something ...SCREEN_HEIGHT: 24
[DEBUG] pycodetags.collect: Don't know what to do with 24
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : SCREEN_WIDTH
[DEBUG] pycodetags.collect: Collecting something ...SCREEN_WIDTH: 80
[DEBUG] pycodetags.collect: Don't know what to do with 80
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : TODO
[DEBUG] pycodetags.collect: Collecting something ...TODO: <class 'pycodetags_issue_tracker.todo_tag_types.TODO'>
[DEBUG] pycodetags.collect: Collecting class <class 'pycodetags_issue_tracker.todo_tag_types.TODO'>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with None
[DEBUG] pycodetags.collect: Collecting function/method <function DATA._extract_data_fields at 0x7fce9638ee80>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function DATA._extract_data_fields at 0x7fce9638ee80>
[DEBUG] pycodetags.collect: Collecting function/method <function TODO._is_condition_met at 0x7fce95f63d80>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function TODO._is_condition_met at 0x7fce95f63d80>
[DEBUG] pycodetags.collect: Collecting function/method <function TODO._perform_action at 0x7fce95f63e20>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function TODO._perform_action at 0x7fce95f63e20>
[DEBUG] pycodetags.collect: Collecting function/method <function DATA.as_data_comment at 0x7fce9638ef20>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function DATA.as_data_comment at 0x7fce9638ef20>
[DEBUG] pycodetags.collect: Collecting function/method <function TODO.as_pep350_comment at 0x7fce95f68180>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function TODO.as_pep350_comment at 0x7fce95f68180>
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Don't know what to do with DATA
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Don't know what to do with <property object at 0x7fce961b04a0>
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Collecting function/method <function TODO.disable_behaviors at 0x7fce95f63b00>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function TODO.disable_behaviors at 0x7fce95f63b00>
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Collecting function/method <function TODO.is_probably_done at 0x7fce95f63c40>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function TODO.is_probably_done at 0x7fce95f63c40>
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Collecting function/method <function DATA.terminal_link at 0x7fce9638f100>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function DATA.terminal_link at 0x7fce9638f100>
[DEBUG] pycodetags.collect: Collecting function/method <function Serializable.to_dict at 0x7fce9638e660>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function Serializable.to_dict at 0x7fce9638e660>
[DEBUG] pycodetags.collect: Collecting function/method <function DATA.to_flat_dict at 0x7fce9638f1a0>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function DATA.to_flat_dict at 0x7fce9638f1a0>
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Already visited 140525276349440
[DEBUG] pycodetags.collect: Collecting function/method <function TODO.validate at 0x7fce95f680e0>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function TODO.validate at 0x7fce95f680e0>
[DEBUG] pycodetags.collect: Collecting function/method <function DATA.validate_or_raise at 0x7fce9638ede0>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with <function DATA.validate_or_raise at 0x7fce9638ede0>
[DEBUG] pycodetags.collect: Don't know what to do with <class 'pycodetags_issue_tracker.todo_tag_types.TODO'>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : WAVE_CHARS
[DEBUG] pycodetags.collect: Collecting something ...WAVE_CHARS: ['~', '-', '_', '^']
[DEBUG] pycodetags.collect: Found a list/set/tuple ['~', '-', '_', '^']
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : Wave
[DEBUG] pycodetags.collect: Collecting something ...Wave: <function Wave at 0x7fce95539f80>
[DEBUG] pycodetags.collect: Collecting function/method <function Wave at 0x7fce95539f80>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Collecting function/method <function Wave._generate_pattern at 0x7fce9553a160>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Refine wave pattern generation for more organic look.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee=None, originator='Bob', origination_date=None, due=None, release_due=None, release=None, iteration='2', change_type=None, closed_date=None, closed_comment=None, tracker=None, priority=None, status='Planning', category='Wave Generator', _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function Wave._generate_pattern at 0x7fce9553a160>
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Make wave generation more realistic and less static.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Kstar', originator=None, origination_date=None, due='08/15/2025', release_due='1.5.0', release=None, iteration=None, change_type=None, closed_date=None, closed_comment=None, tracker=None, priority=None, status='Development', category='Wave Generator', _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Collecting function/method <function Wave.update at 0x7fce9553a340>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='FIXME', comment='Wave animation is choppy, needs smoother transitions.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Carl', originator=None, origination_date=None, due=None, release_due=None, release=None, iteration=None, change_type='Added', closed_date=None, closed_comment=None, tracker='https://example.com/FSH-4', priority=None, status=None, category=None, _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function Wave.update at 0x7fce9553a340>
[DEBUG] pycodetags.collect: Don't know what to do with <function Wave at 0x7fce95539f80>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : hero_screen
[DEBUG] pycodetags.collect: Collecting something ...hero_screen: <function hero_screen at 0x7fce9553afc0>
[DEBUG] pycodetags.collect: Collecting function/method <function hero_screen at 0x7fce9553afc0>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Hero screen display implemented and functional.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee=None, originator='Bob', origination_date=None, due=None, release_due=None, release=None, iteration=None, change_type=None, closed_date='2024-06-20', closed_comment=None, tracker=None, priority=None, status='Done', category=None, _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function hero_screen at 0x7fce9553afc0>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : main
[DEBUG] pycodetags.collect: Collecting something ...main: <function main at 0x7fce9553b100>
[DEBUG] pycodetags.collect: Collecting function/method <function main at 0x7fce9553b100>
[DEBUG] pycodetags.collect: Collecting from class attributes ------------
[DEBUG] pycodetags.collect: Don't know what to do with TODO(code_tag='DATA', comment='Add proper game over screen and restart option for enhanced gameplay loop.', default_fields=None, data_fields=None, custom_fields=None, identity_fields=None, unprocessed_defaults=None, file_path=None, line_number=None, original_text=None, original_schema=None, offsets=None, data_meta=None, assignee='Alice', originator=None, origination_date=None, due=None, release_due='2.0.0', release=None, iteration='3', change_type=None, closed_date=None, closed_comment=None, tracker='https://example.com/FSH-16', priority=None, status='Planning', category=None, _due_date_obj=None, todo_meta=None)
[DEBUG] pycodetags.collect: Don't know what to do with <function main at 0x7fce9553b100>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : os
[DEBUG] pycodetags.collect: Collecting something ...os: <module 'os' (frozen)>
[DEBUG] pycodetags.collect: Don't know what to do with <module 'os' (frozen)>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : random
[DEBUG] pycodetags.collect: Collecting something ...random: <module 'random' from '/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/random.py'>
[DEBUG] pycodetags.collect: Don't know what to do with <module 'random' from '/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/random.py'>
[DEBUG] pycodetags.collect: looping : <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'> : time
[DEBUG] pycodetags.collect: Collecting something ...time: <module 'time' (built-in)>
[DEBUG] pycodetags.collect: Don't know what to do with <module 'time' (built-in)>
[DEBUG] pycodetags.collect: Don't know what to do with <module 'demo.__main__' from '/home/runner/work/pycodetags/pycodetags/demo/__main__.py'>
[INFO] pycodetags.collect: Found 0 DATA in module 'demo.__main__'.
[DEBUG] pycodetags.aggregate: Found 0 by looking at imported module: demo.__main__
[INFO] pycodetags.aggregate: aggregate_all_kinds: module_name=, source_path=demo, active_schemas=['todo', 'folk', 'data']
[INFO] pycodetags.data_tags_parsers: iterate_comments: processing demo/__init__.py
[INFO] pycodetags.data_tags_parsers: iterate_comments: processing demo/__main__.py
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>: # --- Import Actual Code Tag System ---
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>: # Assuming code_tags library is available in the environment
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>: from pycodetags_issue_tracker import DOCUMENT  # Added for a decorator example
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Constants
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # seconds per frame
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Character sets
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : DONE
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : TODO,TODO
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : DONE
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : TODO
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : TODO,TODO
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : DONE
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Wait for user to press Enter
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : TODO
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>: # Initial horizontal direction
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>:         self.dy = 0  # Fish mostly move horizontally, vertical movement will be slight
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Simple bounce off walls
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Slight vertical drift
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>: # Keep fish within the "water" area (below waves, above plants)
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>:         self.y = max(2, min(self.y, screen_height - 3))  # Avoid waves and very bottom
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : TODO
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Apply movement based on chase or bounce
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : TODO
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # NOT IMPLEMENTED: Plant animation logic for swaying or growing.
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Simple scrolling wave animation
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : TODO,DONE
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Draw waves
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Second row of waves for thickness
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Draw plants (at the very bottom)
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Draw fish
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : TODO,TODO
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Print the buffer
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Update fish movement, potentially chasing others
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Try to update plants, but it will raise NotImplementedError
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : TODO
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>: # Check for immediate quit (requires non-blocking input, which is complex in standard Python terminal)
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>:             # This is a placeholder for demonstration. In a real game, you'd use libraries like curses or keyboard.
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>:             # print("Press 'q' to quit...", end='\r')
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>:             # For simplicity, we just run until interrupted or a specific condition.
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : NOBUG,WONTFIX
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Flip character if it's a directional one
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # 10% chance to change vertical direction
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Avoid wave and bottom plant line
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Place plants at the very bottom
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # Simple chase logic: each fish chases a random other fish
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>: # Example of how a TodoException could be triggered and handled if the feature was attempted
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>:             # try:
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>:             #     tank._spawn_new_fish_if_needed()
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>:             # except TodoException as e:
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>:             #     print(f"\n[INFO] {e.message}")
[DEBUG] pycodetags.folk_code_tags: Processing demo/__main__.py ==>:             #     # In a real game, this might be handled more gracefully, or simply not called yet.
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.folk_code_tags: Processing  demo/__main__.py: # 30% chance to chase
[DEBUG] pycodetags.data_tags_parsers: Search for ['DATA'] schema tags
[DEBUG] pycodetags.data_tags_parsers: Found data tags! : WONTFIX
[DEBUG] pycodetags.aggregate: Found 20 by looking at src folder demo
--- DONE ---
# DONE: Basic fish movement implemented. <closed_date:2024-06-19 release:1.0.0>

# DONE: Basic screen buffer initialization completed.
# <due:06/15/2024 release:1.0.0 category:Flavor status:Done tracker:"https://example.com/FSH-2">

# DONE: Hero screen display implemented. <originator:Bob>

# DONE: Static wave character setup completed. <due:05/01/2024 release:1.0.0 category:Wave>

--- NOBUG ---
# NOBUG: Ensure terminal state is reset correctly on exit. <release:1.5.0 closed_date:2024-06-20>

--- TODO ---
# TODO: Add background details and rocks at the bottom.
# <due:07/01/2025 category:"Flavor Text" status:Planning iteration:1 release_due:1.5.0 tracker:"https://example.com/FSH-10">

# TODO: Add fish health and hunger stats. <>

# TODO: Add food pellets for fish to eat.
# <category:Flavor status:Planning iteration:2 tracker:"https://example.com/FSH-14">

# TODO: Add proper game over screen and restart option.
# <iteration:3 status:Planning release_due:2.0.0 tracker:"https://example.com/FSH-16">

# TODO: Display debug information (e.g., FPS, fish count). <category:Flavor status:Development>

# TODO: Implement a "hero" fish that the player controls.
# <category:"Fish Movement" status:Planning release_due:2.0.0 iteration:2 tracker:"https://example.com/FSH-11">

# TODO: Implement collision detection for fish and tank walls.
# <iteration:2 release_due:1.5.0 category:"Fish Movement" status:Development tracker:"https://example.com/FSH-13">

# TODO: Implement fish personality (e.g., aggressive, timid).
# <category:Flavor status:Planning iteration:1 tracker:"https://example.com/FSH-5">

# TODO: Implement fish spawning logic. <assignee:Alice due:10/01/2025 tracker:"https://example.com/FSH-15">

# TODO: Implement plant growth over time. <>

# TODO: Improve chase logic to avoid obstacles (plants).
# <due:09/01/2025 release_due:2.0.0 category:Chase status:Development iteration:3 tracker:"https://example.com/FSH-8">

# TODO: Initial screen setup and sizing for responsiveness. <originator:Alice tracker:"https://example.com/FSH-1">

# TODO: demonstrate that js plugin works. <>

--- WONTFIX ---
# WONTFIX: Add complex terminal cleanup for all OS types. <tracker:"https://example.com/FSH-17">

# WONTFIX: Plant animation is not critical for MVP. <tracker:"https://example.com/FSH-12">

