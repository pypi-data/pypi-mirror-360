services:
  url2md4ai:
    build: .
    image: url2md4ai:latest
    container_name: url2md4ai
    environment:
      # LLM-Optimized Extraction Settings
      - URL2MD_CLEAN_CONTENT=${URL2MD_CLEAN_CONTENT:-true}
      - URL2MD_LLM_OPTIMIZED=${URL2MD_LLM_OPTIMIZED:-true}
      - URL2MD_USE_TRAFILATURA=${URL2MD_USE_TRAFILATURA:-true}
      
      # Content Filtering (Noise Removal)
      - URL2MD_REMOVE_COOKIES=${URL2MD_REMOVE_COOKIES:-true}
      - URL2MD_REMOVE_NAV=${URL2MD_REMOVE_NAV:-true}
      - URL2MD_REMOVE_ADS=${URL2MD_REMOVE_ADS:-true}
      - URL2MD_REMOVE_SOCIAL=${URL2MD_REMOVE_SOCIAL:-true}
      
      # JavaScript Rendering
      - URL2MD_JAVASCRIPT=${URL2MD_JAVASCRIPT:-true}
      - URL2MD_HEADLESS=${URL2MD_HEADLESS:-true}
      - URL2MD_PAGE_TIMEOUT=${URL2MD_PAGE_TIMEOUT:-2000}
      
      # Output Settings
      - URL2MD_OUTPUT_DIR=/app/output
      - URL2MD_USE_HASH_FILENAMES=${URL2MD_USE_HASH_FILENAMES:-true}
      
      # Performance & Reliability
      - URL2MD_TIMEOUT=${URL2MD_TIMEOUT:-30}
      - URL2MD_MAX_RETRIES=${URL2MD_MAX_RETRIES:-3}
      - URL2MD_USER_AGENT=${URL2MD_USER_AGENT:-url2md4ai-docker/1.0}
      - URL2MD_LOG_LEVEL=${URL2MD_LOG_LEVEL:-INFO}
    volumes:
      # Mount output directory for markdown files
      - ./output:/app/output
      # Mount examples directory (optional, for testing)
      - ./examples:/app/examples:ro
    working_dir: /app
    # Default help command - override when running specific conversions
    command: ["url2md4ai", "--help"]
    
  # Development service with additional mounts
  dev:
    build: .
    image: url2md4ai:dev
    container_name: url2md4ai-dev
    environment:
      - URL2MD_CLEAN_CONTENT=true
      - URL2MD_LLM_OPTIMIZED=true
      - URL2MD_USE_TRAFILATURA=true
      - URL2MD_JAVASCRIPT=true
      - URL2MD_HEADLESS=true
      - URL2MD_OUTPUT_DIR=/app/output
      - URL2MD_LOG_LEVEL=DEBUG
    volumes:
      # Full project mount for development
      - .:/app
      - /app/.venv  # Exclude venv from host mount
    working_dir: /app
    command: ["/bin/bash"]
    stdin_open: true
    tty: true

# Define volumes for data persistence
volumes:
  output:
    driver: local 