[project]
name = "venvstacks"
version = "0.7.0"
description = "Use layered Python virtual environment stacks to share large dependencies"
authors = [
    { name = "Alyssa Coghlan", email = "ncoghlan@gmail.com" },
]
maintainers = [
    { name = "LM Studio", email = "team@lmstudio.ai" },
]
dependencies = [
    "pip>=24.1.1",
    "pdm>=2.17.3",
    "uv>=0.2.33",
    "installer>=0.7.0",
    "rich>=13.6.0",
    "typer-slim>=0.12.4",
    "tomlkit>=0.13.2",
    "dulwich>=0.22.8",
]
requires-python = ">=3.11"
readme = "README.md"
keywords = [
    "packaging",
    "dependency",
    "venv",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Build Tools",
    "Typing :: Typed",
]

[project.license]
text = "MIT"

[project.optional-dependencies]
rich-cli = [
    "typer>=0.12.4",
]

[project.scripts]
venvstacks = "venvstacks.cli:main"

[project.urls]
Homepage = "https://github.com/lmstudio-ai/venvstacks"
Documentation = "https://venvstacks.lmstudio.ai/"
Issues = "https://github.com/lmstudio-ai/venvstacks/issues"
Changelog = "https://venvstacks.lmstudio.ai/changelog/"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[dependency-groups]
dev = [
    { include-group = "task-runner" },
    { include-group = "test" },
    { include-group = "lint" },
    { include-group = "typecheck" },
    "scriv[toml]>=1.5.1",
]
task-runner = [
    "tox>=4.16.0",
    "tox-gh>=1.3.2",
    "tox-pdm>=0.7.2",
]
dynlib-wheel-build = [
    "meson-python>=0.17.1",
    "pkgconf>=2.4.3.post1",
    "ninja>=1.11.1.4; sys_platform == 'win32'",
    "pip>=25.0.1",
]
test = [
    "pytest>=8.3.1",
    "pytest-subtests>=0.13.1",
    "coverage[toml]>=7.6.4",
    "click>=8.2.0",
    "pbs-installer==2025.3.17",
    "uv==0.6.9",
    "dissolve",
]
lint = [
    "ruff>=0.5.4",
]
typecheck = [
    "mypy>=1.11.0",
]
bootstrap = [
    "pdm>=2.20.0",
]
docs = [
    "sphinx>=8.1.3",
    "furo>=2024.8.6",
]

[tool.pdm]
distribution = true

[tool.pdm.scripts]
migrate-hashes = "./misc/rehash_test_requirements.py"

[tool.mypy]
untyped_calls_exclude = "dulwich"

[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "expected_output: tests to run when regenerating expected output",
]
filterwarnings = [
    "error",
    "ignore:The venvstacks API is NOT YET STABLE:FutureWarning",
]
verbosity_assertions = 2
tmp_path_retention_policy = "failed"
tmp_path_retention_count = 1

[tool.coverage.run]
relative_files = true
source_pkgs = [
    "venvstacks",
]
source = [
    "tests/",
]
omit = [
    "tests/support.py",
]

[tool.coverage.paths]
source = [
    "src/",
    "**/.tox/**/site-packages/",
]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
extend-select = [
    "D",
]
ignore = [
    "D105",
    "D417",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "D",
]

[tool.scriv]
version = "literal: pyproject.toml: project.version"
fragment_directory = "docs/changelog.d"
skip_fragments = "README[._]*"
ghrel_template = "file: ghrel_template.md.j2"
