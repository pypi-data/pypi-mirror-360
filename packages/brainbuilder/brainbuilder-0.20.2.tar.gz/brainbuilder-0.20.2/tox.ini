[base]
name = brainbuilder
testdeps =
    pytest
    morph-tool
pytest_options = -vv

[tox]
envlist =
    check-packaging
    lint
    py{39,310,311,312}

minversion = 3.1.0

# ignore basepython for envs that already specify a version
ignore_basepython_conflict = true

[testenv]
extras = all
deps = {[base]testdeps}
commands = pytest {[base]pytest_options} tests/unit {posargs}

[testenv:check-packaging]
skip_install = true
deps =
    wheel
    twine
    build
commands_pre =
    rm -Rf build dist {envtmpdir}/dist {[base]name}.egg-info
commands =
    python -m build --outdir {envtmpdir}/dist
    twine check {envtmpdir}/dist/*
allowlist_externals = rm

[testenv:lint]
skip_install = True
deps =
    ruff
commands =
    ruff format --check {[base]name}
    ruff check {[base]name}

[testenv:format]
skip_install = True
deps = ruff
commands =
    ruff format {[base]name}
    ruff check --fix {[base]name}


[testenv:coverage]
deps =
    {[base]testdeps}
    coverage
commands =
    coverage run --source={[base]name} -m pytest {[base]pytest_options} tests/unit {posargs}
    coverage report --show-missing
    coverage xml

[testenv:functional]
commands = pytest {[base]pytest_options} tests/functional {posargs}

[testenv:docs]
changedir = doc
deps =
    sphinx
    sphinx-bluebrain-theme
commands = make html SPHINXOPTS=-W
allowlist_externals = make

[pycodestyle]
# E203: whitespace before ':'
# E731: do not assign a lambda expression, use a def
# W503: line break after binary operator
# W504: line break before binary operator
# E501: line too long (checked with pylint)
ignore = E203,E731,W503,W504,E501

[pydocstyle]
# D413: no blank line after last section
add-ignore = D413
convention = google

[gh-actions]
python =
  3.9: py39, lint
  3.10: py310, coverage
  3.11: py311, check-packaging
  3.12: py312, docs
