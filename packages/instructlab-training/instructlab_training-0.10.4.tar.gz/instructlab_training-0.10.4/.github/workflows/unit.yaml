# SPDX-License-Identifier: Apache-2.0

name: "Run unit tests via Tox::pytest"

on:
  # run against every merge commit to 'main' and release branches
  push:
    branches:
      - main
      - release-*
  # only run on PRs that touch certain regex paths
  pull_request:
    branches:
      - main
      - release-*
    paths:
      # note this should match the merging criteria in 'mergify.yml'
      - "**.py"
      - "tox.ini"
      - "pyproject.toml"
      - "requirements.txt"
      - "requirements-dev.txt"
      - ".github/workflows/unit.yaml" # This workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  run-unit-tests:
    name: "unit: ${{ matrix.python }} on ${{ matrix.platform }}"
    runs-on: "${{ matrix.platform }}"
    strategy:
      fail-fast: false
      matrix:
        python:
          - "3.11"
          - "3.12"
          - "3.13"
        platform:
          - "ubuntu-latest"
    # It is important that this job has no write permissions and has
    # no access to any secrets. This part is where we are running
    # untrusted code from PRs.
    permissions: {}
    steps:
      - name: "Harden runner"
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.10.1
        with:
          egress-policy: audit

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: "${{ matrix.python }}"

      - name: "Checkout code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      # installs in $GITHUB_WORKSPACE/venv.
      # only has to install Tox because Tox will do the other virtual environment management.
      - name: "Setup Python virtual environment"
        run: |
          python -m venv --upgrade-deps venv
          . venv/bin/activate
          pip install tox

      - name: "Show disk utilization BEFORE tests"
        run: |
          df -h

      - name: "Run unit tests with Tox and Pytest"
        run: |
          source venv/bin/activate
          tox -e py3-unit

      - name: "Show disk utilization AFTER tests"
        run: |
          df -h
