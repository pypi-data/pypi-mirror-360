import websockets
from typing import Any, Union

from .handler import WebSocketHandler
from .enum import ConnectionState
from .packets import Packet

class ClientConnection(websockets.ServerConnection):
    # You redeclare your __init__ to show its real signature
    def __init__(
        self, websocket_protocol: websockets.ServerConnection, handler: WebSocketHandler
    ) -> None: ...
    session_state: dict[str, Any] = dict()
    connection_state: ConnectionState = ConnectionState.CONNECTED

    @staticmethod
    def string_to_packet(data: str | bytes) -> Packet: ...
    @property
    def subscribed_channel(self) -> set[str]: ...
    async def send(self, data: Union[str, bytes, Packet]) -> None: ...
    async def recv(self, timeout: float = 30.0) -> Packet: ...
    def subscribe(self, channel: str) -> None: ...
    def unsubscribe(self, channel: str) -> None: ...
    def __setitem__(self, name: str, value: Any) -> None: ...
    def __delitem__(self, name: str) -> None: ...
    def __getitem__(self, name: str) -> None: ...
