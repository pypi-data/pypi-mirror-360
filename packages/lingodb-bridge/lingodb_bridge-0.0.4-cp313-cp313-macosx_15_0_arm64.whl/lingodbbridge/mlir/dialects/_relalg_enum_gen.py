
# Autogenerated by mlir-tblgen; don't manually edit.

from enum import IntEnum, auto, IntFlag
from ._ods_common import _cext as _ods_cext
from ..ir import register_attribute_builder
_ods_ir = _ods_cext.ir

class AggrFunc(IntEnum):
    """aggregation function"""

    sum = 0
    min = 1
    max = 2
    avg = 3
    count = 4
    any = 5
    stddev_samp = 6
    var_samp = 7

    def __str__(self):
        if self is AggrFunc.sum:
            return "sum"
        if self is AggrFunc.min:
            return "min"
        if self is AggrFunc.max:
            return "max"
        if self is AggrFunc.avg:
            return "avg"
        if self is AggrFunc.count:
            return "count"
        if self is AggrFunc.any:
            return "any"
        if self is AggrFunc.stddev_samp:
            return "stddev_samp"
        if self is AggrFunc.var_samp:
            return "var_samp"
        raise ValueError("Unknown AggrFunc enum entry.")



@register_attribute_builder("RelAlg_AggrFunc")
def _relalg_aggrfunc(x, context):
    return _ods_ir.IntegerAttr.get(_ods_ir.IntegerType.get_signless(64, context=context), int(x))

class GroupJoinBehavior(IntEnum):
    """groupjoin behavior"""

    inner = 0
    outer = 1

    def __str__(self):
        if self is GroupJoinBehavior.inner:
            return "inner"
        if self is GroupJoinBehavior.outer:
            return "outer"
        raise ValueError("Unknown GroupJoinBehavior enum entry.")



@register_attribute_builder("RelAlg_GroupJoinBehavior")
def _relalg_groupjoinbehavior(x, context):
    return _ods_ir.IntegerAttr.get(_ods_ir.IntegerType.get_signless(64, context=context), int(x))

class SetSemantic(IntEnum):
    """allowed 64-bit signless integer cases: 0, 1"""

    distinct = 0
    all = 1

    def __str__(self):
        if self is SetSemantic.distinct:
            return "distinct"
        if self is SetSemantic.all:
            return "all"
        raise ValueError("Unknown SetSemantic enum entry.")



@register_attribute_builder("RelAlg_SetSemantic")
def _relalg_setsemantic(x, context):
    return _ods_ir.IntegerAttr.get(_ods_ir.IntegerType.get_signless(64, context=context), int(x))

class SortSpec(IntEnum):
    """sort order"""

    desc = 0
    asc = 1

    def __str__(self):
        if self is SortSpec.desc:
            return "desc"
        if self is SortSpec.asc:
            return "asc"
        raise ValueError("Unknown SortSpec enum entry.")



@register_attribute_builder("RelAlg_SortSpec")
def _relalg_sortspec(x, context):
    return _ods_ir.IntegerAttr.get(_ods_ir.IntegerType.get_signless(64, context=context), int(x))

