# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.developer_controlled_wallets
from circle.web3.developer_controlled_wallets.models.create_wallet_upgrade_transaction_for_developer_request import CreateWalletUpgradeTransactionForDeveloperRequest  # noqa: E501
from circle.web3.developer_controlled_wallets.rest import ApiException

class TestCreateWalletUpgradeTransactionForDeveloperRequest(unittest.TestCase):
    """CreateWalletUpgradeTransactionForDeveloperRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateWalletUpgradeTransactionForDeveloperRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateWalletUpgradeTransactionForDeveloperRequest`
        """
        model = circle.web3.developer_controlled_wallets.models.create_wallet_upgrade_transaction_for_developer_request.CreateWalletUpgradeTransactionForDeveloperRequest()  # noqa: E501
        if include_optional :
            return CreateWalletUpgradeTransactionForDeveloperRequest(
                idempotency_key = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11', 
                new_sca_core = 'circle_6900_singleowner_v2', 
                entity_secret_ciphertext = '[B@448b808a', 
                fee_level = 'MEDIUM', 
                gas_limit = '21000', 
                gas_price = '', 
                max_fee = '5.935224468', 
                priority_fee = '1.022783914', 
                ref_id = 'grouptransaction123', 
                wallet_id = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'
            )
        else :
            return CreateWalletUpgradeTransactionForDeveloperRequest(
                idempotency_key = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
                new_sca_core = 'circle_6900_singleowner_v2',
                entity_secret_ciphertext = '[B@448b808a',
                wallet_id = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
        )
        """

    def testCreateWalletUpgradeTransactionForDeveloperRequest(self):
        """Test CreateWalletUpgradeTransactionForDeveloperRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
