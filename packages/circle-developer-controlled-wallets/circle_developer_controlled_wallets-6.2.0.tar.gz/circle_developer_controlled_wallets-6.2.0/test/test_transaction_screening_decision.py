# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.developer_controlled_wallets
from circle.web3.developer_controlled_wallets.models.transaction_screening_decision import TransactionScreeningDecision  # noqa: E501
from circle.web3.developer_controlled_wallets.rest import ApiException

class TestTransactionScreeningDecision(unittest.TestCase):
    """TransactionScreeningDecision unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TransactionScreeningDecision
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransactionScreeningDecision`
        """
        model = circle.web3.developer_controlled_wallets.models.transaction_screening_decision.TransactionScreeningDecision()  # noqa: E501
        if include_optional :
            return TransactionScreeningDecision(
                rule_name = 'Low Gambling Risk (Owner)', 
                actions = ["REVIEW"], 
                screening_date = '2023-01-01T12:04:05Z', 
                reasons = [
                    circle.web3.developer_controlled_wallets.models.risk_signal.RiskSignal(
                        source = 'ADDRESS', 
                        source_value = '0x1bf9ad0cc2ad298c69a2995aa806ee832788218c', 
                        risk_score = 'LOW', 
                        risk_categories = ["GAMBLING"], 
                        type = 'OWNERSHIP', )
                    ]
            )
        else :
            return TransactionScreeningDecision(
                screening_date = '2023-01-01T12:04:05Z',
        )
        """

    def testTransactionScreeningDecision(self):
        """Test TransactionScreeningDecision"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
