# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import typing
from ......common.resources.http.http_request_response import HttpRequestResponse
import pydantic
from .path_traversal_attempt_info import PathTraversalAttemptInfo
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class PathTraversalTargetInfo(UniversalBaseModel):
    target: str
    baseline_attempts: typing.Optional[typing.List[HttpRequestResponse]] = pydantic.Field(
        alias="baselineAttempts", default=None
    )
    attempts: typing.Optional[typing.List[PathTraversalAttemptInfo]] = None
    request_count: int = pydantic.Field(alias="requestCount")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
