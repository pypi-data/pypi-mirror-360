# coding: utf-8

"""
    HelloAsso API

    HelloAsso auto-generated SDK

    The version of the OpenAPI document: public
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from helloasso_python.models.hello_asso_api_v5_models_forms_form_public_model import HelloAssoApiV5ModelsFormsFormPublicModel

class TestHelloAssoApiV5ModelsFormsFormPublicModel(unittest.TestCase):
    """HelloAssoApiV5ModelsFormsFormPublicModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HelloAssoApiV5ModelsFormsFormPublicModel:
        """Test HelloAssoApiV5ModelsFormsFormPublicModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HelloAssoApiV5ModelsFormsFormPublicModel`
        """
        model = HelloAssoApiV5ModelsFormsFormPublicModel()
        if include_optional:
            return HelloAssoApiV5ModelsFormsFormPublicModel(
                organization_logo = '',
                organization_name = '',
                tiers = [
                    helloasso_python.models.hello_asso/api/v5/models/forms/tier_public_model.HelloAsso.Api.V5.Models.Forms.TierPublicModel(
                        id = 56, 
                        label = '', 
                        description = '', 
                        tier_type = 'Donation', 
                        price = 56, 
                        vat_rate = 1.337, 
                        min_amount = 56, 
                        payment_frequency = 'Single', 
                        max_per_user = 56, 
                        meta = helloasso_python.models.hello_asso/api/v5/models/common/meta_model.HelloAsso.Api.V5.Models.Common.MetaModel(
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        sale_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        sale_end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_eligible_tax_receipt = True, 
                        terms = [
                            helloasso_python.models.hello_asso/api/v5/models/forms/term_model.HelloAsso.Api.V5.Models.Forms.TermModel(
                                date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                amount = 56, )
                            ], 
                        picture = helloasso_python.models.hello_asso/api/v5/models/common/document_model.HelloAsso.Api.V5.Models.Common.DocumentModel(
                            id = 56, 
                            file_name = '', 
                            public_url = '', ), 
                        is_excluded_from_form_payment_terms = True, )
                    ],
                activity_type = '',
                activity_type_id = 56,
                place = helloasso_python.models.hello_asso/api/v5/models/common/place_model.HelloAsso.Api.V5.Models.Common.PlaceModel(
                    address = '', 
                    name = '', 
                    city = '', 
                    zip_code = '', 
                    country = '012', 
                    geo_location = helloasso_python.models.hello_asso/models/shared/geo_location.HelloAsso.Models.Shared.GeoLocation(
                        latitude = 1.337, 
                        longitude = 1.337, ), ),
                sale_end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                sale_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                validity_type = 'MovingYear',
                personalized_message = '',
                banner = helloasso_python.models.hello_asso/api/v5/models/common/document_model.HelloAsso.Api.V5.Models.Common.DocumentModel(
                    id = 56, 
                    file_name = '', 
                    public_url = '', ),
                currency = '',
                description = '',
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                logo = helloasso_python.models.hello_asso/api/v5/models/common/document_model.HelloAsso.Api.V5.Models.Common.DocumentModel(
                    id = 56, 
                    file_name = '', 
                    public_url = '', ),
                meta = helloasso_python.models.hello_asso/api/v5/models/common/meta_model.HelloAsso.Api.V5.Models.Common.MetaModel(
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                state = 'Public',
                title = '',
                private_title = '',
                widget_button_url = '',
                widget_full_url = '',
                widget_vignette_horizontal_url = '',
                widget_vignette_vertical_url = '',
                widget_counter_url = '',
                form_slug = '',
                form_type = 'CrowdFunding',
                url = '',
                organization_slug = ''
            )
        else:
            return HelloAssoApiV5ModelsFormsFormPublicModel(
        )
        """

    def testHelloAssoApiV5ModelsFormsFormPublicModel(self):
        """Test HelloAssoApiV5ModelsFormsFormPublicModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
