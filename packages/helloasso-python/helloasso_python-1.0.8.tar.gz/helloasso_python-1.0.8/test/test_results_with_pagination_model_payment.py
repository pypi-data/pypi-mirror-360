# coding: utf-8

"""
    HelloAsso API

    HelloAsso auto-generated SDK

    The version of the OpenAPI document: public
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from helloasso_python.models.results_with_pagination_model_payment import ResultsWithPaginationModelPayment

class TestResultsWithPaginationModelPayment(unittest.TestCase):
    """ResultsWithPaginationModelPayment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResultsWithPaginationModelPayment:
        """Test ResultsWithPaginationModelPayment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResultsWithPaginationModelPayment`
        """
        model = ResultsWithPaginationModelPayment()
        if include_optional:
            return ResultsWithPaginationModelPayment(
                data = [
                    helloasso_python.models.hello_asso/api/v5/models/statistics/payment.HelloAsso.Api.V5.Models.Statistics.Payment(
                        order = helloasso_python.models.hello_asso/api/v5/models/statistics/order_light.HelloAsso.Api.V5.Models.Statistics.OrderLight(
                            id = 56, 
                            date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            form_slug = '', 
                            form_type = 'CrowdFunding', 
                            organization_name = '', 
                            organization_slug = '', 
                            organization_type = 'Association1901Rig', 
                            organization_is_under_coluche_law = True, 
                            checkout_intent_id = 56, 
                            meta = helloasso_python.models.hello_asso/api/v5/models/common/meta_model.HelloAsso.Api.V5.Models.Common.MetaModel(
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), ), 
                        payer = helloasso_python.models.hello_asso/api/v5/models/statistics/payer.HelloAsso.Api.V5.Models.Statistics.Payer(
                            email = '', 
                            address = '', 
                            city = '', 
                            zip_code = '', 
                            country = '', 
                            company = '', 
                            date_of_birth = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            first_name = '', 
                            last_name = '', ), 
                        items = [
                            helloasso_python.models.hello_asso/api/v5/models/statistics/payment_item.HelloAsso.Api.V5.Models.Statistics.PaymentItem(
                                share_amount = 56, 
                                share_item_amount = 56, 
                                share_options_amount = 56, 
                                id = 56, 
                                amount = 56, 
                                type = 'Donation', 
                                initial_amount = 56, 
                                state = 'Waiting', 
                                name = '', )
                            ], 
                        cash_out_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        cash_out_state = 'MoneyIn', 
                        payment_receipt_url = '', 
                        fiscal_receipt_url = '', 
                        id = 56, 
                        amount = 56, 
                        amount_tip = 56, 
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        payment_means = 'None', 
                        installment_number = 56, 
                        state = 'Pending', 
                        type = 'Offline', 
                        meta = helloasso_python.models.hello_asso/api/v5/models/common/meta_model.HelloAsso.Api.V5.Models.Common.MetaModel(
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        payment_off_line_mean = 'None', 
                        refund_operations = [
                            helloasso_python.models.hello_asso/api/v5/models/statistics/refund_operation_light_model.HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel(
                                id = 56, 
                                amount = 56, 
                                amount_tip = 56, 
                                status = 'Unknown', )
                            ], )
                    ],
                pagination = helloasso_python.models.hello_asso/api/v5/models/common/pagination_model.HelloAsso.Api.V5.Models.Common.PaginationModel(
                    page_size = 56, 
                    total_count = 56, 
                    page_index = 56, 
                    total_pages = 56, 
                    continuation_token = '', )
            )
        else:
            return ResultsWithPaginationModelPayment(
        )
        """

    def testResultsWithPaginationModelPayment(self):
        """Test ResultsWithPaginationModelPayment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
