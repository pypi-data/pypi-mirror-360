[
  {
    "id": "CountDownButton 倒计时按钮",
    "name": "CountDownButton 倒计时按钮",
    "category": "基础组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "CountDownButton 是一个带倒计时功能的按钮组件，点击后会开始倒计时并显示剩余秒数，倒计时结束后恢复初始状态。常用于验证码发送、短信验证等需要限制频繁操作的场景，提供用户友好的等待提示。",
    "preview": "../assets/images/countdownbutton_preview.png",
    "scenarios": [
      "短信验证码发送按钮",
      "需要限制频繁操作的提交按钮",
      "需要用户等待一段时间后再次操作的场景",
      "任何需要倒计时功能的交互按钮"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show CountDownButton;\n```",
    "basic_usage": "CountDownButton(\n  total: 60,\n  onClick: () {\n    // 发送验证码逻辑\n    sendVerificationCode();\n  },\n  onFinish: () {\n    // 倒计时结束后的回调\n    print('倒计时结束，可以重新发送');\n  },\n)",
    "properties": [
      {
        "name": "onClick",
        "description": "点击事件回调",
        "type": "VoidCallback?",
        "default": "null",
        "required": false
      },
      {
        "name": "onFinish",
        "description": "倒计时结束回调",
        "type": "VoidCallback?",
        "default": "null",
        "required": false
      },
      {
        "name": "total",
        "description": "倒计时总时长（秒）",
        "type": "int",
        "default": "5",
        "required": false
      },
      {
        "name": "borderRadius",
        "description": "边框圆角",
        "type": "double",
        "default": "20",
        "required": false
      },
      {
        "name": "content",
        "description": "默认显示内容",
        "type": "String",
        "default": "\"\"",
        "required": false
      },
      {
        "name": "textStyle",
        "description": "文字样式",
        "type": "TextStyle?",
        "default": "TextStyle(color: Colors.white, fontSize: 14)",
        "required": false
      },
      {
        "name": "backgroundColor",
        "description": "背景色",
        "type": "Color?",
        "default": "null",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onClick",
        "description": "点击按钮时触发",
        "params": "无"
      },
      {
        "name": "onFinish",
        "description": "倒计时结束时触发",
        "params": "无"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "ElevatedButton",
        "path": "https://api.flutter.dev/flutter/material/ElevatedButton-class.html"
      },
      {
        "name": "CountdownTimer",
        "path": "../../lib/widget/time_count_down/flutter_countdown_timer.dart"
      },
      {
        "name": "Flutter 基础按钮组件",
        "path": null
      },
      {
        "name": "倒计时组件",
        "path": null
      }
    ],
    "source_path": "../../lib/widget/button/count_down_button.dart",
    "demo_path": "../../example/lib/pages/yl_button_page.dart",
    "methods": []
  },
  {
    "id": "YLTextButton",
    "name": "YLTextButton 文本按钮",
    "category": "基础组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "YLTextButton是一个自定义通用文本按钮组件，封装了Flutter原生TextButton的常用属性，提供了更便捷的使用方式。该组件主要用于替换Flutter 2.x中的FlatButton组件，具有可自定义文本颜色、背景颜色、圆角半径等特性，适用于各种需要文本按钮的场景。",
    "preview": "../assets/images/yltextbutton_preview.png",
    "scenarios": [
      "需要简洁文本按钮的界面",
      "表单提交、取消等操作按钮",
      "对话框中的确认、取消按钮",
      "需要自定义按钮样式的场景"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show YLTextButton;\n```",
    "basic_usage": "YLTextButton(\n  child: Text(\"确认\"),\n  onPressed: () {\n    // 处理点击事件\n    print('按钮被点击');\n  },\n)",
    "properties": [
      {
        "name": "child",
        "description": "按钮内容",
        "type": "Widget",
        "default": null,
        "required": true
      },
      {
        "name": "onPressed",
        "description": "按钮点击回调函数",
        "type": "VoidCallback?",
        "default": null,
        "required": true
      },
      {
        "name": "textColor",
        "description": "按钮文本颜色",
        "type": "Color?",
        "default": "Colors.black",
        "required": false
      },
      {
        "name": "backgroundColor",
        "description": "按钮背景颜色",
        "type": "Color?",
        "default": "null",
        "required": false
      },
      {
        "name": "pressedColor",
        "description": "按钮按下时的背景颜色",
        "type": "Color?",
        "default": "null",
        "required": false
      },
      {
        "name": "borderRadius",
        "description": "按钮圆角半径",
        "type": "double",
        "default": "0.0",
        "required": false
      },
      {
        "name": "padding",
        "description": "按钮内边距",
        "type": "EdgeInsetsGeometry?",
        "default": "EdgeInsets.symmetric(horizontal: 16, vertical: 6)",
        "required": false
      },
      {
        "name": "disabledColor",
        "description": "按钮禁用时的颜色",
        "type": "Color?",
        "default": "Colors.grey",
        "required": false
      },
      {
        "name": "enable",
        "description": "按钮是否启用",
        "type": "bool",
        "default": "true",
        "required": false
      },
      {
        "name": "elevation",
        "description": "按钮阴影高度",
        "type": "double?",
        "default": "0",
        "required": false
      },
      {
        "name": "textStyle",
        "description": "按钮文本样式",
        "type": "TextStyle?",
        "default": "null",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onPressed",
        "description": "按钮点击事件",
        "params": "无"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "YLElevatedButton",
        "path": "./YLElevatedButton.md"
      },
      {
        "name": "凸起按钮组件",
        "path": null
      }
    ],
    "source_path": "../../lib/widget/button/yl_text_button.dart",
    "demo_path": "../../example/lib/pages/yl_button_page.dart",
    "methods": []
  },
  {
    "id": "TextCopyWidget",
    "name": "TextCopyWidget 文本复制组件",
    "category": "基础组件",
    "maintainer": "zhangwanyu12",
    "stability": "稳定",
    "description": "TextCopyWidget 是一个文本复制组件，用于展示文本并提供一键复制功能。点击组件可将指定文本复制到剪贴板并弹出提示，常用于WMS系统订单号、运单号等需要快速复制文本的场景。",
    "preview": "../assets/images/textcopywidget_preview.png",
    "scenarios": [
      "需要展示并快速复制订单号、运单号等信息的场景",
      "需要复制参考编号、ID等信息的场景",
      "任何需要便捷复制文本内容的界面"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show TextCopyWidget;\n```",
    "basic_usage": "TextCopyWidget(\n  text: 'JD123456789',\n  textStyle: TextStyle(fontSize: 16, color: Colors.blue),\n)",
    "properties": [
      {
        "name": "text",
        "description": "需要展示和复制的文本内容",
        "type": "String?",
        "default": "''",
        "required": false
      },
      {
        "name": "textStyle",
        "description": "展示文本的样式",
        "type": "TextStyle?",
        "default": "TextStyle(fontSize: 14, color: Color(0xff525765))",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onTap",
        "description": "点击时触发复制操作",
        "params": "无"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "Text",
        "path": "https://api.flutter.dev/flutter/widgets/Text-class.html"
      },
      {
        "name": "Flutter基础文本组件",
        "path": null
      }
    ],
    "source_path": "../../lib/widget/button/txt_copy.dart",
    "demo_path": "../../example/lib/pages/yl_button_page.dart",
    "methods": []
  },
  {
    "id": "基础组件索引",
    "name": "基础组件索引",
    "category": "",
    "maintainer": null,
    "stability": null,
    "description": "",
    "preview": null,
    "scenarios": [],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show 组件名称;\n```",
    "basic_usage": null,
    "properties": [],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [],
    "source_path": null,
    "demo_path": null,
    "methods": []
  },
  {
    "id": "YLDivider",
    "name": "YLDivider 自定义分割线",
    "category": "基础组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "YLDivider 是一个灵活的自定义分割线组件，支持水平和垂直方向，可以使用实线或虚线样式，并且能够添加文本或自定义 widget。这个组件适用于各种需要分隔内容的场景，提供了丰富的自定义选项以满足不同的设计需求。",
    "preview": "../assets/images/yldivider_preview.png",
    "scenarios": [
      "列表项之间的分隔",
      "页面内容的分段",
      "带有文字说明的分割线",
      "需要特殊样式（如虚线）的分隔符",
      "垂直分割不同区域的内容"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show YLDivider;\n```",
    "basic_usage": "YLDivider()",
    "properties": [
      {
        "name": "color",
        "description": "分割线颜色",
        "type": "Color?",
        "default": "Colors.grey[300]",
        "required": false
      },
      {
        "name": "margin",
        "description": "分割线外边距",
        "type": "EdgeInsetsGeometry?",
        "default": null,
        "required": false
      },
      {
        "name": "width",
        "description": "分割线宽度",
        "type": "double?",
        "default": "1.0 (垂直方向)",
        "required": false
      },
      {
        "name": "height",
        "description": "分割线高度",
        "type": "double?",
        "default": "1.0 (水平方向)",
        "required": false
      },
      {
        "name": "text",
        "description": "分割线文本",
        "type": "String?",
        "default": null,
        "required": false
      },
      {
        "name": "textStyle",
        "description": "文本样式",
        "type": "TextStyle?",
        "default": null,
        "required": false
      },
      {
        "name": "widget",
        "description": "自定义widget",
        "type": "Widget?",
        "default": null,
        "required": false
      },
      {
        "name": "gapPadding",
        "description": "文本或widget与分割线的间距",
        "type": "double?",
        "default": "16.0",
        "required": false
      },
      {
        "name": "hideLine",
        "description": "是否隐藏分割线",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "isDashed",
        "description": "是否使用虚线样式",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "alignment",
        "description": "文本对齐方式",
        "type": "TextAlignment",
        "default": "TextAlignment.center",
        "required": false
      },
      {
        "name": "direction",
        "description": "分割线方向",
        "type": "Axis",
        "default": "Axis.horizontal",
        "required": false
      }
    ],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "Divider",
        "path": "https://api.flutter.dev/flutter/material/Divider-class.html"
      },
      {
        "name": "Flutter 原生分割线组件",
        "path": null
      }
    ],
    "source_path": "../../lib/widget/divider/yl_divider.dart",
    "demo_path": "../../example/lib/pages/yl_divider_page.dart",
    "methods": []
  },
  {
    "id": "YLElevatedButton 通用凸起按钮",
    "name": "YLElevatedButton 通用凸起按钮",
    "category": "基础组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "YLElevatedButton 是一个基于 Material Design 3 的自定义凸起按钮组件。支持文本、图标、加载中、禁用、尺寸多种配置，适用于页面重要操作、表单提交、工具栏主要操作等高亮场景。支持灵活样式扩展，满足物流业务多种需求，具备良好交互体验和可访问性。",
    "preview": "../assets/images/yl_elevated_button_preview.png",
    "scenarios": [
      "页面操作按钮，如提交表单、确认操作等",
      "需要突出显示的重要功能入口"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show YLElevatedButton;\n```",
    "basic_usage": "YLElevatedButton(\n  child: Text(\"确认\"),\n  onPressed: () {\n    print(\"按钮被点击\");\n  },\n)",
    "properties": [
      {
        "name": "child",
        "description": "按钮内容",
        "type": "Widget",
        "default": null,
        "required": true
      },
      {
        "name": "onPressed",
        "description": "点击回调",
        "type": "VoidCallback?",
        "default": null,
        "required": true
      },
      {
        "name": "style",
        "description": "按钮样式",
        "type": "ButtonStyle?",
        "default": null,
        "required": false
      },
      {
        "name": "textColor",
        "description": "文本颜色",
        "type": "Color?",
        "default": "Colors.black",
        "required": false
      },
      {
        "name": "enable",
        "description": "按钮是否启用",
        "type": "bool",
        "default": "true",
        "required": false
      },
      {
        "name": "backgroundColor",
        "description": "按钮背景色",
        "type": "Color?",
        "default": null,
        "required": false
      },
      {
        "name": "pressedColor",
        "description": "按钮按下时的背景颜色",
        "type": "Color?",
        "default": null,
        "required": false
      },
      {
        "name": "borderRadius",
        "description": "圆角半径",
        "type": "double?",
        "default": null,
        "required": false
      },
      {
        "name": "padding",
        "description": "内边距",
        "type": "EdgeInsetsGeometry?",
        "default": "EdgeInsets.symmetric(horizontal: 22, vertical: 6)",
        "required": false
      },
      {
        "name": "elevation",
        "description": "阴影高度",
        "type": "double?",
        "default": "2.0",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onPressed",
        "description": "点击按钮时触发",
        "params": "() => void"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "YLTextButton",
        "path": "./YLTextButton.md"
      },
      {
        "name": "文本按钮",
        "path": null
      }
    ],
    "source_path": "../../lib/yl_elevated_button.dart",
    "demo_path": "../../example/lib/yl_elevated_button_page.dart",
    "methods": []
  },
  {
    "id": "GalleryWidget",
    "name": "GalleryWidget 轮播图组件",
    "category": "数据展示组件",
    "maintainer": "zhangwanyu12",
    "stability": "稳定",
    "description": "GalleryWidget 是一个通用轮播图组件，支持自定义数据、内容、指示器与回调。它适用于 WMS 场景下的图片、广告等轮播展示。该组件提供了灵活的配置选项，包括轮播内容高度、视口占比和指示器颜色等，以满足不同的展示需求。",
    "preview": "../assets/images/gallerywidget_preview.png",
    "scenarios": [
      "图片轮播展示",
      "广告轮播展示",
      "产品展示轮播",
      "任何需要循环展示多个内容项的场景"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show GalleryWidget;\n```",
    "basic_usage": "GalleryWidget<String>(\n  dataList: ['图片1', '图片2'],\n  imageSliders: [Image.asset('img1.png'), Image.asset('img2.png')],\n  changeCallback: (index, data) {\n    print('当前索引: $index, 当前数据: $data');\n  },\n)",
    "properties": [
      {
        "name": "dataList",
        "description": "轮播数据列表",
        "type": "List<T>",
        "default": null,
        "required": true
      },
      {
        "name": "imageSliders",
        "description": "轮播项Widget列表",
        "type": "List<Widget>",
        "default": null,
        "required": true
      },
      {
        "name": "changeCallback",
        "description": "轮播变化监听回调",
        "type": "OnGalleryWidgetChangeCallback<T>?",
        "default": "null",
        "required": false
      },
      {
        "name": "contentHeight",
        "description": "轮播内容高度",
        "type": "double?",
        "default": "348.w",
        "required": false
      },
      {
        "name": "viewportFraction",
        "description": "视口占比",
        "type": "double?",
        "default": "0.9",
        "required": false
      },
      {
        "name": "selectColor",
        "description": "指示器颜色",
        "type": "Color?",
        "default": "null",
        "required": false
      }
    ],
    "events": [
      {
        "name": "changeCallback",
        "description": "轮播项变化时触发",
        "params": "(int index, T data) -> void"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "CarouselSlider",
        "path": "https://pub.dev/packages/carousel_slider"
      },
      {
        "name": "ScrollCommonBottom",
        "path": "lib/widget/window/scroll_common_bottom.dart"
      },
      {
        "name": "本组件内部使用的轮播滑动组件",
        "path": null
      },
      {
        "name": "用作指示器的组件",
        "path": null
      }
    ],
    "source_path": "lib/widget/window/gallery_widget.dart",
    "demo_path": "example/lib/pages/yl_banner_page.dart",
    "methods": []
  },
  {
    "id": "EmptyView",
    "name": "EmptyView 空页面组件",
    "category": "数据展示组件",
    "maintainer": "JoyCoder",
    "stability": "稳定",
    "description": "EmptyView 是一个通用的空页面组件，适用于物流业务中无数据、异常等场景的统一展示。它支持自定义图片、提示文本、按钮、刷新回调和额外内容，并且采用响应式布局，可以适配不同尺寸的设备。这个组件的设计目的是提升用户体验的一致性，并方便在不同场景下复用。",
    "preview": null,
    "scenarios": [
      "列表无数据展示",
      "搜索结果为空时的提示",
      "网络请求失败的错误提示",
      "系统维护或升级时的临时页面"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show EmptyView;\n```",
    "basic_usage": "EmptyView(\n  imagePath: 'assets/images/delivery_empty_view_icon.png',\n  text: '暂无运单记录',\n  buttonText: '刷新数据',\n  onRefresh: () {\n    // 重新加载业务数据\n  },\n)",
    "properties": [
      {
        "name": "imagePath",
        "description": "空页面图片资源路径",
        "type": "String?",
        "default": "'assets/images/delivery_empty_view_icon.png'",
        "required": false
      },
      {
        "name": "text",
        "description": "展示的提示文本",
        "type": "String?",
        "default": "'暂无数据'",
        "required": false
      },
      {
        "name": "buttonText",
        "description": "按钮文本",
        "type": "String?",
        "default": "'点击刷新'",
        "required": false
      },
      {
        "name": "imageWidth",
        "description": "图片宽度",
        "type": "double?",
        "default": "100.w",
        "required": false
      },
      {
        "name": "spacing",
        "description": "图片与文本之间的间隔",
        "type": "double?",
        "default": "10.h",
        "required": false
      },
      {
        "name": "fontSize",
        "description": "文本字体大小",
        "type": "double?",
        "default": "14.sp",
        "required": false
      },
      {
        "name": "textColor",
        "description": "文本颜色",
        "type": "Color?",
        "default": "Colors.grey",
        "required": false
      },
      {
        "name": "fit",
        "description": "图片适应方式",
        "type": "BoxFit",
        "default": "BoxFit.contain",
        "required": false
      },
      {
        "name": "showButton",
        "description": "是否显示按钮",
        "type": "bool",
        "default": "true",
        "required": false
      },
      {
        "name": "package",
        "description": "图片所属package",
        "type": "String?",
        "default": "'flutter_widget'",
        "required": false
      },
      {
        "name": "onRefresh",
        "description": "按钮点击回调",
        "type": "VoidCallback?",
        "default": "null",
        "required": false
      },
      {
        "name": "extraWidget",
        "description": "额外自定义内容组件",
        "type": "Widget?",
        "default": "null",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onRefresh",
        "description": "按钮点击时触发",
        "params": "无"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "Center",
        "path": "https://api.flutter.dev/flutter/widgets/Center-class.html"
      },
      {
        "name": "Column",
        "path": "https://api.flutter.dev/flutter/widgets/Column-class.html"
      },
      {
        "name": "Flutter 内置的居中布局组件",
        "path": null
      },
      {
        "name": "Flutter 内置的垂直布局组件",
        "path": null
      }
    ],
    "source_path": "lib/widget/empty_widget/empty_view.dart",
    "demo_path": "example/lib/pages/yl_empty_page.dart",
    "methods": []
  },
  {
    "id": "数据展示组件索引",
    "name": "数据展示组件索引",
    "category": "",
    "maintainer": null,
    "stability": null,
    "description": "",
    "preview": null,
    "scenarios": [],
    "import_code": null,
    "basic_usage": null,
    "properties": [],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [],
    "source_path": null,
    "demo_path": null,
    "methods": []
  },
  {
    "id": "OperateItemWidget",
    "name": "OperateItemWidget 功能操作组件",
    "category": "数据展示组件",
    "maintainer": "zhangwanyu12",
    "stability": "稳定",
    "description": "OperateItemWidget 是一个功能操作组件，用于展示左侧标题、右侧副标题及箭头。它支持自定义扩展控件与点击回调，适用于 WMS 业务功能入口、设置项等场景。该组件提供了灵活的配置选项，包括标题、副标题、扩展控件、右侧箭头显示等，以满足不同的展示需求。",
    "preview": null,
    "scenarios": [
      "WMS 业务功能入口",
      "设置项列表",
      "可点击的信息展示项",
      "需要展示标题和副标题的列表项"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show OperateItemWidget;\n```",
    "basic_usage": "OperateItemWidget(\n  title: '操作项',\n  subTitle: '副标题',\n  hasRightArrow: true,\n  onTap: () {\n    // 处理点击事件\n    print('操作项被点击');\n  },\n)",
    "properties": [
      {
        "name": "title",
        "description": "左侧主标题文本",
        "type": "String?",
        "default": "null",
        "required": false
      },
      {
        "name": "subTitle",
        "description": "右侧副标题文本",
        "type": "String?",
        "default": "null",
        "required": false
      },
      {
        "name": "subTitleStyle",
        "description": "副标题文本样式",
        "type": "TextStyle?",
        "default": "null",
        "required": false
      },
      {
        "name": "hasRightArrow",
        "description": "是否显示右侧箭头",
        "type": "bool",
        "default": "true",
        "required": false
      },
      {
        "name": "extendWidget",
        "description": "扩展组件",
        "type": "Widget?",
        "default": "null",
        "required": false
      },
      {
        "name": "extendWidgetMarginStart",
        "description": "扩展组件左侧 Margin",
        "type": "double",
        "default": "4.0",
        "required": false
      },
      {
        "name": "onTap",
        "description": "点击事件回调",
        "type": "VoidCallback?",
        "default": "null",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onTap",
        "description": "点击时触发",
        "params": "无"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "ListTile",
        "path": "https://api.flutter.dev/flutter/material/ListTile-class.html"
      },
      {
        "name": "GestureDetector",
        "path": "https://api.flutter.dev/flutter/widgets/GestureDetector-class.html"
      },
      {
        "name": "Flutter 内置的列表项组件",
        "path": null
      },
      {
        "name": "Flutter 手势检测组件",
        "path": null
      }
    ],
    "source_path": "lib/widget/item/operate_item_widget.dart",
    "demo_path": "example/lib/pages/yl_Item_page.dart",
    "methods": []
  },
  {
    "id": "ComRoundWidget",
    "name": "ComRoundWidget 圆角渐变卡片组件",
    "category": "数据展示组件",
    "maintainer": "zhangwanyu12",
    "stability": "稳定",
    "description": "ComRoundWidget 是一个圆角渐变卡片通用组件，支持自定义内容、圆角、边框和渐变背景。它可以作为 WMS 业务中承载各类控件的基础卡片组件，提供了灵活的配置选项，以满足不同的展示需求。",
    "preview": "../assets/images/comroundwidget_preview.png",
    "scenarios": [
      "信息展示卡片",
      "功能模块容器",
      "列表项背景",
      "按钮或可点击区域的背景"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show ComRoundWidget;\n```",
    "basic_usage": "ComRoundWidget(\n  child: Text('内容'),\n  gradientColors: [Colors.blue, Colors.green],\n  radius: 12,\n  margin: EdgeInsets.all(16),\n)",
    "properties": [
      {
        "name": "child",
        "description": "卡片内部的子Widget",
        "type": "Widget?",
        "default": "null",
        "required": false
      },
      {
        "name": "margin",
        "description": "卡片外边距",
        "type": "EdgeInsetsGeometry?",
        "default": "EdgeInsets.symmetric(horizontal: 15)",
        "required": false
      },
      {
        "name": "padding",
        "description": "卡片内边距",
        "type": "EdgeInsetsGeometry?",
        "default": "EdgeInsets.all(10)",
        "required": false
      },
      {
        "name": "color",
        "description": "卡片背景色",
        "type": "Color",
        "default": "Colors.white",
        "required": false
      },
      {
        "name": "height",
        "description": "卡片高度",
        "type": "double?",
        "default": "null",
        "required": false
      },
      {
        "name": "width",
        "description": "卡片宽度",
        "type": "double?",
        "default": "null",
        "required": false
      },
      {
        "name": "side",
        "description": "边框样式",
        "type": "BorderSide",
        "default": "BorderSide.none",
        "required": false
      },
      {
        "name": "radius",
        "description": "圆角半径",
        "type": "double?",
        "default": "8",
        "required": false
      },
      {
        "name": "gradientColors",
        "description": "渐变色集合",
        "type": "List<Color>?",
        "default": "null",
        "required": false
      },
      {
        "name": "begin",
        "description": "渐变起始方向",
        "type": "Alignment?",
        "default": "Alignment.topCenter",
        "required": false
      },
      {
        "name": "end",
        "description": "渐变结束方向",
        "type": "Alignment?",
        "default": "Alignment.bottomCenter",
        "required": false
      }
    ],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "Card",
        "path": "https://api.flutter.dev/flutter/material/Card-class.html"
      },
      {
        "name": "Container",
        "path": "https://api.flutter.dev/flutter/widgets/Container-class.html"
      },
      {
        "name": "Flutter 内置的卡片组件",
        "path": null
      },
      {
        "name": "Flutter 内置的容器组件",
        "path": null
      }
    ],
    "source_path": "lib/widget/button/card_round_widget.dart",
    "demo_path": "example/lib/pages/yl_card_round_page.dart",
    "methods": []
  },
  {
    "id": "YLRadio",
    "name": "YLRadio 单选框",
    "category": "输入组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "YLRadio 是一个灵活的单选框组件，继承自 YLCheckbox。它提供了多种样式选择，支持自定义内容和图标，可以单独使用或在 YLRadioGroup 中组合使用。",
    "preview": "../assets/images/ylradio_preview.png",
    "scenarios": [
      "需要用户在多个选项中选择一个时",
      "选项数量较少（通常少于5个）时",
      "需要立即提交选择结果时"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show YLRadio, YLRadioGroup;\n```",
    "basic_usage": "YLRadio(\n  id: 'option1',\n  title: '选项1',\n  radioStyle: YLRadioStyle.circle,\n)",
    "properties": [],
    "events": [
      {
        "name": "onRadioGroupChange",
        "description": "选中项变化时触发",
        "params": "String?"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "YLCheckbox",
        "path": "./Checkbox.md"
      },
      {
        "name": "YLCheckboxGroup",
        "path": "./CheckboxGroup.md"
      },
      {
        "name": "复选框组件",
        "path": null
      },
      {
        "name": "复选框组组件",
        "path": null
      }
    ],
    "source_path": "../../../lib/widget/radio/yl_radio.dart",
    "demo_path": "../../../example/lib/pages/yl_radio_page.dart",
    "methods": []
  },
  {
    "id": "YLCalendarBottomSheet",
    "name": "YLCalendarBottomSheet 日历底部弹出选择器",
    "category": "输入组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "YLCalendarBottomSheet 是一个灵活的日历底部弹出选择器组件，提供了单日期选择、日期时间选择和日期区间选择三种模式。它使用底部弹出的方式展示日历，方便用户进行日期相关的选择操作。",
    "preview": "../assets/images/ylcalendarbottomsheet_preview.png",
    "scenarios": [
      "需要用户选择单个日期的场景，如预约日期、生日选择等",
      "需要用户选择具体日期和时间的场景，如会议安排、提醒设置等",
      "需要用户选择日期区间的场景，如假期安排、活动周期设置等"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show showSingleCalendarBottomSheet, showDateTimePickerBottomSheet, showRangeCalendarBottomSheet;\n```",
    "basic_usage": "await showSingleCalendarBottomSheet(\n  context: context,\n  onConfirm: (date) {\n    print('选择的日期: ${date.toString()}');\n  },\n);",
    "properties": [],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "YLCalendarWidget",
        "path": "./YLCalendarWidget.md"
      },
      {
        "name": "DateTimePickerWidget",
        "path": "./DateTimePickerWidget.md"
      },
      {
        "name": "RangeCalendarWidget",
        "path": "./RangeCalendarWidget.md"
      },
      {
        "name": "单日期选择日历组件",
        "path": null
      },
      {
        "name": "日期时间选择组件",
        "path": null
      },
      {
        "name": "日期区间选择组件",
        "path": null
      }
    ],
    "source_path": "../../../lib/widget/input/yl_calendar_bottom_sheet.dart",
    "demo_path": "../../../example/lib/pages/yl_calendar_page.dart",
    "methods": []
  },
  {
    "id": "KeyboardUtils",
    "name": "KeyboardUtils 键盘工具类",
    "category": "输入组件",
    "maintainer": "zhangwanyu12",
    "stability": "稳定",
    "description": "KeyboardUtils 是一个专为 WMS 业务场景设计的键盘工具类。它提供了弹出车牌输入与内容选择、只弹出键盘等功能，适用于车牌输入、参数选择等复合交互场景。该工具类封装了常用的键盘操作，简化了开发流程，提高了代码复用性。",
    "preview": "../assets/images/keyboardutils_preview.png",
    "scenarios": [
      "WMS 系统中需要输入车牌号的场景",
      "需要同时进行内容选择和车牌输入的界面",
      "只需要弹出车牌输入键盘的场景",
      "任何需要自定义键盘输入和内容选择的复合交互场景"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show KeyboardUtils;\n```",
    "basic_usage": "KeyboardUtils.showContentSelectVehicleNumberWidget(\n  context,\n  state,\n  selectContentTitle: '选择车辆类型',\n  selectContentList: ['冷链', '普货'],\n  resultCallback: (val) {\n    print('选择结果: $val');\n  },\n);",
    "properties": [],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "PlateInputWithKeyboard",
        "path": "./PlateInputWithKeyboard.md"
      },
      {
        "name": "ContentSelectWidget",
        "path": "./ContentSelectWidget.md"
      },
      {
        "name": "车牌输入键盘组件",
        "path": null
      },
      {
        "name": "内容选择组件",
        "path": null
      }
    ],
    "source_path": "../../../lib/widget/keyboard/keyboard_utils.dart",
    "demo_path": "../../../example/lib/pages/yl_keyboard_page.dart",
    "methods": [
      {
        "name": "showContentSelectVehicleNumberWidget",
        "description": "展示内容选择车牌组件",
        "parameters": [
          "context",
          "state",
          "plateType",
          "plateNumber",
          "selectContentTitle",
          "selectContentList",
          "resultCallback"
        ],
        "return_type": "void"
      },
      {
        "name": "showOnlyPlateInputBottomSheet",
        "description": "弹出只有键盘输入的底部弹窗",
        "parameters": [
          "context",
          "initialType",
          "vehicleNumber",
          "onPlateInputChanged",
          "onPlateInputFinish",
          "vehicleNumberMaxLength"
        ],
        "return_type": "void"
      }
    ]
  },
  {
    "id": "CascadeSelectWidget",
    "name": "CascadeSelectWidget 级联选择组件",
    "category": "输入组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "CascadeSelectWidget 是一个灵活的级联选择组件，支持多级数据的选择和展示。它提供了丰富的自定义选项，包括选择器样式、标题栏样式、确认按钮样式等，适用于各种需要多级选择的场景。",
    "preview": "../assets/images/cascadeselectwidget_preview.png",
    "scenarios": [
      "地址选择（省市区）",
      "多级分类选择",
      "时间日期选择（年月日）",
      "任何需要多级联动选择的场景"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show CascadeSelectWidget;\n```",
    "basic_usage": "CascadeSelectWidget(\n  data: [\n    ['选项1', '选项2', '选项3'],\n    ['子选项1', '子选项2', '子选项3'],\n  ],\n  onConfirm: (selected) {\n    print('选中的结果: $selected');\n  },\n)",
    "properties": [
      {
        "name": "data",
        "description": "级联数据",
        "type": "List<List<String>>",
        "default": null,
        "required": true
      },
      {
        "name": "selectIndex",
        "description": "默认选中的索引",
        "type": "List<int>?",
        "default": "null",
        "required": false
      },
      {
        "name": "title",
        "description": "选择器标题",
        "type": "String?",
        "default": "null",
        "required": false
      },
      {
        "name": "cancelText",
        "description": "取消按钮文本",
        "type": "String",
        "default": "'取消'",
        "required": false
      },
      {
        "name": "confirmText",
        "description": "确认按钮文本",
        "type": "String",
        "default": "'确定'",
        "required": false
      },
      {
        "name": "titleStyle",
        "description": "标题样式",
        "type": "TextStyle?",
        "default": "null",
        "required": false
      },
      {
        "name": "cancelStyle",
        "description": "取消按钮样式",
        "type": "TextStyle?",
        "default": "null",
        "required": false
      },
      {
        "name": "confirmStyle",
        "description": "确认按钮样式",
        "type": "TextStyle?",
        "default": "null",
        "required": false
      },
      {
        "name": "itemStyle",
        "description": "选项样式",
        "type": "TextStyle?",
        "default": "null",
        "required": false
      },
      {
        "name": "height",
        "description": "选择器高度",
        "type": "double",
        "default": "300.0",
        "required": false
      },
      {
        "name": "itemHeight",
        "description": "选项高度",
        "type": "double",
        "default": "40.0",
        "required": false
      },
      {
        "name": "itemCount",
        "description": "可见选项数",
        "type": "int",
        "default": "5",
        "required": false
      },
      {
        "name": "onCancel",
        "description": "取消回调",
        "type": "VoidCallback?",
        "default": "null",
        "required": false
      },
      {
        "name": "onConfirm",
        "description": "确认回调",
        "type": "ValueChanged<List<String>>?",
        "default": "null",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onCancel",
        "description": "点击取消时触发",
        "params": "-"
      },
      {
        "name": "onConfirm",
        "description": "点击确认时触发",
        "params": "List<String>"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "PickerWidget",
        "path": "./PickerWidget.md"
      },
      {
        "name": "DatePickerWidget",
        "path": "./DatePickerWidget.md"
      },
      {
        "name": "通用选择器组件",
        "path": null
      },
      {
        "name": "日期选择器组件",
        "path": null
      }
    ],
    "source_path": "../../../lib/widget/cascade/cascade_select_widget.dart",
    "demo_path": "../../../example/lib/pages/yl_cascade_select_page.dart",
    "methods": []
  },
  {
    "id": "YLCheckbox",
    "name": "YLCheckbox 复选框",
    "category": "输入组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "YLCheckbox 是一个灵活的复选框组件，支持多种样式和自定义选项。它可以单独使用，也可以在 YLCheckboxGroup 中组合使用，以实现更复杂的选择功能。",
    "preview": "../assets/images/ylcheckbox_preview.png",
    "scenarios": [
      "需要用户在多个选项中进行多选时",
      "单个开关/同意选项",
      "全选/反选操作",
      "需要对选项进行分组管理时"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show YLCheckbox, YLCheckboxGroup;\n```",
    "basic_usage": "YLCheckbox(\n  id: 'option1',\n  title: '选项1',\n  checked: false,\n  onCheckBoxChanged: (checked) {\n    print('选项1被${checked ? '选中' : '取消选中'}');\n  },\n)",
    "properties": [],
    "events": [
      {
        "name": "onCheckBoxChanged",
        "description": "单个复选框状态变化时触发",
        "params": "bool"
      },
      {
        "name": "onChangeGroup",
        "description": "复选框组选中状态变化时触发",
        "params": "List<String>"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "YLRadio",
        "path": "./Radio.md"
      },
      {
        "name": "YLRadioGroup",
        "path": "./RadioGroup.md"
      },
      {
        "name": "单选框组件",
        "path": null
      },
      {
        "name": "单选框组组件",
        "path": null
      }
    ],
    "source_path": null,
    "demo_path": "../../../example/lib/pages/yl_check_box_page.dart",
    "methods": []
  },
  {
    "id": "输入组件索引",
    "name": "输入组件索引",
    "category": "",
    "maintainer": null,
    "stability": null,
    "description": "",
    "preview": null,
    "scenarios": [],
    "import_code": null,
    "basic_usage": null,
    "properties": [],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [],
    "source_path": null,
    "demo_path": null,
    "methods": []
  },
  {
    "id": "SearchCommonWidget",
    "name": "SearchCommonWidget 通用搜索组件",
    "category": "输入组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "SearchCommonWidget 是一个功能丰富的通用搜索组件，专为 WMS 业务场景设计。它支持文本输入、扫码、延时搜索等功能，适用于关键字输入、单号查询等多种场合。该组件提供了灵活的自定义选项，可以满足不同业务需求的搜索功能实现。",
    "preview": "../assets/images/searchcommonwidget_preview.png",
    "scenarios": [
      "WMS 系统中需要快速输入或扫描单号的场景",
      "需要实时搜索或延迟搜索的界面",
      "需要结合扫码功能的搜索框",
      "任何需要自定义搜索框样式和行为的场景"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show SearchCommonWidget;\n```",
    "basic_usage": "SearchCommonWidget(\n  searchTextController: TextEditingController(),\n  searchTextFocusNode: FocusNode(),\n  hintText: '请输入单号/关键字',\n  onChanged: (value) { print('文本变化: $value'); },\n  onSubmitted: (value) { print('提交: $value'); },\n  onClean: () { print('清除输入'); },\n  onDelayChanged: (value) { print('延时触发: $value'); },\n  delaySearchTime: Duration(seconds: 1),\n  isShowScanButton: true,\n  isShowSearchIcon: true,\n)",
    "properties": [
      {
        "name": "searchTextController",
        "description": "输入内容控制器",
        "type": "TextEditingController",
        "default": null,
        "required": true
      },
      {
        "name": "searchTextFocusNode",
        "description": "输入框焦点控制器",
        "type": "FocusNode",
        "default": null,
        "required": true
      },
      {
        "name": "hintText",
        "description": "占位提示文本",
        "type": "String?",
        "default": null,
        "required": false
      },
      {
        "name": "onClean",
        "description": "清除按钮点击回调",
        "type": "VoidCallback?",
        "default": null,
        "required": false
      },
      {
        "name": "onSubmitted",
        "description": "输入提交回调",
        "type": "ValueChanged<String>?",
        "default": null,
        "required": false
      },
      {
        "name": "onChanged",
        "description": "输入内容变化回调",
        "type": "ValueChanged<String>?",
        "default": null,
        "required": false
      },
      {
        "name": "onDelayChanged",
        "description": "延时触发回调",
        "type": "ValueChanged<String>?",
        "default": null,
        "required": false
      },
      {
        "name": "delaySearchTime",
        "description": "延时秒数",
        "type": "Duration?",
        "default": null,
        "required": false
      },
      {
        "name": "isShowScanButton",
        "description": "是否显示扫码按钮",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "isShowSearchIcon",
        "description": "是否显示搜索icon",
        "type": "bool",
        "default": "true",
        "required": false
      },
      {
        "name": "margin",
        "description": "输入外层的margin",
        "type": "EdgeInsetsGeometry?",
        "default": null,
        "required": false
      },
      {
        "name": "borderRadius",
        "description": "输入框圆角",
        "type": "BorderRadiusGeometry?",
        "default": null,
        "required": false
      },
      {
        "name": "textFieldMargin",
        "description": "输入框内部padding",
        "type": "EdgeInsetsGeometry?",
        "default": null,
        "required": false
      },
      {
        "name": "textInputAction",
        "description": "输入法动作类型",
        "type": "TextInputAction",
        "default": "TextInputAction.search",
        "required": false
      },
      {
        "name": "keyboardType",
        "description": "键盘类型",
        "type": "TextInputType",
        "default": "TextInputType.text",
        "required": false
      },
      {
        "name": "obscureText",
        "description": "是否为密文输入",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "searchHeight",
        "description": "搜索控件整体高度",
        "type": "double?",
        "default": null,
        "required": false
      },
      {
        "name": "scanBeforeCallBack",
        "description": "扫码前的回调",
        "type": "VoidCallback?",
        "default": null,
        "required": false
      }
    ],
    "events": [
      {
        "name": "onChanged",
        "description": "输入内容变化时触发",
        "params": "String"
      },
      {
        "name": "onSubmitted",
        "description": "输入提交时触发",
        "params": "String"
      },
      {
        "name": "onClean",
        "description": "清除按钮点击时触发",
        "params": "-"
      },
      {
        "name": "onDelayChanged",
        "description": "延时触发搜索时触发",
        "params": "String"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "Input",
        "path": "./Input.md"
      },
      {
        "name": "Scan",
        "path": "./Scan.md"
      },
      {
        "name": "基础输入框组件",
        "path": null
      },
      {
        "name": "扫码组件",
        "path": null
      }
    ],
    "source_path": "../../../lib/widget/input/search_common_widget.dart",
    "demo_path": "../../../example/lib/pages/yl_search_page.dart",
    "methods": []
  },
  {
    "id": "YLDialogUtil",
    "name": "YLDialogUtil 对话框工具类",
    "category": "反馈组件",
    "maintainer": "chenxuheng3",
    "stability": "稳定",
    "description": "YLDialogUtil 是一个通用的对话框工具类，提供了一系列静态方法来创建和显示不同类型的对话框。这个类封装了常用的对话框样式，使得在应用中创建一致性的对话框变得简单。它支持一键、两键和三键对话框，适用于 WMS 业务场景中的各种提示、确认和选择操作。",
    "preview": "../assets/images/yldialogutil_preview.png",
    "scenarios": [
      "操作确认提示",
      "信息展示",
      "错误警告",
      "多选项操作",
      "自定义内容展示"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show YLDialogUtil;\n```",
    "basic_usage": "YLDialogUtil.showOneButton(\n  title: Text('提示'),\n  content: '确认删除该项目吗？',\n  onPressed: () {\n    print('用户确认了操作');\n  },\n);",
    "properties": [],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "YLDialogWidget",
        "path": "./YLDialog.md"
      },
      {
        "name": "Get.dialog",
        "path": "https://pub.dev/documentation/get/latest/get_core_src_get_interface/GetInterface/dialog.html"
      },
      {
        "name": "YLDialogUtil 内部使用的对话框 Widget",
        "path": null
      },
      {
        "name": "GetX 库提供的对话框方法",
        "path": null
      }
    ],
    "source_path": "lib/widget/dialog/yl_dialog.dart",
    "demo_path": "example/lib/pages/feedbackcomponent/dialog/yl_dialog_page.dart",
    "methods": [
      {
        "name": "showOneButton",
        "description": "显示单按钮对话框",
        "parameters": [
          "title",
          "content",
          "buttonText",
          "onPressed",
          "textColor",
          "willPop"
        ],
        "return_type": "Future<bool?>"
      },
      {
        "name": "showTwoButtons",
        "description": "显示双按钮对话框",
        "parameters": [
          "title",
          "content",
          "leftButtonText",
          "rightButtonText",
          "onLeftPressed",
          "onRightPressed",
          "leftTextColor",
          "rightTextColor",
          "willPop"
        ],
        "return_type": "Future<bool?>"
      },
      {
        "name": "showThreeButtons",
        "description": "显示三按钮对话框",
        "parameters": [
          "title",
          "content",
          "button1Text",
          "button2Text",
          "button3Text",
          "onButton1Pressed",
          "onButton2Pressed",
          "onButton3Pressed",
          "button1TextColor",
          "button2TextColor",
          "button3TextColor",
          "willPop"
        ],
        "return_type": "Future<int?>"
      }
    ]
  },
  {
    "id": "SmartRefresher",
    "name": "SmartRefresher 智能刷新组件",
    "category": "反馈组件",
    "maintainer": "Jpeng",
    "stability": "稳定",
    "description": "SmartRefresher 是一个功能强大的刷新组件，提供了下拉刷新和上拉加载更多的功能。它支持自定义头部和底部指示器，可以灵活地适应各种刷新和加载需求。该组件特别适用于列表、网格等需要刷新或加载更多数据的场景。",
    "preview": null,
    "scenarios": [
      "列表下拉刷新",
      "列表上拉加载更多",
      "网格视图的刷新和加载",
      "自定义刷新动画",
      "需要二级刷新的场景"
    ],
    "import_code": "```dart\nimport 'package:pull_to_refresh/pull_to_refresh.dart';\n```",
    "basic_usage": "RefreshController _refreshController = RefreshController(initialRefresh: false);\n\nSmartRefresher(\n  controller: _refreshController,\n  onRefresh: _onRefresh,\n  onLoading: _onLoading,\n  child: ListView.builder(\n    itemBuilder: (c, i) => Card(child: Center(child: Text('Item $i'))),\n    itemExtent: 100.0,\n    itemCount: 20,\n  ),\n)\n\nvoid _onRefresh() async {\n  // 模拟网络请求\n  await Future.delayed(Duration(milliseconds: 1000));\n  _refreshController.refreshCompleted();\n}\n\nvoid _onLoading() async {\n  // 模拟加载更多\n  await Future.delayed(Duration(milliseconds: 1000));\n  _refreshController.loadComplete();\n}",
    "properties": [
      {
        "name": "controller",
        "description": "刷新控制器",
        "type": "RefreshController",
        "default": null,
        "required": true
      },
      {
        "name": "child",
        "description": "子组件",
        "type": "Widget?",
        "default": "null",
        "required": false
      },
      {
        "name": "header",
        "description": "自定义头部指示器",
        "type": "Widget?",
        "default": "平台默认指示器",
        "required": false
      },
      {
        "name": "footer",
        "description": "自定义底部指示器",
        "type": "Widget?",
        "default": "ClassicFooter",
        "required": false
      },
      {
        "name": "enablePullDown",
        "description": "是否启用下拉刷新",
        "type": "bool",
        "default": "true",
        "required": false
      },
      {
        "name": "enablePullUp",
        "description": "是否启用上拉加载",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "onRefresh",
        "description": "刷新回调",
        "type": "VoidCallback?",
        "default": "null",
        "required": false
      },
      {
        "name": "onLoading",
        "description": "加载更多回调",
        "type": "VoidCallback?",
        "default": "null",
        "required": false
      },
      {
        "name": "enableTwoLevel",
        "description": "是否启用二级刷新",
        "type": "bool",
        "default": "false",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onRefresh",
        "description": "刷新触发时的回调",
        "params": "无"
      },
      {
        "name": "onLoading",
        "description": "加载触发时的回调",
        "params": "无"
      },
      {
        "name": "onTwoLevel",
        "description": "二级刷新触发回调",
        "params": "bool isOpen"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "RefreshIndicator",
        "path": "https://api.flutter.dev/flutter/material/RefreshIndicator-class.html"
      },
      {
        "name": "ListView",
        "path": "https://api.flutter.dev/flutter/widgets/ListView-class.html"
      },
      {
        "name": "Flutter 内置的下拉刷新指示器",
        "path": null
      },
      {
        "name": "列表视图组件，常与 SmartRefresher 配合使用",
        "path": null
      }
    ],
    "source_path": "https://github.com/peng8350/flutter_pulltorefresh/blob/master/lib/src/smart_refresher.dart",
    "demo_path": "https://github.com/peng8350/flutter_pulltorefresh/tree/master/example/lib/ui",
    "methods": []
  },
  {
    "id": "反馈组件索引",
    "name": "反馈组件索引",
    "category": "",
    "maintainer": null,
    "stability": null,
    "description": "",
    "preview": null,
    "scenarios": [],
    "import_code": null,
    "basic_usage": null,
    "properties": [],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [],
    "source_path": null,
    "demo_path": null,
    "methods": []
  },
  {
    "id": "YLToast",
    "name": "YLToast 轻量级提示组件",
    "category": "反馈组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "YLToast 是一个轻量级的提示组件，提供了多种类型的 Toast 显示方式，包括纯文本、带图标、加载中以及依附式 Toast。它基于 bot_toast 库进行封装，适用于 WMS 业务场景中的各种提示需求，如操作成功提示、错误警告、加载状态等。",
    "preview": "../assets/images/yltoast_preview.png",
    "scenarios": [
      "操作成功/失败提示",
      "警告信息展示",
      "加载状态指示",
      "轻量级信息反馈",
      "依附于特定 UI 元素的提示"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show YLToast;\n```",
    "basic_usage": "// 显示普通文本 Toast\nYLToast.openToast('操作成功');\n\n// 显示带图标的 Toast\nYLToast.openIconToast(\n  toastType: IconToastType.success,\n  content: '保存成功',\n);\n\n// 显示加载中 Toast\nYLToast.openLoadingToast(content: '加载中...');\n\n// 显示依附式 Toast\nYLToast.openFloatToast(\n  context: context,\n  showContent: '这是一个浮动提示',\n);",
    "properties": [],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "BotToast",
        "path": "https://pub.dev/packages/bot_toast"
      },
      {
        "name": "YLDialogUtil",
        "path": "./YLDialogUtil.md"
      },
      {
        "name": "YLToast 内部使用的 Toast 库",
        "path": null
      },
      {
        "name": "对话框工具类，用于显示更复杂的交互式提示",
        "path": null
      }
    ],
    "source_path": "lib/widget/toast/yl_toast.dart",
    "demo_path": "example/lib/pages/feedbackcomponent/toast/yl_toast_page.dart",
    "methods": [
      {
        "name": "openToast",
        "description": "显示普通文本 Toast",
        "parameters": [
          "content",
          "context",
          "onClose",
          "align",
          "duration"
        ],
        "return_type": "void"
      },
      {
        "name": "openIconToast",
        "description": "显示带图标的 Toast",
        "parameters": [
          "toastType",
          "content",
          "onClose",
          "align",
          "duration"
        ],
        "return_type": "void"
      },
      {
        "name": "openLoadingToast",
        "description": "显示加载中的 Toast",
        "parameters": [
          "content",
          "onClose",
          "align",
          "isCloseAllHistoryLoading"
        ],
        "return_type": "CancelFunc?"
      },
      {
        "name": "openFloatToast",
        "description": "显示依附式 Toast",
        "parameters": [
          "showContent",
          "context",
          "target",
          "config",
          "customBuilder"
        ],
        "return_type": "CancelFunc"
      },
      {
        "name": "closeLoading",
        "description": "关闭当前显示的 loading Toast",
        "parameters": [
          "-"
        ],
        "return_type": "void"
      },
      {
        "name": "closeAllLoading",
        "description": "关闭所有正在显示的 loading Toast",
        "parameters": [
          "-"
        ],
        "return_type": "void"
      }
    ]
  },
  {
    "id": "WaybillListPage",
    "name": "YLBackTopButton 返回顶部按钮",
    "category": "导航组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "YLBackTopButton是一个圆形的浮动按钮组件，当页面滚动超过指定距离时显示，点击后自动平滑滚动到页面顶部。按钮包含一个向上的箭头图标和\"顶部\"文字，可自定义外观和滚动行为，适用于长列表或长页面的快速导航。",
    "preview": "../assets/images/ylbacktopbutton_preview.png",
    "scenarios": [
      "长列表页面（如订单列表、货物清单等）",
      "长内容页面（如详情页、资讯页等）",
      "需要快速返回顶部的任何滚动视图",
      "物流运单跟踪页面",
      "仓库库存管理长列表"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show YLBackTopButton;\n```",
    "basic_usage": "// 创建一个ScrollController\nfinal ScrollController _scrollController = ScrollController();\n\n// 在Scaffold中使用\nScaffold(\n  body: ListView.builder(\n    controller: _scrollController,\n    itemCount: 100,\n    itemBuilder: (context, index) => ListTile(\n      title: Text('运单项 $index'),\n    ),\n  ),\n  floatingActionButton: YLBackTopButton(\n    scrollController: _scrollController,\n  ),\n)",
    "properties": [
      {
        "name": "scrollController",
        "description": "控制滚动视图的ScrollController",
        "type": "ScrollController",
        "default": null,
        "required": true
      },
      {
        "name": "backgroundColor",
        "description": "按钮的背景颜色",
        "type": "Color?",
        "default": "Colours.bgBlack1",
        "required": false
      },
      {
        "name": "iconColor",
        "description": "箭头图标的颜色",
        "type": "Color?",
        "default": "Colors.white",
        "required": false
      },
      {
        "name": "textColor",
        "description": "\"顶部\"文字的颜色",
        "type": "Color?",
        "default": "Colors.white",
        "required": false
      },
      {
        "name": "visibilityThreshold",
        "description": "显示按钮的滚动阈值（像素）",
        "type": "double",
        "default": "100",
        "required": false
      },
      {
        "name": "scrollDuration",
        "description": "滚动到顶部的动画时长",
        "type": "Duration",
        "default": "Duration(milliseconds: 300)",
        "required": false
      },
      {
        "name": "width",
        "description": "按钮的宽度",
        "type": "double",
        "default": "60",
        "required": false
      },
      {
        "name": "height",
        "description": "按钮的高度",
        "type": "double",
        "default": "60",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onPressed",
        "description": "按钮点击时的回调（内部已实现滚动到顶部的功能）",
        "params": "-"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "YLNavBar",
        "path": "./YLNavBar.md"
      },
      {
        "name": "StepNavigator",
        "path": "./StepNavigator.md"
      },
      {
        "name": "导航栏组件",
        "path": null
      },
      {
        "name": "步骤导航器组件",
        "path": null
      }
    ],
    "source_path": "lib/widget/button/yl_back_top_button.dart",
    "demo_path": "example/lib/pages/yl_backtop_page.dart",
    "methods": []
  },
  {
    "id": "YlSteps 步骤条",
    "name": "YlSteps 步骤条",
    "category": "导航组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "YlSteps 是一个用于展示任务进度或引导用户完成某些操作的步骤条组件。支持水平和垂直两种布局方式，可以展示成功和错误状态，并提供简洁模式和只读模式。组件可用于多步骤操作流程的可视化展示，帮助用户了解当前所处的步骤位置和整体流程。",
    "preview": "../assets/images/ylsteps_preview.png",
    "scenarios": [
      "分步操作引导流程",
      "任务完成进度展示",
      "订单处理流程可视化",
      "表单填写步骤指示",
      "业务流程状态展示"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show YlSteps, YLStepsItemData, YlStepsDirection, YlStepsStatus;\n```",
    "basic_usage": "YlSteps(\n  steps: [\n    YLStepsItemData(\n      title: '步骤一',\n      content: '完成第一步操作',\n    ),\n    YLStepsItemData(\n      title: '步骤二',\n      content: '完成第二步操作',\n    ),\n    YLStepsItemData(\n      title: '步骤三',\n      content: '完成第三步操作',\n    ),\n  ],\n  activeIndex: 1,\n  direction: YlStepsDirection.horizontal,\n)",
    "properties": [
      {
        "name": "steps",
        "description": "步骤条数据列表",
        "type": "List\\<YLStepsItemData\\>",
        "default": null,
        "required": true
      },
      {
        "name": "activeIndex",
        "description": "当前激活的步骤索引",
        "type": "int",
        "default": "0",
        "required": false
      },
      {
        "name": "direction",
        "description": "步骤条布局方向",
        "type": "YlStepsDirection",
        "default": "YlStepsDirection.horizontal",
        "required": false
      },
      {
        "name": "status",
        "description": "步骤条当前状态",
        "type": "YlStepsStatus",
        "default": "YlStepsStatus.success",
        "required": false
      },
      {
        "name": "simple",
        "description": "是否使用简洁模式",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "readOnly",
        "description": "是否为只读模式",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "verticalSelect",
        "description": "垂直布局下是否启用自定义选择",
        "type": "bool",
        "default": "false",
        "required": false
      }
    ],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "StepNavigator",
        "path": "StepNavigator.md"
      },
      {
        "name": "YLNavBar",
        "path": "YLNavBar.md"
      },
      {
        "name": "另一种样式的步骤导航器组件",
        "path": null
      },
      {
        "name": "导航栏组件",
        "path": null
      }
    ],
    "source_path": "lib/widget/setps/yl_steps.dart",
    "demo_path": null,
    "methods": []
  },
  {
    "id": "StepNavigator",
    "name": "StepNavigator 步骤导航器",
    "category": "导航组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "StepNavigator 是一个通用步骤条组件，用于展示流程的各个步骤及当前所处位置。支持箭头型和时间轴型两种显示模式，可根据业务场景灵活切换。组件支持步骤点击切换、异常状态提示等功能，适用于多步骤操作流程的导航展示。",
    "preview": "../assets/images/stepnavigator_preview.png",
    "scenarios": [
      "多步骤表单填写流程",
      "订单处理流程展示",
      "任务完成进度指示",
      "分步操作引导流程"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show StepNavigator;\n```",
    "basic_usage": "StepNavigator(\n  steps: ['步骤一', '步骤二', '步骤三'],\n  currentStep: 1,\n  onStepChanged: (index) {\n    // 处理步骤切换\n    setState(() {\n      _currentStep = index;\n    });\n  },\n  showExclamations: [false, true, false],\n)",
    "properties": [
      {
        "name": "steps",
        "description": "步骤名称列表",
        "type": "List\\<String\\>",
        "default": null,
        "required": true
      },
      {
        "name": "currentStep",
        "description": "当前选中的步骤下标",
        "type": "int",
        "default": null,
        "required": true
      },
      {
        "name": "onStepChanged",
        "description": "步骤切换回调",
        "type": "Function(int)",
        "default": null,
        "required": true
      },
      {
        "name": "showExclamations",
        "description": "每步是否显示感叹号",
        "type": "List\\<bool\\>",
        "default": null,
        "required": true
      },
      {
        "name": "mode",
        "description": "步骤条模式",
        "type": "StepBarMode",
        "default": "StepBarMode.arrow",
        "required": false
      },
      {
        "name": "height",
        "description": "步骤条高度",
        "type": "double?",
        "default": "50.h",
        "required": false
      },
      {
        "name": "spaceImage",
        "description": "间隔图标",
        "type": "Widget?",
        "default": "默认箭头图标",
        "required": false
      },
      {
        "name": "errorWidget",
        "description": "错误图标",
        "type": "Widget?",
        "default": "默认感叹号图标",
        "required": false
      },
      {
        "name": "fontSize",
        "description": "文本字体大小",
        "type": "double?",
        "default": "箭头模式:12.sp<br>时间轴模式:14.sp",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onStepChanged",
        "description": "步骤切换时触发",
        "params": "index: 选中的步骤索引"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "YLSteps",
        "path": "YLSteps.md"
      },
      {
        "name": "YLNavBar",
        "path": "YLNavBar.md"
      },
      {
        "name": "另一种样式的步骤指示器",
        "path": null
      },
      {
        "name": "导航栏组件",
        "path": null
      }
    ],
    "source_path": "lib/widget/setps/step_navigator.dart",
    "demo_path": null,
    "methods": []
  },
  {
    "id": "导航组件索引",
    "name": "导航组件索引",
    "category": "",
    "maintainer": null,
    "stability": null,
    "description": "",
    "preview": null,
    "scenarios": [],
    "import_code": null,
    "basic_usage": null,
    "properties": [],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [],
    "source_path": null,
    "demo_path": null,
    "methods": []
  },
  {
    "id": "YLNavBar 导航栏",
    "name": "YLNavBar 导航栏",
    "category": "导航组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "YLNavBar 是一个高度可定制的导航栏组件，支持自定义标题、左右操作项、背景色、边框样式等配置。组件实现了 PreferredSizeWidget 接口，可以无缝集成到 Scaffold 的 appBar 属性中。支持自动适配屏幕（包含状态栏高度）、自定义返回按钮行为、添加额外内容区域等功能。",
    "preview": "../assets/images/ylnavbar_preview.png",
    "scenarios": [
      "应用顶部导航栏",
      "需要自定义导航栏样式的场景",
      "需要在导航栏添加多个操作按钮的场景",
      "需要在导航栏下方添加额外内容（如标签、搜索框等）的场景"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show YLNavBar, YLNavBarItem, YLNavBarItemBorder;\n```",
    "basic_usage": "YLNavBar(\n  title: '标题',\n  rightBarItems: [\n    YLNavBarItem(\n      icon: Icons.share,\n      action: () => print('分享'),\n    ),\n  ],\n)",
    "properties": [
      {
        "name": "title",
        "description": "标题文本",
        "type": "String?",
        "default": "null",
        "required": false
      },
      {
        "name": "titleWidget",
        "description": "自定义标题Widget",
        "type": "Widget?",
        "default": "null",
        "required": false
      },
      {
        "name": "titleColor",
        "description": "标题文本颜色",
        "type": "Color?",
        "default": "Colors.white",
        "required": false
      },
      {
        "name": "titleFont",
        "description": "标题字体大小配置",
        "type": "Font?",
        "default": "null",
        "required": false
      },
      {
        "name": "titleFontFamily",
        "description": "标题自定义字体样式",
        "type": "TextStyle?",
        "default": "null",
        "required": false
      },
      {
        "name": "titleFontWeight",
        "description": "标题字体粗细",
        "type": "FontWeight?",
        "default": "FontWeight.w500",
        "required": false
      },
      {
        "name": "centerTitle",
        "description": "标题是否居中显示",
        "type": "bool",
        "default": "true",
        "required": false
      },
      {
        "name": "leftBarItems",
        "description": "左侧操作项列表",
        "type": "List\\<YLNavBarItem\\>?",
        "default": "null",
        "required": false
      },
      {
        "name": "rightBarItems",
        "description": "右侧操作项列表",
        "type": "List\\<YLNavBarItem\\>?",
        "default": "null",
        "required": false
      },
      {
        "name": "opacity",
        "description": "导航栏背景透明度",
        "type": "double",
        "default": "1.0",
        "required": false
      },
      {
        "name": "backgroundColor",
        "description": "导航栏背景颜色",
        "type": "Color?",
        "default": "Color(0xFFf0250f)",
        "required": false
      },
      {
        "name": "padding",
        "description": "内容区域内边距",
        "type": "EdgeInsetsGeometry?",
        "default": "EdgeInsets.symmetric(horizontal: 16.0, vertical: 4.0)",
        "required": false
      },
      {
        "name": "titleMargin",
        "description": "标题左右两侧的边距",
        "type": "double",
        "default": "16.0",
        "required": false
      },
      {
        "name": "height",
        "description": "导航栏高度",
        "type": "double",
        "default": "44.0",
        "required": false
      },
      {
        "name": "screenAdaptation",
        "description": "是否自动适配屏幕",
        "type": "bool",
        "default": "true",
        "required": false
      },
      {
        "name": "useDefaultBack",
        "description": "是否显示默认的返回按钮",
        "type": "bool",
        "default": "true",
        "required": false
      },
      {
        "name": "onBack",
        "description": "返回按钮点击回调",
        "type": "VoidCallback?",
        "default": "null",
        "required": false
      },
      {
        "name": "useBorderStyle",
        "description": "是否使用边框样式",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "border",
        "description": "边框样式配置",
        "type": "YLNavBarItemBorder?",
        "default": "null",
        "required": false
      },
      {
        "name": "belowTitleWidget",
        "description": "导航栏下方的额外Widget",
        "type": "Widget?",
        "default": "null",
        "required": false
      },
      {
        "name": "boxShadow",
        "description": "底部阴影配置",
        "type": "List\\<BoxShadow\\>?",
        "default": "null",
        "required": false
      },
      {
        "name": "flexibleSpace",
        "description": "固定背景Widget",
        "type": "Widget?",
        "default": "null",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onBack",
        "description": "返回按钮点击事件",
        "params": "无"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "StepNavigator",
        "path": "StepNavigator.md"
      },
      {
        "name": "YLBackTopButton",
        "path": "YLBackTopButton.md"
      },
      {
        "name": "步骤导航器组件",
        "path": null
      },
      {
        "name": "返回顶部按钮组件",
        "path": null
      }
    ],
    "source_path": "lib/widget/nav/yl_nav_bar.dart",
    "demo_path": null,
    "methods": []
  },
  {
    "id": "ScanManualInputWidget",
    "name": "ScanManualInputWidget 扫码手动输入组件",
    "category": "业务组件",
    "maintainer": "- **稳定性**: 稳定",
    "stability": "稳定",
    "description": "ScanManualInputWidget 是一个支持扫码和手动输入两种方式录入数据的组件。它主要用于物流场景中的快递单号、运单号等数据的录入。该组件提供了扫码输入、手动输入、白炽灯控制、输入校验以及禁用/启用控制等功能。",
    "preview": "../assets/images/scanmanualinputwidget_preview.png",
    "scenarios": [
      "快递单号录入",
      "运单号扫描",
      "物流信息采集",
      "需要同时支持扫码和手动输入的场景"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show ScanManualInputWidget;\n```",
    "basic_usage": "ScanManualInputWidget(\n  onResultBack: (String code) {\n    print('扫码/输入结果: $code');\n  },\n  onResultCheck: (String code) {\n    return code.length > 5; // 校验输入长度大于5\n  },\n  manualInputTitle: '手动录入运单号',\n  manualInputHintText: '请输入运单号',\n  keyboardType: TextInputType.number,\n  errorTipText: '运单号格式不正确',\n  scanManualInputController: controller,\n)",
    "properties": [
      {
        "name": "onResultBack",
        "description": "结果回调",
        "type": "Function(String)",
        "default": null,
        "required": true
      },
      {
        "name": "onResultCheck",
        "description": "结果校验",
        "type": "Function(String)?",
        "default": "null",
        "required": false
      },
      {
        "name": "manualInputTitle",
        "description": "手动输入的标题",
        "type": "String",
        "default": "'手动录入'",
        "required": false
      },
      {
        "name": "manualInputHintText",
        "description": "手动输入的提示文字",
        "type": "String",
        "default": "'请输入'",
        "required": false
      },
      {
        "name": "keyboardType",
        "description": "输入类型",
        "type": "TextInputType",
        "default": "TextInputType.text",
        "required": false
      },
      {
        "name": "scanManualInputController",
        "description": "组件控制器",
        "type": "ScanManualInputController?",
        "default": "null",
        "required": false
      },
      {
        "name": "errorTipText",
        "description": "错误提示文字",
        "type": "String",
        "default": "'输入内容格式不正确'",
        "required": false
      },
      {
        "name": "showErrorTip",
        "description": "是否显示错误提示",
        "type": "bool",
        "default": "true",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onResultBack",
        "description": "扫码或输入结果回调",
        "params": "String code"
      },
      {
        "name": "onResultCheck",
        "description": "结果校验回调",
        "params": "String code"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "ScanWidget",
        "path": "./ScanWidget.md"
      },
      {
        "name": "TopRoundedCornersInputWidget",
        "path": "./TopRoundedCornersInputWidget.md"
      },
      {
        "name": "扫码控件，ScanManualInputWidget 内部使用",
        "path": null
      },
      {
        "name": "手动输入弹窗组件",
        "path": null
      }
    ],
    "source_path": "lib/widget/input/scan_manual_input_widget.dart",
    "demo_path": "example/lib/pages/businesscomponent/scanmanualinput/yl_scan_manual_input_page.dart",
    "methods": []
  },
  {
    "id": "ImageUploadNewWidget",
    "name": "ImageUploadNewWidget 新一代图片上传组件",
    "category": "业务组件",
    "maintainer": "zhangwanyu12",
    "stability": "不稳定",
    "description": "ImageUploadNewWidget 是一个新一代的图片上传组件，专为 WMS 业务场景设计。它支持水印添加、必传数量限制、自定义行列布局、回调等功能，特别适用于\nWMS 业务单据、货物等多图采集与上传场景。该组件提供了灵活的配置选项，可以满足各种复杂的图片上传需求。",
    "preview": "../assets/images/imageuploadnewwidget_preview.png",
    "scenarios": [
      "WMS 业务单据图片上传",
      "货物多角度拍照上传",
      "需要水印的图片采集",
      "有必传数量要求的图片上传",
      "自定义布局的图片展示"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show ImageUploadNewWidget;\n```",
    "basic_usage": "ImageUploadNewWidget\n(\ntitle: '上传凭证',\nmaxPickSize: 5,\nrequiredCount: 2,\nimageCountPerRow: 4,\ncanSelectAlbum: true,\ndataCallback: (list) {\n// 处理图片回调\nprint('上传的图片数量: ${list?.length}');\n},\n)",
    "properties": [
      {
        "name": "title",
        "description": "组件标题",
        "type": "String",
        "default": "'上传图片'",
        "required": false
      },
      {
        "name": "padding",
        "description": "图片区域内边距",
        "type": "EdgeInsets",
        "default": "EdgeInsets.zero",
        "required": false
      },
      {
        "name": "itemSpacing",
        "description": "图片项间距",
        "type": "double",
        "default": "24",
        "required": false
      },
      {
        "name": "needWaterMark",
        "description": "是否需要添加水印",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "waterMarkText",
        "description": "水印内容",
        "type": "String",
        "default": "''",
        "required": false
      },
      {
        "name": "maxPickSize",
        "description": "最大图片数量",
        "type": "int",
        "default": "3",
        "required": false
      },
      {
        "name": "requiredCount",
        "description": "必填数量",
        "type": "int",
        "default": "1",
        "required": false
      },
      {
        "name": "imageCountPerRow",
        "description": "一行显示的图片数量",
        "type": "int",
        "default": "3",
        "required": false
      },
      {
        "name": "canSelectAlbum",
        "description": "能否从相册选择",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "imageList",
        "description": "图片列表初始值",
        "type": "List?",
        "default": "null",
        "required": false
      },
      {
        "name": "dataCallback",
        "description": "图片数据回调",
        "type": "ImagePathDataCallback?",
        "default": "null",
        "required": false
      },
      {
        "name": "style",
        "description": "标题字体样式",
        "type": "TextStyle?",
        "default": "null",
        "required": false
      },
      {
        "name": "margin",
        "description": "外部边距",
        "type": "EdgeInsets?",
        "default": "null",
        "required": false
      },
      {
        "name": "editable",
        "description": "是否可编辑",
        "type": "bool",
        "default": "true",
        "required": false
      }
    ],
    "events": [
      {
        "name": "dataCallback",
        "description": "图片数据回调",
        "params": "List<ImageBean>?"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "PickupImageWidget",
        "path": "./PickupImageWidget.md"
      },
      {
        "name": "ImagePreviewWidget",
        "path": "./ImagePreviewWidget.md"
      },
      {
        "name": "图片选择器组件，ImageUploadNewWidget 内部使用",
        "path": null
      },
      {
        "name": "图片预览组件，可用于查看上传的图片",
        "path": null
      }
    ],
    "source_path": "lib/widget/image/image_upload_new_widget.dart",
    "demo_path": "example/lib/pages/yl_image_page.dart",
    "methods": []
  },
  {
    "id": "ContactGridWidget",
    "name": "ContactGridWidget 联系人网格组件",
    "category": "业务组件",
    "maintainer": "zhangwanyu12",
    "stability": "稳定",
    "description": "ContactGridWidget 是一个专为 WMS 系统设计的联系人网格组件。它支持设置每行展示数量、自动换行、点击拨号和自定义回调功能。这个组件特别适用于 WMS 系统中的联系人分布展示与操作场景，提供了灵活的布局选项和交互方式。",
    "preview": "../assets/images/contactgridwidget_preview.png",
    "scenarios": [
      "WMS 系统联系人列表展示",
      "物流配送联系人快速拨号",
      "仓库管理员联系方式展示",
      "需要网格布局的联系人界面"
    ],
    "import_code": "```dart\nimport 'package:flutter_widget/flutter_widget.dart' show ContactGridWidget;\n```",
    "basic_usage": "ContactGridWidget(\n  items: [\n    ContactInfoParams(name: \"张三\", phoneNumber: \"13800000000\"),\n    ContactInfoParams(name: \"李四\", phoneNumber: \"13900000000\"),\n  ],\n  crossAxisCount: 3,\n  onItemPressed: (index, item) {\n    print('点击了第 $index 个联系人：${item.name}');\n  },\n)",
    "properties": [
      {
        "name": "items",
        "description": "联系人数据列表",
        "type": "List<ContactInfoParams>",
        "default": null,
        "required": true
      },
      {
        "name": "crossAxisCount",
        "description": "每行展示的联系人数量",
        "type": "int",
        "default": "3",
        "required": false
      },
      {
        "name": "autoSizeCrossAxisCount",
        "description": "是否自动适配列数",
        "type": "bool",
        "default": "false",
        "required": false
      },
      {
        "name": "childAspectRatio",
        "description": "网格项宽高比",
        "type": "double",
        "default": "2",
        "required": false
      },
      {
        "name": "hSpacing",
        "description": "水平元素间距",
        "type": "double",
        "default": "0",
        "required": false
      },
      {
        "name": "vSpacing",
        "description": "垂直元素间距",
        "type": "double",
        "default": "0",
        "required": false
      },
      {
        "name": "textStyle",
        "description": "联系人名称文字样式",
        "type": "TextStyle?",
        "default": "null",
        "required": false
      },
      {
        "name": "onItemPressed",
        "description": "点击联系人回调",
        "type": "Function(int, ContactInfoParams)?",
        "default": "null",
        "required": false
      }
    ],
    "events": [
      {
        "name": "onItemPressed",
        "description": "点击联系人回调",
        "params": "(int index, ContactInfoParams item)"
      }
    ],
    "examples": [],
    "faq": [],
    "related_components": [
      {
        "name": "GridView",
        "path": "https://api.flutter.dev/flutter/widgets/GridView-class.html"
      },
      {
        "name": "ContactInfoParams",
        "path": "./ContactInfoParams.md"
      },
      {
        "name": "Flutter 内置的网格视图组件，ContactGridWidget 内部使用",
        "path": null
      },
      {
        "name": "联系人信息参数类，用于传递联系人数据",
        "path": null
      }
    ],
    "source_path": "lib/widget/contact/contact_grid_widget.dart",
    "demo_path": "example/lib/pages/yl_contact_page.dart",
    "methods": []
  },
  {
    "id": "业务组件索引",
    "name": "业务组件索引",
    "category": "",
    "maintainer": null,
    "stability": null,
    "description": "",
    "preview": null,
    "scenarios": [],
    "import_code": null,
    "basic_usage": null,
    "properties": [],
    "events": [],
    "examples": [],
    "faq": [],
    "related_components": [],
    "source_path": null,
    "demo_path": null,
    "methods": []
  }
]