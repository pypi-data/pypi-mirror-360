[tool.poetry]
name = "mallm"
version = "v1.0.5"
authors = ["GippLab <projects@gipplab.org>"]
description = "Multi-Agent Large Language Models for Collaborative Task-Solving."
readme = "README.md"
license = "Apache-2.0"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]

[project]
name = "mallm"
version = "v1.0.3"

[project.urls]
Homepage = "https://github.com/Multi-Agent-LLMs/mallm"
Issues = "https://github.com/Multi-Agent-LLMs/mallm/issues"

[tool.poetry.scripts]
mallm-run = "mallm.scheduler:main"
mallm-batch = "mallm.scripts.batch_mallm:main"
mallm-evaluate = "mallm.evaluation.evaluator:main"

[tool.poetry.dependencies]
python = "^3.9"
langchain-core = "^0.1.42"
langchain = "^0.1.16"
fire = "^0.6.0"
tqdm = "^4.66.2"
datasets = "^2.18.0"
colorama = "^0.4.6"
cffi = "^1.16.0"
openai = "^1.25.0"
huggingface-hub = "0.23.0"
requests = "^2.32.2"
nltk = "^3.8.1"
rouge-score = "^0.1.2"
bert-score = "^0.3.13"
evaluate = "^0.4.2"
json-repair = "^0.25.1"
rich = "^13.7.1"
contextplus = "^0.1.3"
langdetect = "^1.0.9"
immutabledict = "^4.2.0"
seaborn = "^0.13.2"

[tool.poetry.group.dev.dependencies]
tqdm = "^4.66.2"
pytest = "^8.2.0"
mypy = "^1.10.0"
types-requests = "^2.32.0.20240521"
flake8 = "^7.0.0"
coverage = "^7.5.1"
coverage-badge = "^1.1.1"
setuptools = "^70.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["mallm/"]
python_version = "3.9"
warn_unused_configs = true
exclude = ["mallm/utils/evaluation/", "mallm/evaluation/metrics/ifeval.py"]
follow_imports = "skip"

strict = true
ignore_missing_imports = true
warn_unreachable = true

show_error_context = true
show_error_codes = true
pretty = true

[tool.coverage.run]
branch = true
source = ["mallm"]

[tool.coverage.report]
omit = ["tests/*"]

[tool.flake8]
target-version = "py39"

[tool.ruff]
preview = true
target-version = "py39"
extend-exclude = [
    "data/",
    "mallm/models/Chat.py",
    "notebooks/",
    "test/",
    "update_readme.py",
]
lint.select = [
    "A",    # builtins
    "B",    # bugbear
    "C4",   # comprehensions
    "E",    # pycodestyle
    "F",    # Pyflakes
    "FURB", # refurb
    "I",    # isort
    "INP",  # no-pep420
    "N",    # pep8-naming
    "PERF", # Perflint
    "PIE",  # pie
    "PL",   # Pylint
    "RET",  # return
    "RUF",  # Ruff
    "SIM",  # simplify
    "UP",   # pyupgrade
    "W",    # pycodestyle
]
lint.pyupgrade.keep-runtime-typing = true
lint.ignore = [
    "E203",
    "E501",
    "N806",
    "N999",
    "PERF203",
    "PLR09",
    "PLR2004",
    "PLW15",
    "SIM115",
    "SIM118",
]
