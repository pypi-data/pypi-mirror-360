[tool.ruff]
preview = true
line-length = 120
fix = true
output-format = "grouped"

[tool.ruff.format]
exclude = [".git", ".venv", ".mypy_cache", ".tox", "__pycache__"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_unused_ignores = true

[tool.poetry]
name = "redhat-qe-cloud-tools"
version = "2.0.17"
description = "Python utilities to manage cloud services, such as AWS."
authors = ["Meni Yakove <myakove@gmail.com>", "Ruth Netser <rnetser@gmail.com>"]
readme = "README.md"
repository = "https://github.com/RedHatQE/cloud-tools"
packages = [{ include = "clouds" }]
license = "Apache-2.0"
homepage = "https://github.com/RedHatQE/cloud-tools"
documentation = "https://github.com/RedHatQE/cloud-tools/blob/main/README.md"
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]

[tool.poetry.scripts]
cloud-cli = "clouds.cli.cli:cloud_cli"

[tool.poetry.dependencies]
python = "^3.9"
boto3 = "^1.34.110"
colorlog = "^6.7.0"
python-simple-logger = ">=1.0.5"
click = "^8.1.4"
configparser = "^7.0.0"
google-cloud-compute = "^1.14.1"
azure-mgmt-resource = "^24.0.0"
azure-identity = "^1.15.0"
azure-mgmt-redhatopenshift = "^2.0.0"
azure-mgmt-network = "^29.0.0"
azure-mgmt-subscription = "^3.1.1"
azure-core = "^1.30.1"
openshift-python-utilities = "^6.0.0"
pyhelper-utils = "^1.0.0"

[tool.poetry.urls]
Download = "https://pypi.org/project/redhat-qe-cloud-tools/"
"Bug Tracker" = "https://github.com/RedHatQE/cloud-tools/issues"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.13"

[tool.coverage.run]
omit = ["clouds/tests/*"]

[tool.coverage.report]
fail_under = 20
skip_empty = true

[tool.coverage.html]
directory = ".tests_coverage"



[tool.poetry.group.tests.dependencies]
pytest-mock = "^3.14.0"
pytest = "^8.1.1"
pytest-cov = "^6.0.0"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning.substitution]
files = ["VERSION"]

[tool.poetry-dynamic-versioning]
enable = false
pattern = "((?P<epoch>\\d+)!)?(?P<base>\\d+(\\.\\d+)*)"
