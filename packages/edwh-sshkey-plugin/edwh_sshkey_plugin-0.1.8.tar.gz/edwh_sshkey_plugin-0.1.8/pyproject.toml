[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "edwh-sshkey-plugin"
dynamic = ["version"]
description = 'plugin for adding and removing keys to servers'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Remco Boerma", email = "remco.b@educationwarehouse.nl" },
  { name = "Sven Keimpema", email = "sven.k@educationwarehouse.nl" },
  { name = "Romy SchÃ¶ller", email = "romy.s@educationwarehouse.nl" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ['invoke']

[project.optional-dependencies]
dev = [
    "hatch",
    # "python-semantic-release",
    "black",
]

[project.urls]
Documentation = "https://github.com/educationwarehouse/edwh-sshkey-plugin#readme"
Issues = "https://github.com/educationwarehouse/edwh-sshkey-plugin/issues"
Source = "https://github.com/educationwarehouse/edwh-sshkey-plugin"

# https://packaging.python.org/en/latest/guides/creating-and-discovering-plugins/#using-package-metadata
[project.entry-points."edwh.tasks"]
sshkey = "edwh_sshkey_plugin.fabfile"

[tool.hatch.version]
path = "src/edwh_sshkey_plugin/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/edwh_sshkey_plugin tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py37"]
line-length = 120

[tool.ruff]
target-version = "py37"
line-length = 120

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["edwh_sshkey_plugin"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["edwh_sshkey_plugin", "tests"]
branch = true
parallel = true
omit = [
  "src/edwh_sshkey_plugin/__about__.py",
]

[tool.coverage.paths]
edwh_sshkey_plugin = ["src/edwh_sshkey_plugin", "*/edwh_sshkey_plugin/src/fabfile"]
tests = ["tests", "*/edwh_sshkey_plugin/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.semantic_release]
branch = "master"
version_variable = "src/edwh_sshkey_plugin/__about__.py:__version__"
change_log = "CHANGELOG.md"
upload_to_repository = false
upload_to_release = false
build_command = "hatch build -c"