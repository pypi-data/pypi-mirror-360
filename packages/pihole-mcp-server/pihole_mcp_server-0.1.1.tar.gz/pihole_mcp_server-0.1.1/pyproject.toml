[project]
name = "pihole-mcp-server"
version = "0.1.1"
description = "MCP server for Pi-hole DNS server interactions"
readme = "README.md"
authors = [
    { name = "Brett Bergin", email = "brettberginbc@yahoo.com" }
]
requires-python = ">=3.10"
license = { text = "MIT" }
keywords = ["pihole", "mcp", "dns", "server", "cursor"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
]
dependencies = [
    "click>=8.0.0",
    "requests>=2.28.0",
    "cryptography>=3.4.8",
    "pydantic>=2.0.0",
    "mcp>=1.0.0",
    "rich>=13.0.0",
    "keyring>=24.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "responses>=0.24.0",
    "freezegun>=1.2.0",
    "ruff>=0.1.0",
]

[project.scripts]
pihole-mcp-cli = "pihole_mcp_server.cli:main"
pihole-mcp-server = "pihole_mcp_server.server:main"

[project.urls]
Homepage = "https://github.com/brettbergin/pihole-mcp-server"
Documentation = "https://github.com/brettbergin/pihole-mcp-server#readme"
Repository = "https://github.com/brettbergin/pihole-mcp-server.git"
Issues = "https://github.com/brettbergin/pihole-mcp-server/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pihole_mcp_server"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
line-length = 88
target-version = "py310"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=pihole_mcp_server --cov-report=term-missing --cov-report=html --cov-report=json --cov-report=xml --cov-fail-under=80 --strict-markers"
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
