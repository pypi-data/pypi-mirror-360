{{- $default := list }}
{{- if not $.Values.global.multiSpec }}
{{- $default = list (dict "name" "ds-worker" "affinityLabel" "" "workerResources" (dict "sharedMemory" $.Values.global.resources.datasystemWorker.sharedMemory) "resources" (dict "limits" (dict "cpu" $.Values.global.resources.datasystemWorker.limits.cpu "memory" $.Values.global.resources.datasystemWorker.limits.memory) "requests" (dict "cpu" $.Values.global.resources.datasystemWorker.requests.cpu "memory" $.Values.global.resources.datasystemWorker.requests.memory))) }}
{{- else }}
{{- $default = $.Values.global.multiSpec }}
{{- end }}
{{- range $id, $spec := $default }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: ds-worker
  name: {{ $spec.name }}
  namespace: {{ $.Values.global.namespace }}
  annotations:
  {{ toYaml $.Values.global.annotations | indent 4 }}
spec:
  selector:
    matchLabels:
      app: ds-worker
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ds-worker
    spec:
      {{- if $.Values.global.affinity.nodeSelector }}
      {{- with $.Values.global.affinity.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- if $.Values.global.affinity.nodeAffinity }}
      {{- with $.Values.global.affinity.nodeAffinity }}
      affinity:
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- if ne $spec.name "ds-worker"}}
      {{- $affinitySpec := list (dict "key" $spec.name "operator" "In" "values" (list ($spec.affinityLabel)))}}
      {{- toYaml $affinitySpec | nindent 14 }}
      {{- end }}
      {{- else }}
      {{- if ne $spec.name "ds-worker" }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: {{ $spec.name }}
                    operator: In
                    values: 
                    - {{ $spec.affinityLabel }}
      {{- end }}
      {{- end }}
      {{- if $.Values.global.affinity.tolerations }}
      {{- with $.Values.global.affinity.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      hostNetwork: true
      serviceAccountName: ds-worker
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 1800
      {{- if $.Values.global.enableNonPreemptive }}
      priorityClassName: "ds-high-priority-nonpreempting-{{ $.Values.global.namespace }}"
      {{- else }}
      priorityClassName: system-cluster-critical
      {{- end }}
      containers:
      - name: ds-worker
        args:
        - -worker_address=$(WORKER_IP):$(WORKER_PORT)
        - -master_address=
        - -bind_address=$(BIND_IP):$(WORKER_PORT)
        - -log_dir=$(WORKER_LOG_DIR)
        - -v={{ $.Values.global.log.logLevel }}
        - -log_filename={{ $.Values.global.log.logFilename }}
        - -log_async_buffer_mb={{ $.Values.global.log.logAsyncLogBufferMb }}
        - -max_log_size={{ $.Values.global.log.maxLogSize }}
        - -max_log_file_num={{ $.Values.global.log.maxLogFileNum }}
        - -log_retention_day={{ $.Values.global.log.logRetentionDay }}
        - -minloglevel={{ $.Values.global.log.minLogLevel }}
        - -log_monitor={{ $.Values.global.observability.logMonitor }}
        - -log_monitor_exporter={{ $.Values.global.observability.logMonitorExporter }}
        - -log_monitor_interval_ms={{ $.Values.global.observability.logMonitorIntervalMs }}
        - -enable_meta_replica={{ $.Values.global.metadata.enableMetaReplica }}
        - -log_async={{ $.Values.global.log.logAsync }}
        - -log_compress={{ $.Values.global.log.logCompress }}
        - -logfile_mode=416
        - -shared_memory_size_mb=$(SHARE_MEMORY_SIZE)
        - -rpc_thread_num={{ $.Values.global.rpc.rpcThreadNum }}
        - -oc_thread_num={{ $.Values.global.rpc.ocThreadNum }}
        - -enable_huge_tlb={{ $.Values.global.performance.enableHugeTlb }}
        - -enable_fallocate={{ $.Values.global.performance.enableFallocate }}
        - -eviction_thread_num={{ $.Values.global.spill.evictionThreadNum }}
        - -unix_domain_socket_dir={{ $.Values.global.ipc.udsDir }}
        - -health_check_path=$(HEALTH_CHECK_PATH)
        - -ready_check_path=$(READY_CHECK_PATH)
        - -liveness_check_path=$(LIVENESS_CHECK_PATH)
        - -oc_worker_worker_direct_port={{ $.Values.global.rpc.ocWorkerWorkerDirectPort }}
        - -oc_worker_worker_pool_size={{ $.Values.global.rpc.ocWorkerWorkerPoolSize }}
        - -payload_nocopy_threshold={{ $.Values.global.rpc.payloadNocopyThreshold | int64 }}
        - -max_client_num={{ $.Values.global.resources.datasystemWorker.maxClientNum }}
        - -client_reconnect_wait_s={{ $.Values.global.reliability.clientReconnectWaitS }}
        - -heartbeat_interval_ms={{ $.Values.global.reliability.heartbeatIntervalMs }}
        - -system_access_key={{ $.Values.global.akSk.systemAccessKey }}
        - -system_secret_key={{ $.Values.global.akSk.systemSecretKey }}
        - -tenant_access_key={{ $.Values.global.akSk.tenantAccessKey }}
        - -tenant_secret_key={{ $.Values.global.akSk.tenantSecretKey }}
        - -request_expire_time_s={{ $.Values.global.akSk.requestExpireTimeS }}
        {{- if eq ($.Values.global.l2Cache.l2CacheType) "obs" }}
        - -obs_access_key={{ $.Values.global.l2Cache.obs.obsAccessKey }}
        - -obs_secret_key={{ $.Values.global.l2Cache.obs.obsSecretKey }}
        - -obs_endpoint={{ $.Values.global.l2Cache.obs.obsEndpoint }}
        - -obs_bucket={{ $.Values.global.l2Cache.obs.obsBucket }}
        - -obs_https_enabled={{ $.Values.global.l2Cache.obs.obsHttpsEnabled }}
        {{- end }}
        {{- if eq ($.Values.global.l2Cache.l2CacheType) "sfs" }}
        - -sfs_path=/opt/huawei/data/datasystem/sfs-turbo
        {{- end }}
        - -enable_cloud_service_token_rotation={{ $.Values.global.l2Cache.obs.cloudServiceTokenRotation.enable }}
        - -l2_cache_type={{ $.Values.global.l2Cache.l2CacheType }}
        - -max_rpc_session_num={{ $.Values.global.rpc.maxRpcSessionNum }}
        - -rocksdb_store_dir=/home/sn/datasystem/rocksdb
        - -rocksdb_max_open_file={{ $.Values.global.metadata.rocksdbMaxOpenFile }}
        - -rocksdb_background_threads={{ $.Values.global.metadata.rocksdbBackgroundThreads }}
        - -node_timeout_s={{ $.Values.global.reliability.nodeTimeoutS }}
        - -node_dead_timeout_s={{ $.Values.global.reliability.nodeDeadTimeoutS }}
        - -enable_etcd_auth={{ $.Values.global.etcd.enableEtcdAuth }}
        - -etcd_target_name_override={{ $.Values.global.etcd.etcdTargetNameOverride }}
        {{- if $.Values.global.etcd.enableEtcdAuth }}
        - -etcd_ca={{ $.Values.global.etcd.etcdCertDir }}/ca.crt
        - -etcd_cert={{ $.Values.global.etcd.etcdCertDir }}/client.crt
        - -etcd_key={{ $.Values.global.etcd.etcdCertDir }}/client.key
        - -etcd_passphrase_path={{ $.Values.global.etcd.etcdCertDir }}/passphrase
        {{- end }}
        - -add_node_wait_time_s={{ $.Values.global.reliability.addNodeWaitTimeS }}
        - -auto_del_dead_node={{ $.Values.global.reliability.autoDelDeadNode }}
        - -spill_directory={{ $.Values.global.spill.spillDirectory }}
        - -spill_size_limit={{ $.Values.global.spill.spillSizeLimit }}
        - -spill_thread_num={{ $.Values.global.spill.spillThreadNum }}
        - -spill_file_max_size_mb={{ $.Values.global.spill.spillFileMaxSizeMb }}
        - -spill_file_open_limit={{ $.Values.global.spill.spillFileOpenLimit }}
        - -spill_enable_readahead={{ $.Values.global.spill.spillEnableReadahead }}
        - -data_migrate_rate_limit_mb={{ $.Values.global.gracefulShutdown.dataMigrateRateLimitMb }}
        - -enable_curve_zmq={{ $.Values.global.rpc.enableCurveZmq }}
        - -ipc_through_shared_memory={{ $.Values.global.ipc.ipcThroughSharedMemory }}
        - -curve_key_dir=$(CURVE_KEY_DIR)
        - -zmq_server_io_context={{ $.Values.global.rpc.zmqServerIoContext }}
        - -zmq_client_io_context={{ $.Values.global.rpc.zmqClientIoContext }}
        - -zmq_chunk_sz={{ $.Values.global.rpc.zmqChunkSz | int64 }}
        - -etcd_address={{ $.Values.global.etcd.etcdAddress }}
        - -az_name={{ $.Values.global.azName }}
        - -other_az_names={{ $.Values.global.crossAz.otherAzNames }}
        - -async_delete={{ $.Values.global.performance.asyncDelete}}
        - -etcd_meta_pool_size={{ $.Values.global.etcd.etcdMetaPoolSize }}
        - -arena_per_tenant={{ $.Values.global.performance.arenaPerTenant }}
        - -memory_reclamation_time_second={{ $.Values.global.performance.memoryReclamationTimeSecond }}
        - -monitor_config_file=/home/sn/config/datasystem.config
        - -client_dead_timeout_s={{ $.Values.global.reliability.clientDeadTimeoutS }}
        - -enable_thp={{ $.Values.global.performance.enableThp }}
        - -cross_az_get_data_from_worker={{ $.Values.global.crossAz.crossAzGetDataFromWorker }}
        - -cross_az_get_meta_from_worker={{ $.Values.global.crossAz.crossAzGetMetaFromWorker }}
        - -enable_reconciliation={{ $.Values.global.reliability.enableReconciliation }}
        - -enable_hash_ring_self_healing={{ $.Values.global.reliability.enableHashRingSelfHealing }}
        - -liveness_probe_timeout_s={{ $.Values.global.reliability.livenessProbeTimeoutS }}
        - -check_async_queue_empty_time_s={{ $.Values.global.gracefulShutdown.checkAsyncQueueEmptyTimeS }}
        - -enable_lossless_data_exit_mode={{ $.Values.global.gracefulShutdown.enableLosslessDataExitMode }}
        command:
        - /home/sn/worker_entry.sh
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        startupProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - /home/sn/file_check.sh startupProbe $(LIVENESS_CHECK_PATH)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          {{- if gt (div (int $.Values.global.reliability.nodeDeadTimeoutS) 5) 12 }}
          failureThreshold: {{ div (int $.Values.global.reliability.nodeDeadTimeoutS) 5 }}
          {{- else}}
          failureThreshold: 12
          {{- end }}
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - /home/sn/file_check.sh readinessProbe $(HEALTH_CHECK_PATH) $(READY_CHECK_PATH)
          initialDelaySeconds: 1
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - /home/sn/liveness_check.sh -f $(LIVENESS_CHECK_PATH) -t {{ $.Values.global.reliability.livenessProbeTimeoutS }}
          initialDelaySeconds: 1
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
          {{- if gt (int $.Values.global.gracefulShutdown.livenessProbeTerminationGracePeriodSeconds) 0 }}
          terminationGracePeriodSeconds: {{ $.Values.global.gracefulShutdown.livenessProbeTerminationGracePeriodSeconds }}
          {{- end }}
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_ID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: WORKER_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: BIND_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: WORKER_PORT
            value: "{{ $.Values.global.port.datasystemWorker }}"
          - name: WORKER_LOG_DIR
            value: "/home/sn/datasystem/logs/worker"
          - name: MASTER_ROCKSDB_STORE_DIR
            value: "/home/sn/datasystem/rocksdb"
          - name: SHARE_MEMORY_SIZE
            value: "{{ $spec.workerResources.sharedMemory }}"
          - name: CURVE_KEY_DIR
            value: {{ $.Values.global.rpc.curveKeyDir }}
          - name: ENABLE_CURVE_ZMQ
            value: "{{ $.Values.global.rpc.enableCurveZmq }}"
          - name: ETCD_CERT_DIR
            value: {{ $.Values.global.etcd.etcdCertDir }}
          - name: HEALTH_CHECK_PATH
            value: "/home/sn/datasystem/health/healthy"
          - name: READY_CHECK_PATH
            value: "/home/sn/datasystem/health/ready"
          - name: LIVENESS_CHECK_PATH
            value: "/home/sn/datasystem/health/liveness"
          - name: STATUS_FILE_PATH
            value: "/home/sn/datasystem/logs/worker/worker-status"
          - name: SCALE_IN_TAINT
            value: "{{ $.Values.global.gracefulShutdown.scaleInTaint }}"
          - name: NAMESPACE
            value: "{{ $.Values.global.namespace }}"
          {{- if $.Values.global.l2Cache.obs.cloudServiceTokenRotation.enable }}
          - name: TOKEN_ROTATION_CONFIG
            value: |-
              {
                "projectID": "{{ $.Values.global.l2Cache.obs.cloudServiceTokenRotation.projectId }}",
                "regionID": "{{ $.Values.global.l2Cache.obs.cloudServiceTokenRotation.regionId }}",
                "identityProvider": "{{ $.Values.global.l2Cache.obs.cloudServiceTokenRotation.identityProvider }}",
                "iamHostName": "{{ $.Values.global.l2Cache.obs.cloudServiceTokenRotation.iamHostName }}",
                "tokenTTLSeconds": 86400,
                "enableTokenByAgency": {{ $.Values.global.l2Cache.obs.cloudServiceTokenRotation.enableTokenByAgency }},
                "tokenAgencyName": "{{ $.Values.global.l2Cache.obs.cloudServiceTokenRotation.tokenAgencyName }}",
                "tokenAgencyDomain": "{{ $.Values.global.l2Cache.obs.cloudServiceTokenRotation.tokenAgencyDomain }}"
              }
          {{- end }}
        {{- if (eq $.Values.global.imageRegistry "") }}
        image: "{{ $.Values.global.images.datasystem }}"
        {{- else }}
        image: "{{ $.Values.global.imageRegistry | trimSuffix "/" }}/{{ $.Values.global.images.datasystem }}"
        {{- end }}
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
                - /bin/bash
                - -c
                - /home/sn/uninstall.sh -f ${WORKER_LOG_DIR}/worker-status -t {{ $.Values.global.reliability.livenessProbeTimeoutS }}
        ports:
        - containerPort: {{ $.Values.global.port.datasystemWorker }}
          protocol: TCP
        resources:
          limits:
            cpu: {{ $spec.resources.limits.cpu }}
            memory: {{ $spec.resources.limits.memory }}
          requests:
            cpu: {{ $spec.resources.requests.cpu }}
            memory: {{ $spec.resources.requests.memory }}
        volumeMounts:
        {{- if $.Values.global.rpc.enableCurveZmq }}
        - mountPath: {{ $.Values.global.rpc.curveKeyDir }}
          name: secret-dir
        {{- end }}
        {{- if $.Values.global.etcd.enableEtcdAuth }}
        - mountPath: {{ $.Values.global.etcd.etcdCertDir }}
          name: etcd-cert-empty-dir
        {{- end }}
        - mountPath: /dev/shm
          name: sharememory
        - mountPath: /home/sn/datasystem/logs
          name: logs
        - mountPath: /home/sn/datasystem/rocksdb
          name: rocksdb
        - mountPath: /etc/localtime
          name: time-zone
          readOnly: true
        - mountPath: {{ $.Values.global.ipc.udsDir }}
          name: sock
        {{- range $index, $item := $.Values.global.mount }}
        {{- if and $item.hostPath $item.mountPath }}
        - mountPath: {{ $item.mountPath }}
          name: {{ $index | printf "mount-path-%d" }}
        {{- end }}
        {{- end }}
        - mountPath: /home/sn/config
          name: datasystem-config
        {{- if $.Values.global.l2Cache.obs.cloudServiceTokenRotation.enable }}
        - mountPath: /var/run/secrets/tokens
          name: csms-token
          readOnly: true
        {{- end }}
        {{- if eq ($.Values.global.l2Cache.l2CacheType) "sfs" }}
        - name: pvc-sfsturbo
          readOnly: false
          mountPath: /opt/huawei/data/datasystem/sfs-turbo
          subPath: {{ $.Values.global.l2Cache.sfsTurbo.subPath }}
        {{- end }}
      restartPolicy: Always
      securityContext:
        fsGroup: {{ $.Values.global.fsGid }}
      imagePullSecrets:
        - name: auth
        - name: auth-etcd
        - name: secret-key
        - name: default-secret
      initContainers:
      - name: worker-init
        {{- if (eq $.Values.global.imageRegistry "") }}
        image: "{{ $.Values.global.images.datasystem }}"
        {{- else }}
        image: "{{ $.Values.global.imageRegistry | trimSuffix "/" }}/{{ $.Values.global.images.datasystem }}"
        {{- end }}
        securityContext:
          runAsUser: 0
        command: ["/bin/sh","-c"]
        args:
          - >
            {{- if $.Values.global.rpc.enableCurveZmq }}
            cp -rH /home/sn/curve/* {{ $.Values.global.rpc.curveKeyDir }} &&
            chmod 700 {{ $.Values.global.rpc.curveKeyDir }} &&
            chown -R -h sn:sn {{ $.Values.global.rcp.curveKeyDir }} &&
            {{- end }}
            {{- if $.Values.global.etcd.enableEtcdAuth }}
            cp -rH /home/sn/etcd-cert/* {{ $.Values.global.etcd.etcdCertDir }} &&
            chmod 700 {{ $.Values.global.etcd.etcdCertDir }} &&
            chown -R -h sn:sn {{ $.Values.global.etcd.etcdCertDir }} &&
            chmod 400 {{ $.Values.global.etcd.etcdCertDir }}/ca.crt &&
            chmod 400 {{ $.Values.global.etcd.etcdCertDir }}/client.crt &&
            chmod 400 {{ $.Values.global.etcd.etcdCertDir }}/client.key &&
            chmod 400 {{ $.Values.global.etcd.etcdCertDir }}/passphrase &&
            {{- end }}
            {{- range $.Values.global.mount }}
            {{- if and .hostPath .mountPath }}
            chmod 750 {{ .mountPath }} &&
            chown -R -h sn:sn {{ .mountPath }} &&
            {{- end }}
            {{- end }}
            chmod 700 /home/sn/datasystem/logs &&
            chmod 750 {{ $.Values.global.ipc.udsDir }} &&
            chown -R -h sn:sn /home/sn/datasystem/logs &&
            chown -R -h sn:sn {{ $.Values.global.ipc.udsDir }} &&
            chmod 700 /home/sn/datasystem/rocksdb &&
            chown -R -h sn:sn /home/sn/datasystem/rocksdb
        resources:
          limits:
            cpu: 150m
            memory: 200Mi
          requests:
            cpu: 150m
            memory: 200Mi
        volumeMounts:
        {{- if $.Values.global.rpc.enableCurveZmq  }}
        - mountPath: {{ $.Values.global.rpc.curveKeyDir }}
          name: secret-dir
        - mountPath: "/home/sn/curve"
          name: curve-key-worker
        {{- end }}
        {{- if $.Values.global.etcd.enableEtcdAuth}}
        - mountPath: {{ $.Values.global.etcd.etcdCertDir }}
          name: etcd-cert-empty-dir
        - mountPath: "/home/sn/etcd-cert"
          name: etcd-cert
        {{- end }}
        - mountPath: /home/sn/datasystem/logs
          name: logs
        - mountPath: {{ $.Values.global.ipc.udsDir }}
          name: sock
        {{- range $index, $item := $.Values.global.mount }}
        {{- if and $item.hostPath $item.mountPath }}
        - mountPath: {{ $item.mountPath }}
          name: {{ $index | printf "mount-path-%d" }}
        {{- end }}
        {{- end }}
        - mountPath: /home/sn/datasystem/rocksdb
          name: rocksdb
      volumes:
        {{- if $.Values.global.rpc.enableCurveZmq }}
        - emptyDir: {}
          name: secret-dir
        - name: curve-key-worker
          secret:
            secretName: auth
            defaultMode: 0400
            items:
              - key: worker.key
                path: worker.key
              - key: worker.secret_key
                path: worker.secret_key
              - key: client.key
                path: worker_authorized_clients/client.key
              - key: worker.key
                path: worker_authorized_clients/worker.key
        {{- end }}
        {{- if $.Values.global.etcd.enableEtcdAuth }}
        - emptyDir: {}
          name: etcd-cert-empty-dir
        - name: etcd-cert
          secret:
            secretName: auth-etcd
            defaultMode: 0400
            items:
              - key: ca.crt
                path: ca.crt
              - key: client.crt
                path: client.crt
              - key: client.key
                path: client.key
              - key: passphrase
                path: passphrase
        {{- end }}
        - name: time-zone
          hostPath:
            path: /etc/localtime
        - name: sharememory
          hostPath:
            path: /dev/shm
            type: DirectoryOrCreate
        - name: logs
          hostPath:
            path: {{ $.Values.global.log.logDir }}
            type: DirectoryOrCreate
        - name: sock
          hostPath:
            path: {{ $.Values.global.ipc.udsDir }}
            type: DirectoryOrCreate
        {{- range $index, $item := $.Values.global.mount }}
        {{- if and $item.hostPath $item.mountPath }}
        - name: mount-path-{{ $index }}
          hostPath:
            path: {{ $item.hostPath }}
            type: DirectoryOrCreate
        {{- end }}
        {{- end }}
        - name: rocksdb
          hostPath:
            path: {{ $.Values.global.metadata.rocksdbStoreDir }}
            type: DirectoryOrCreate
        - name: datasystem-config
          configMap:
            name: datasystem-configmap
            defaultMode: 0400
            items:
              - key: datasystem.config
                path: datasystem.config
        {{- end }}
        {{- if $.Values.global.l2Cache.obs.cloudServiceTokenRotation.enable }}
        - name: csms-token
          projected:
            defaultMode: 0420
            sources:
              - serviceAccountToken:
                  audience: "{{ $.Values.global.l2Cache.obs.cloudServiceTokenRotation.iamHostName }}"
                  expirationSeconds: 86400
                  path: csms-token
        {{- end }}
        {{- if eq ($.Values.global.l2Cache.l2CacheType) "sfs" }}
        - name: pvc-sfsturbo
          persistentVolumeClaim:
            claimName: pvc-sfsturbo
        {{- end }}