[build-system]
requires = ["setuptools>=42", "setuptools-scm>=6.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "openwebui_client/_version.py"

[project]
name = "openwebui-client"
version = "0.2.0"
description = "A client library for the OpenWebUI API, compatible with OpenAI Python SDK"
authors = [
    {name = "Mark Durepos", email = "marc@bemade.org"}
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "openai>=1.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.0.0",

    # Code style and formatting
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "flake8-bugbear>=24.0.0",
    "pre-commit>=3.0.0",


    # Build and release
    "build>=0.10.0",
    "twine>=4.0.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.0.0",
]

docs = [
    "sphinx>=8.2.0",
    "sphinx-rtd-theme>=3.0.0",
    "sphinx-autodoc-typehints>=3.0.0",
    "sphinx-copybutton>=0.5.0",
    "sphinx-autobuild>=2023.0.0",
    "myst-parser>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/bemade/openwebui-client"
Documentation = "https://bemade.github.io/openwebui-client/"
BugTracker = "https://github.com/bemade/openwebui-client/issues"
Changelog = "https://bemade.github.io/openwebui-client/CHANGELOG/"

[project.readme]
file = "README.md"
content-type = "text/markdown"


[tool.setuptools]
packages = ["openwebui_client"]

[tool.setuptools.package-data]
"openwebui_client" = ["py.typed"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
no_implicit_optional = true

# Exclude generated _version.py and its type stub
exclude = "^openwebui_client/_version\\.pyi?$"

# Ignore missing imports for specific modules
[[tool.mypy.overrides]]
module = [
    "openai",
    "openai.*",
    "openai.types",
    "openai.types.*",
    "setuptools",
    "setuptools.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "openwebui_client._version"
ignore_missing_imports = true

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
# Enable common rules
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "RUF", # ruff-specific rules
]

# Ignore rules that conflict with Black or are too strict
ignore = [
    "E203",  # Whitespace before ':' (handled by Black)
    "E501",  # Line too long (handled by line-length)
]

# Per-file ignores
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "D104"]  # Imported but unused, Missing docstring in public package
"tests/*.py" = ["S101", "S603", "S607", "D", "PLR2004"]  # Test-specific ignores

[tool.ruff.lint.isort]
known-first-party = ["openwebui_client"]
combine-as-imports = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v"
filterwarnings = [
    "error",
    "ignore:.*U.*mode is deprecated:DeprecationWarning",
]
