# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from ..types.limit import Limit
from ..types.page_token import PageToken
from .raw_client import AsyncRawCredentialsClient, RawCredentialsClient
from .types.create_credential_response import CreateCredentialResponse
from .types.credential import Credential
from .types.credential_id import CredentialId
from .types.list_credentials_response import ListCredentialsResponse


class CredentialsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawCredentialsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawCredentialsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawCredentialsClient
        """
        return self._raw_client

    def list(
        self,
        *,
        limit: typing.Optional[Limit] = None,
        page_token: typing.Optional[PageToken] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> ListCredentialsResponse:
        """
        Parameters
        ----------
        limit : typing.Optional[Limit]

        page_token : typing.Optional[PageToken]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        ListCredentialsResponse

        Examples
        --------
        from agentmail import AgentMail
        client = AgentMail(api_key="YOUR_API_KEY", )
        client.credentials.list()
        """
        _response = self._raw_client.list(limit=limit, page_token=page_token, request_options=request_options)
        return _response.data

    def get(
        self, credential_id: CredentialId, *, request_options: typing.Optional[RequestOptions] = None
    ) -> Credential:
        """
        Parameters
        ----------
        credential_id : CredentialId

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        Credential

        Examples
        --------
        from agentmail import AgentMail
        client = AgentMail(api_key="YOUR_API_KEY", )
        client.credentials.get(credential_id='credential_id', )
        """
        _response = self._raw_client.get(credential_id, request_options=request_options)
        return _response.data

    def create(self, *, request_options: typing.Optional[RequestOptions] = None) -> CreateCredentialResponse:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        CreateCredentialResponse

        Examples
        --------
        from agentmail import AgentMail
        client = AgentMail(api_key="YOUR_API_KEY", )
        client.credentials.create()
        """
        _response = self._raw_client.create(request_options=request_options)
        return _response.data

    def delete(self, credential_id: CredentialId, *, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Parameters
        ----------
        credential_id : CredentialId

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from agentmail import AgentMail
        client = AgentMail(api_key="YOUR_API_KEY", )
        client.credentials.delete(credential_id='credential_id', )
        """
        _response = self._raw_client.delete(credential_id, request_options=request_options)
        return _response.data


class AsyncCredentialsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawCredentialsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawCredentialsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawCredentialsClient
        """
        return self._raw_client

    async def list(
        self,
        *,
        limit: typing.Optional[Limit] = None,
        page_token: typing.Optional[PageToken] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> ListCredentialsResponse:
        """
        Parameters
        ----------
        limit : typing.Optional[Limit]

        page_token : typing.Optional[PageToken]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        ListCredentialsResponse

        Examples
        --------
        from agentmail import AsyncAgentMail
        import asyncio
        client = AsyncAgentMail(api_key="YOUR_API_KEY", )
        async def main() -> None:
            await client.credentials.list()
        asyncio.run(main())
        """
        _response = await self._raw_client.list(limit=limit, page_token=page_token, request_options=request_options)
        return _response.data

    async def get(
        self, credential_id: CredentialId, *, request_options: typing.Optional[RequestOptions] = None
    ) -> Credential:
        """
        Parameters
        ----------
        credential_id : CredentialId

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        Credential

        Examples
        --------
        from agentmail import AsyncAgentMail
        import asyncio
        client = AsyncAgentMail(api_key="YOUR_API_KEY", )
        async def main() -> None:
            await client.credentials.get(credential_id='credential_id', )
        asyncio.run(main())
        """
        _response = await self._raw_client.get(credential_id, request_options=request_options)
        return _response.data

    async def create(self, *, request_options: typing.Optional[RequestOptions] = None) -> CreateCredentialResponse:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        CreateCredentialResponse

        Examples
        --------
        from agentmail import AsyncAgentMail
        import asyncio
        client = AsyncAgentMail(api_key="YOUR_API_KEY", )
        async def main() -> None:
            await client.credentials.create()
        asyncio.run(main())
        """
        _response = await self._raw_client.create(request_options=request_options)
        return _response.data

    async def delete(
        self, credential_id: CredentialId, *, request_options: typing.Optional[RequestOptions] = None
    ) -> None:
        """
        Parameters
        ----------
        credential_id : CredentialId

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from agentmail import AsyncAgentMail
        import asyncio
        client = AsyncAgentMail(api_key="YOUR_API_KEY", )
        async def main() -> None:
            await client.credentials.delete(credential_id='credential_id', )
        asyncio.run(main())
        """
        _response = await self._raw_client.delete(credential_id, request_options=request_options)
        return _response.data
