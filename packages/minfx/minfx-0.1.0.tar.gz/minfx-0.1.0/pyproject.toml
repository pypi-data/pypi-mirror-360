[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "minfx"
dynamic = ["version"]
description = "A minimal Python package for the minfx project"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Minfx Team", email = "team@minfx.ai" }]
maintainers = [{ name = "Minfx Team", email = "team@minfx.ai" }]
keywords = ["minfx"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]

[project.urls]
Homepage = "https://github.com/minfx-ai/minfx"
Repository = "https://github.com/minfx-ai/minfx"
"Bug Reports" = "https://github.com/minfx-ai/minfx/issues"

[tool.setuptools.dynamic]
version = { attr = "minfx.__version__" }

[tool.black]
line-length = 120
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
