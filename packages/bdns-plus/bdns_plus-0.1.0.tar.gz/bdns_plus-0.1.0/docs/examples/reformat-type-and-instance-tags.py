# %% [markdown]
# ---
# title: reformat-type-and-instance-tags
# execute:
#   echo: false
# format:
#   html:
#     code-fold: true
# ---

# %% [markdown]
"""
It is possible to reformat how type and instance tags are generated by defining a custom tag definition.
This can be set for a project configuration, so all type_tags and instance tags are follow this definition.
"""

# %%
LEVEL_MIN, LEVEL_MAX, NO_VOLUMES = -1, 3, 2
from bdns_plus.docs import (
    display_config_user_and_generated,
    display_tag_data,
    gen_project_equipment_data,
)
from bdns_plus.gen_idata import gen_config_iref
from bdns_plus.models import Config, Volume

tag_def = {
    "name": "Instance Tag, delimit with '.' and zfill level",
    "description": "a example tag definition for ventilation instances",
    "fields": [
        {
            "field_name": "abbreviation",
            "field_aliases": [
                "Abbreviation",
            ],
            "allow_none": False,
            "prefix": "",
            "suffix": "",
            "zfill": None,
            "regex": None,
            "validator": None,
        },
        {
            "field_name": "volume",
            "field_aliases": [
                "Volume",
            ],
            "allow_none": False,
            "prefix": ".",
            "suffix": "",
            "zfill": None,
            "regex": None,
            "validator": None,
        },
        {
            "field_name": "level",
            "field_aliases": [
                "Level",
            ],
            "allow_none": False,
            "prefix": ".",
            "suffix": "",
            "zfill": 2,
            "regex": None,
            "validator": None,
        },
        {
            "field_name": "level_iref",
            "field_aliases": [
                "VolumeLevelInstance",
            ],
            "allow_none": False,
            "prefix": ".",
            "suffix": "",
            "zfill": 2,
            "regex": None,
            "validator": None,
        },
    ],
}


user_input_config = {
    "i_tag": tag_def,
}

config = Config(**user_input_config)
display_config_user_and_generated(user_input_config, config)


# %%
config_iref = gen_config_iref(level_min=LEVEL_MIN, level_max=LEVEL_MAX, no_volumes=NO_VOLUMES)
config = Config(**config_iref.model_dump() | user_input_config)
df = gen_project_equipment_data(config=config)
display_tag_data(df)
