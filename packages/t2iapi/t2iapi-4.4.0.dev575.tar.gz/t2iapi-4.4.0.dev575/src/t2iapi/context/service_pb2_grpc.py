# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from t2iapi import basic_requests_pb2 as t2iapi_dot_basic__requests__pb2
from t2iapi import basic_responses_pb2 as t2iapi_dot_basic__responses__pb2
from t2iapi.context import context_requests_pb2 as t2iapi_dot_context_dot_context__requests__pb2
from t2iapi.context import context_responses_pb2 as t2iapi_dot_context_dot_context__responses__pb2


class ContextServiceStub(object):
    """
    Service to handle context manipulations.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetLocationDetail = channel.unary_unary(
                '/t2iapi.context.ContextService/SetLocationDetail',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.SetLocationDetailRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.SetContextStateAssociation = channel.unary_unary(
                '/t2iapi.context.ContextService/SetContextStateAssociation',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.SetContextStateAssociationRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.CreateContextStateWithAssociation = channel.unary_unary(
                '/t2iapi.context.ContextService/CreateContextStateWithAssociation',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
                )
        self.CreateContextStateWithAssociationAndValidators = channel.unary_unary(
                '/t2iapi.context.ContextService/CreateContextStateWithAssociationAndValidators',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationAndValidatorsRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
                )
        self.CreateContextStateWithAssocIdentificationAndValidator = channel.unary_unary(
                '/t2iapi.context.ContextService/CreateContextStateWithAssocIdentificationAndValidator',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.TransitionFromCreateStateWithIdentificationToRemoveIdentification = channel.unary_unary(
                '/t2iapi.context.ContextService/TransitionFromCreateStateWithIdentificationToRemoveIdentification',
                request_serializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
                )
        self.TransitionFromCreateStateWithIdentificationToChangeIdentification = channel.unary_unary(
                '/t2iapi.context.ContextService/TransitionFromCreateStateWithIdentificationToChangeIdentification',
                request_serializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
                )
        self.CreateContextStateWithAssocAndSpecificValidator = channel.unary_unary(
                '/t2iapi.context.ContextService/CreateContextStateWithAssocAndSpecificValidator',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssocAndSpecificValidatorRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
                )
        self.CreateContextStateWithAssocAndBindingMdibVersion = channel.unary_unary(
                '/t2iapi.context.ContextService/CreateContextStateWithAssocAndBindingMdibVersion',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssocAndBindingMdibVersionRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
                )
        self.CreateContextStateWithAssocAndUnbindingMdibVersion = channel.unary_unary(
                '/t2iapi.context.ContextService/CreateContextStateWithAssocAndUnbindingMdibVersion',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssocAndUnbindingMdibVersionRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
                )
        self.CreateNeonatalPatientWithAssociationAndMothersIdentification = channel.unary_unary(
                '/t2iapi.context.ContextService/CreateNeonatalPatientWithAssociationAndMothersIdentification',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
                )
        self.AssociatePatient = channel.unary_unary(
                '/t2iapi.context.ContextService/AssociatePatient',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.AssociatePatientRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.EnsembleContextIndicateMembership = channel.unary_unary(
                '/t2iapi.context.ContextService/EnsembleContextIndicateMembership',
                request_serializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.EnsembleContextIndicateMembershipWithIdentification = channel.unary_unary(
                '/t2iapi.context.ContextService/EnsembleContextIndicateMembershipWithIdentification',
                request_serializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.EnsembleContextIndicateMembershipWithIdentificationResponse.FromString,
                )
        self.GetEnsembleIds = channel.unary_unary(
                '/t2iapi.context.ContextService/GetEnsembleIds',
                request_serializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.GetEnsembleIdsResponse.FromString,
                )
        self.IndicateMembershipInEnsembleByEnsembleId = channel.unary_unary(
                '/t2iapi.context.ContextService/IndicateMembershipInEnsembleByEnsembleId',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.EnsembleIdRequest.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.IndicateMembershipInEnsembleByEnsembleIdResponse.FromString,
                )
        self.EndMembershipInEnsembleByEnsembleId = channel.unary_unary(
                '/t2iapi.context.ContextService/EndMembershipInEnsembleByEnsembleId',
                request_serializer=t2iapi_dot_context_dot_context__requests__pb2.EnsembleIdRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.AssociatePatientWithAutoGeneratedPatientId = channel.unary_unary(
                '/t2iapi.context.ContextService/AssociatePatientWithAutoGeneratedPatientId',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
                )
        self.TemporarilyAssociateLocationWithNewIdentifier = channel.unary_unary(
                '/t2iapi.context.ContextService/TemporarilyAssociateLocationWithNewIdentifier',
                request_serializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.TemporarilyAssociatePatientWithNewIdentifier = channel.unary_unary(
                '/t2iapi.context.ContextService/TemporarilyAssociatePatientWithNewIdentifier',
                request_serializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )


class ContextServiceServicer(object):
    """
    Service to handle context manipulations.
    """

    def SetLocationDetail(self, request, context):
        """
        Use the given LocationDetail in a currently associated LocationContextState or associate a new LocationContextState
        with the LocationDetail.
        The goal of this rpc is to have an associated LocationContextState, that contains the given LocationDetail.
        This can for example be achieved by changing the location of the device in its settings UI.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetContextStateAssociation(self, request, context):
        """
        Set the ContextAssociation of the target ContextState to the given value.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContextStateWithAssociation(self, request, context):
        """
        Create or adapt a ContextState instance with the given ContextAssociation value for the given descriptor handle.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContextStateWithAssociationAndValidators(self, request, context):
        """
        Create or adapt a pm:AbstractContextState instance with the given @ContextAssociation value for the given descriptor handle
        and provide at least the number of pm:Validator elements for this ContextState.
        If the number of pm:Validator elements is zero, zero pm:Validator elements shall be provided.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContextStateWithAssocIdentificationAndValidator(self, request, context):
        """
        Create or adapt a ContextState instance with the given ContextAssociation value for the given descriptor handle
        and provide at least one Identification and Validator for this ContextState.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransitionFromCreateStateWithIdentificationToRemoveIdentification(self, request, context):
        """
        For the Context with the provided descriptor handle perform the following transition:
        - associate a pm:AbstractContextState instance with at least one unique pm:Identification element
        for the Context with the given descriptor handle
        - remove at least one pm:Identification element for the previously associated pm:AbstractContextState.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransitionFromCreateStateWithIdentificationToChangeIdentification(self, request, context):
        """
        For the Context with the provided descriptor handle perform the following transition:
        - associate a pm:AbstractContextState instance with at least one unique pm:Identification element
        for the Context with the given descriptor handle
        - change at least one already present pm:Identification element for the previously associated pm:AbstractContextState.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContextStateWithAssocAndSpecificValidator(self, request, context):
        """
        Create or adapt a ContextState instance with the given ContextAssociation value for the given descriptor handle,
        confirm by requested validator type.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContextStateWithAssocAndBindingMdibVersion(self, request, context):
        """
        Create or adapt a ContextState instance with the given ContextAssociation value for the given descriptor handle,
        and assign a BindingMdibVersion.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContextStateWithAssocAndUnbindingMdibVersion(self, request, context):
        """
        Create or adapt a ContextState instance with the given ContextAssociation value for the given descriptor handle,
        and assign a UnbindingMdibVersion.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNeonatalPatientWithAssociationAndMothersIdentification(self, request, context):
        """
        Create or adapt neonatal patient with a given type of association and
        including the mothers identification.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssociatePatient(self, request, context):
        """
        Create or adapt a PatientContextState with CoreData/PatientType having the requested patient type.
        The PatientContextState/@ContextAssociation shall be "Associated".
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnsembleContextIndicateMembership(self, request, context):
        """
        Indicate membership in an SDC PARTICIPANT ENSEMBLE using an ensemble context, indicated by its descriptor handle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnsembleContextIndicateMembershipWithIdentification(self, request, context):
        """
        Indicate membership in an SDC PARTICIPANT ENSEMBLE using ensemble context state(s) that have the provided descriptor
        handle and return a list of pm:Identification elements which identify the ensemble context state(s).
        If already one or more pm:EnsembleContextState(s) indicate the membership, it is not needed to create a new
        pm:EnsembleContextState(s). In this case it is sufficient to only return the BasicResponse and the pm:Identification
        elements.
        The state shall be persistent until a next manipulation call. If the device is not able to maintain the static state,
        it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEnsembleIds(self, request, context):
        """
        Get all ensemble-ids for a provided pm:EnsembleContextDescriptor and return them.

        The ensemble-id is an identifier specified by the USER that uniquely refers to an SDC PARTICIPANT ENSEMBLE. The list
        shall contain all ensemble-ids needed to cover each SDC PARTICIPANT ENSEMBLE membership can be indicated in by a
        pm:EnsembleContextState with @ContextAssociation = 'Assoc' of the provided pm:EnsembleContextDescriptor.
        The ensemble-ids are valid until the next call of this manipulation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndicateMembershipInEnsembleByEnsembleId(self, request, context):
        """
        Indicate membership in an SDC PARTICIPANT ENSEMBLE for a provided pm:EnsembleContextDescriptor and a provided
        ensemble-id by creating or adapting all needed pm:EnsembleContextStates such that their @ContextAssociation is
        "Assoc". Return a list that contains only the @Handles of the associated pm:EnsembleContextStates that indicate
        membership in the SDC PARTICIPANT ENSEMBLE referred by the provided ensemble-id.

        The ensemble-id is an identifier specified by the USER that uniquely refers to an SDC PARTICIPANT ENSEMBLE.
        To clarify which pm:EnsembleContextStates are needed and which @Handles shall be returned, four examples are given.

        Example 1: treatment session
        The fact that a POC MEDICAL DEVICE is currently working in a (temporal) logical group based on a treatment session
        may be expressed by the states of a pm:EnsembleContextDescriptor. If each of its pm:EnsembleContextStates describes
        a step in this treatment session, then the manipulation returns only the state handle of the pm:EnsembleContextState
        with @ContextAssociation = 'Assoc' that indicates membership in the logical group resp. SDC PARTICIPANT ENSEMBLE.
        The provided ensemble-id refers to this logical group resp. SDC PARTICIPANT ENSEMBLE. In this scenario there shall
        be only one pm:EnsembleContextState with @ContextAssociation = 'Assoc' at a time for the provided
        pm:EnsembleContextDescriptor.

        Example 2: location inferring
        If a pm:EnsembleContextDescriptor has multiple pm:EnsembleContextStates whereby each describes a membership of a
        location-inferred SDC PARTICIPANT ENSEMBLE if associated. The manipulation shall return the state handle of the
        pm:EnsembleContextState with @ContextAssociation = 'Assoc' that indicates membership in the SDC PARTICIPANT
        ENSEMBLE referred by the provided ensemble-id.

        Example 3: general hospital process
        Consider a general process within the hospital with multiple steps whereby each step is divided into multiple minor
        steps describing the major step more precisely. Membership of this main process as well as of the sub processes is
        modeled by a pm:EnsembleContextDescriptor that has multiple pm:EnsembleContextStates for the major as well as for
        the minor steps. To indicate membership in a sub process referred by the provided ensemble-id a
        pm:EnsembleContextState representing a major step and a pm:EnsembleContextState representing a major's minor step
        have to be associated. The manipulation shall return only the state handle of the pm:EnsembleContextState
        representing the minor step.

        Example 4: multiple states for one ensemble-id
        Consider a scenario where multiple pm:EnsembleContextStates of a provided pm:EnsembleContextDescriptor are needed to
        indicate membership in the same SDC PARTICIPANT ENSEMBLE referenced by the given ensemble-id. These states are all
        associated at the same time and the manipulation shall return their handles.

        The state shall be persistent until a next manipulation call. If the device is not able to maintain the static state,
        it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndMembershipInEnsembleByEnsembleId(self, request, context):
        """
        End membership in an SDC PARTICIPANT ENSEMBLE for a provided pm:EnsembleContextDescriptor and a provided ensemble-id.
        The ensemble-id is an identifier specified by the USER that uniquely refers to an SDC PARTICIPANT ENSEMBLE.

        The state shall be persistent until a next manipulation call. If the device is not able to maintain the static state,
        it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssociatePatientWithAutoGeneratedPatientId(self, request, context):
        """
        Create or adapt a pm:PatientContextState having an associated patient with an auto generated patient id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TemporarilyAssociateLocationWithNewIdentifier(self, request, context):
        """
        For the MDS with the given handle:

        In an MdibVersion x associate a validated, i.e. one containing at least one pm:Validator, pm:LocationContextState
        having an pm:Identification that is not already in use for a location in the MDS especially in terms of the Root and
        Extension attribute combination.

        Then in MdibVersion y > x of the same sequence make a change that does not alter any context state.

        At last in MdibVersion z > y of the same sequence disassociate the context state added in x via this rpc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TemporarilyAssociatePatientWithNewIdentifier(self, request, context):
        """
        For the MDS with the given handle:

        In an MdibVersion x associate a validated, i.e. one containing at least one pm:Validator, pm:PatientContextState
        having an pm:Identification that is not already in use for a patient in the MDS especially in terms of the Root
        and Extension attribute combination.

        Then in MdibVersion y > x of the same sequence make a change that does not alter any context state.

        At last in MdibVersion z > y of the same sequence disassociate the context state added in x via this rpc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ContextServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetLocationDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLocationDetail,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.SetLocationDetailRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'SetContextStateAssociation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetContextStateAssociation,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.SetContextStateAssociationRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'CreateContextStateWithAssociation': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContextStateWithAssociation,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.SerializeToString,
            ),
            'CreateContextStateWithAssociationAndValidators': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContextStateWithAssociationAndValidators,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationAndValidatorsRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.SerializeToString,
            ),
            'CreateContextStateWithAssocIdentificationAndValidator': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContextStateWithAssocIdentificationAndValidator,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'TransitionFromCreateStateWithIdentificationToRemoveIdentification': grpc.unary_unary_rpc_method_handler(
                    servicer.TransitionFromCreateStateWithIdentificationToRemoveIdentification,
                    request_deserializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.SerializeToString,
            ),
            'TransitionFromCreateStateWithIdentificationToChangeIdentification': grpc.unary_unary_rpc_method_handler(
                    servicer.TransitionFromCreateStateWithIdentificationToChangeIdentification,
                    request_deserializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.SerializeToString,
            ),
            'CreateContextStateWithAssocAndSpecificValidator': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContextStateWithAssocAndSpecificValidator,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssocAndSpecificValidatorRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.SerializeToString,
            ),
            'CreateContextStateWithAssocAndBindingMdibVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContextStateWithAssocAndBindingMdibVersion,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssocAndBindingMdibVersionRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.SerializeToString,
            ),
            'CreateContextStateWithAssocAndUnbindingMdibVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContextStateWithAssocAndUnbindingMdibVersion,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssocAndUnbindingMdibVersionRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.SerializeToString,
            ),
            'CreateNeonatalPatientWithAssociationAndMothersIdentification': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNeonatalPatientWithAssociationAndMothersIdentification,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.SerializeToString,
            ),
            'AssociatePatient': grpc.unary_unary_rpc_method_handler(
                    servicer.AssociatePatient,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.AssociatePatientRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'EnsembleContextIndicateMembership': grpc.unary_unary_rpc_method_handler(
                    servicer.EnsembleContextIndicateMembership,
                    request_deserializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'EnsembleContextIndicateMembershipWithIdentification': grpc.unary_unary_rpc_method_handler(
                    servicer.EnsembleContextIndicateMembershipWithIdentification,
                    request_deserializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.EnsembleContextIndicateMembershipWithIdentificationResponse.SerializeToString,
            ),
            'GetEnsembleIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEnsembleIds,
                    request_deserializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.GetEnsembleIdsResponse.SerializeToString,
            ),
            'IndicateMembershipInEnsembleByEnsembleId': grpc.unary_unary_rpc_method_handler(
                    servicer.IndicateMembershipInEnsembleByEnsembleId,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.EnsembleIdRequest.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.IndicateMembershipInEnsembleByEnsembleIdResponse.SerializeToString,
            ),
            'EndMembershipInEnsembleByEnsembleId': grpc.unary_unary_rpc_method_handler(
                    servicer.EndMembershipInEnsembleByEnsembleId,
                    request_deserializer=t2iapi_dot_context_dot_context__requests__pb2.EnsembleIdRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'AssociatePatientWithAutoGeneratedPatientId': grpc.unary_unary_rpc_method_handler(
                    servicer.AssociatePatientWithAutoGeneratedPatientId,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.SerializeToString,
            ),
            'TemporarilyAssociateLocationWithNewIdentifier': grpc.unary_unary_rpc_method_handler(
                    servicer.TemporarilyAssociateLocationWithNewIdentifier,
                    request_deserializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'TemporarilyAssociatePatientWithNewIdentifier': grpc.unary_unary_rpc_method_handler(
                    servicer.TemporarilyAssociatePatientWithNewIdentifier,
                    request_deserializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            't2iapi.context.ContextService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ContextService(object):
    """
    Service to handle context manipulations.
    """

    @staticmethod
    def SetLocationDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/SetLocationDetail',
            t2iapi_dot_context_dot_context__requests__pb2.SetLocationDetailRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetContextStateAssociation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/SetContextStateAssociation',
            t2iapi_dot_context_dot_context__requests__pb2.SetContextStateAssociationRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContextStateWithAssociation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/CreateContextStateWithAssociation',
            t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContextStateWithAssociationAndValidators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/CreateContextStateWithAssociationAndValidators',
            t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationAndValidatorsRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContextStateWithAssocIdentificationAndValidator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/CreateContextStateWithAssocIdentificationAndValidator',
            t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransitionFromCreateStateWithIdentificationToRemoveIdentification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/TransitionFromCreateStateWithIdentificationToRemoveIdentification',
            t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransitionFromCreateStateWithIdentificationToChangeIdentification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/TransitionFromCreateStateWithIdentificationToChangeIdentification',
            t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContextStateWithAssocAndSpecificValidator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/CreateContextStateWithAssocAndSpecificValidator',
            t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssocAndSpecificValidatorRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContextStateWithAssocAndBindingMdibVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/CreateContextStateWithAssocAndBindingMdibVersion',
            t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssocAndBindingMdibVersionRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContextStateWithAssocAndUnbindingMdibVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/CreateContextStateWithAssocAndUnbindingMdibVersion',
            t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssocAndUnbindingMdibVersionRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNeonatalPatientWithAssociationAndMothersIdentification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/CreateNeonatalPatientWithAssociationAndMothersIdentification',
            t2iapi_dot_context_dot_context__requests__pb2.CreateContextStateWithAssociationRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssociatePatient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/AssociatePatient',
            t2iapi_dot_context_dot_context__requests__pb2.AssociatePatientRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnsembleContextIndicateMembership(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/EnsembleContextIndicateMembership',
            t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnsembleContextIndicateMembershipWithIdentification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/EnsembleContextIndicateMembershipWithIdentification',
            t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.EnsembleContextIndicateMembershipWithIdentificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEnsembleIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/GetEnsembleIds',
            t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.GetEnsembleIdsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IndicateMembershipInEnsembleByEnsembleId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/IndicateMembershipInEnsembleByEnsembleId',
            t2iapi_dot_context_dot_context__requests__pb2.EnsembleIdRequest.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.IndicateMembershipInEnsembleByEnsembleIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndMembershipInEnsembleByEnsembleId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/EndMembershipInEnsembleByEnsembleId',
            t2iapi_dot_context_dot_context__requests__pb2.EnsembleIdRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssociatePatientWithAutoGeneratedPatientId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/AssociatePatientWithAutoGeneratedPatientId',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            t2iapi_dot_context_dot_context__responses__pb2.CreateContextStateWithAssociationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TemporarilyAssociateLocationWithNewIdentifier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/TemporarilyAssociateLocationWithNewIdentifier',
            t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TemporarilyAssociatePatientWithNewIdentifier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.context.ContextService/TemporarilyAssociatePatientWithNewIdentifier',
            t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
