# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from t2iapi.alert import alert_requests_pb2 as t2iapi_dot_alert_dot_alert__requests__pb2
from t2iapi import basic_requests_pb2 as t2iapi_dot_basic__requests__pb2
from t2iapi import basic_responses_pb2 as t2iapi_dot_basic__responses__pb2


class AlertServiceStub(object):
    """
    Service to handle alert manipulations.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetAlertConditionPresence = channel.unary_unary(
                '/t2iapi.alert.AlertService/SetAlertConditionPresence',
                request_serializer=t2iapi_dot_alert_dot_alert__requests__pb2.SetAlertConditionPresenceRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.SetAlarmSignalInactivationState = channel.unary_unary(
                '/t2iapi.alert.AlertService/SetAlarmSignalInactivationState',
                request_serializer=t2iapi_dot_alert_dot_alert__requests__pb2.SetAlarmSignalInactivationStateRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.SetAlertSystemNotFunctional = channel.unary_unary(
                '/t2iapi.alert.AlertService/SetAlertSystemNotFunctional',
                request_serializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.InitiateAlarmOff = channel.unary_unary(
                '/t2iapi.alert.AlertService/InitiateAlarmOff',
                request_serializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.SetAsActivationStateOnAndChangeAcPresenceFalse = channel.unary_unary(
                '/t2iapi.alert.AlertService/SetAsActivationStateOnAndChangeAcPresenceFalse',
                request_serializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.SetSomeAlertSignalPresence = channel.unary_unary(
                '/t2iapi.alert.AlertService/SetSomeAlertSignalPresence',
                request_serializer=t2iapi_dot_alert_dot_alert__requests__pb2.SetSomeAlertSignalPresenceRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )


class AlertServiceServicer(object):
    """
    Service to handle alert manipulations.
    """

    def SetAlertConditionPresence(self, request, context):
        """
        The AlertConditionState/@Presence shall be transitioned to the requested value for the AlertCondition with the
        given handle. Even if the @Presence already has the requested value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAlarmSignalInactivationState(self, request, context):
        """
        Change the state of the alarm signal inactivation state represented by the AlertCondition with the given
        handle as requested.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.

        Inactivation States can be for example:
        - Global Audio Pause, could have an condition with the text "Audio Pause"
        - "Pressures Off"
        - Cardiac By-Pass Mode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAlertSystemNotFunctional(self, request, context):
        """
        Set the AlertSystem with the given handle to not functional.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiateAlarmOff(self, request, context):
        """
        Initiate alarm off for the AlertCondition with the given handle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAsActivationStateOnAndChangeAcPresenceFalse(self, request, context):
        """
        For the AlertSignal with the provided handle ensure that the following sequence appears
        - State 1
        - pm:AlertSignalState/@Presence must be "On" or "Ack"
        - pm:AlertSignalState/@ActivationState must be "On"
        - the associated pm:AlertConditionState/@Presence must be "true"
        - State 2
        - pm:AlertSignalState/@ActivationState must be "On"
        - the associated pm:AlertConditionState/@Presence must be "false"
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSomeAlertSignalPresence(self, request, context):
        """
        Set the pm:AlertSignalState/@Presence for a subset of requested alert signals to the requested
        @Presence value(s).
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AlertServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetAlertConditionPresence': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAlertConditionPresence,
                    request_deserializer=t2iapi_dot_alert_dot_alert__requests__pb2.SetAlertConditionPresenceRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'SetAlarmSignalInactivationState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAlarmSignalInactivationState,
                    request_deserializer=t2iapi_dot_alert_dot_alert__requests__pb2.SetAlarmSignalInactivationStateRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'SetAlertSystemNotFunctional': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAlertSystemNotFunctional,
                    request_deserializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'InitiateAlarmOff': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateAlarmOff,
                    request_deserializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'SetAsActivationStateOnAndChangeAcPresenceFalse': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAsActivationStateOnAndChangeAcPresenceFalse,
                    request_deserializer=t2iapi_dot_basic__requests__pb2.BasicHandleRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'SetSomeAlertSignalPresence': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSomeAlertSignalPresence,
                    request_deserializer=t2iapi_dot_alert_dot_alert__requests__pb2.SetSomeAlertSignalPresenceRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            't2iapi.alert.AlertService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AlertService(object):
    """
    Service to handle alert manipulations.
    """

    @staticmethod
    def SetAlertConditionPresence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.alert.AlertService/SetAlertConditionPresence',
            t2iapi_dot_alert_dot_alert__requests__pb2.SetAlertConditionPresenceRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAlarmSignalInactivationState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.alert.AlertService/SetAlarmSignalInactivationState',
            t2iapi_dot_alert_dot_alert__requests__pb2.SetAlarmSignalInactivationStateRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAlertSystemNotFunctional(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.alert.AlertService/SetAlertSystemNotFunctional',
            t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitiateAlarmOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.alert.AlertService/InitiateAlarmOff',
            t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAsActivationStateOnAndChangeAcPresenceFalse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.alert.AlertService/SetAsActivationStateOnAndChangeAcPresenceFalse',
            t2iapi_dot_basic__requests__pb2.BasicHandleRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSomeAlertSignalPresence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.alert.AlertService/SetSomeAlertSignalPresence',
            t2iapi_dot_alert_dot_alert__requests__pb2.SetSomeAlertSignalPresenceRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
