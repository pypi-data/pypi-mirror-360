# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from t2iapi.activation_state import activation_state_requests_pb2 as t2iapi_dot_activation__state_dot_activation__state__requests__pb2
from t2iapi import basic_responses_pb2 as t2iapi_dot_basic__responses__pb2


class ActivationStateServiceStub(object):
    """
    Service to handle activation manipulations.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetAlertActivation = channel.unary_unary(
                '/t2iapi.activation_state.ActivationStateService/SetAlertActivation',
                request_serializer=t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetAlertActivationRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.SetComponentActivation = channel.unary_unary(
                '/t2iapi.activation_state.ActivationStateService/SetComponentActivation',
                request_serializer=t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetComponentActivationRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.ComponentActivationTransition = channel.unary_unary(
                '/t2iapi.activation_state.ActivationStateService/ComponentActivationTransition',
                request_serializer=t2iapi_dot_activation__state_dot_activation__state__requests__pb2.ComponentActivationTransitionRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.SetAlertConditionAndAlertSignalActivationState = channel.unary_unary(
                '/t2iapi.activation_state.ActivationStateService/SetAlertConditionAndAlertSignalActivationState',
                request_serializer=t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetAlertConditionAndAlertSignalActivationStateRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )
        self.SetSystemSignalActivation = channel.unary_unary(
                '/t2iapi.activation_state.ActivationStateService/SetSystemSignalActivation',
                request_serializer=t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetSystemSignalActivationRequest.SerializeToString,
                response_deserializer=t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
                )


class ActivationStateServiceServicer(object):
    """
    Service to handle activation manipulations.
    """

    def SetAlertActivation(self, request, context):
        """
        Set the ActivationState of the Alert with the given handle to the given AlertActivation value.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetComponentActivation(self, request, context):
        """
        Set the ActivationState of the DeviceComponent or Metric
        with the given handle to the given ComponentActivation value.
        The manipulated state shall be persistent until a next manipulation call. If the device is not able to maintain
        the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComponentActivationTransition(self, request, context):
        """
        Ensure that the requested transition of the value of the ActivationState of the DeviceComponent or Metric with the
        given handle from the starting ActivationState value, given as "start_activation" in the request, to the final
        ActivationState value, given as "end_activation" in the request, happens during the remote procedure call.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAlertConditionAndAlertSignalActivationState(self, request, context):
        """
        Set the ActivationStates for the given alert condition handle and alert signal handle to the given
        AlertActivation values.
        The manipulated state shall be persistent until a next manipulation call or an SDC operation invocation.
        If the device is not able to maintain the static state, it shall return RESULT_NOT_SUPPORTED.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSystemSignalActivation(self, request, context):
        """
        Set a SystemSignalActivation for a alert system with the given handle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ActivationStateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetAlertActivation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAlertActivation,
                    request_deserializer=t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetAlertActivationRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'SetComponentActivation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetComponentActivation,
                    request_deserializer=t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetComponentActivationRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'ComponentActivationTransition': grpc.unary_unary_rpc_method_handler(
                    servicer.ComponentActivationTransition,
                    request_deserializer=t2iapi_dot_activation__state_dot_activation__state__requests__pb2.ComponentActivationTransitionRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'SetAlertConditionAndAlertSignalActivationState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAlertConditionAndAlertSignalActivationState,
                    request_deserializer=t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetAlertConditionAndAlertSignalActivationStateRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
            'SetSystemSignalActivation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSystemSignalActivation,
                    request_deserializer=t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetSystemSignalActivationRequest.FromString,
                    response_serializer=t2iapi_dot_basic__responses__pb2.BasicResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            't2iapi.activation_state.ActivationStateService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ActivationStateService(object):
    """
    Service to handle activation manipulations.
    """

    @staticmethod
    def SetAlertActivation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.activation_state.ActivationStateService/SetAlertActivation',
            t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetAlertActivationRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetComponentActivation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.activation_state.ActivationStateService/SetComponentActivation',
            t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetComponentActivationRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ComponentActivationTransition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.activation_state.ActivationStateService/ComponentActivationTransition',
            t2iapi_dot_activation__state_dot_activation__state__requests__pb2.ComponentActivationTransitionRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAlertConditionAndAlertSignalActivationState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.activation_state.ActivationStateService/SetAlertConditionAndAlertSignalActivationState',
            t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetAlertConditionAndAlertSignalActivationStateRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSystemSignalActivation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/t2iapi.activation_state.ActivationStateService/SetSystemSignalActivation',
            t2iapi_dot_activation__state_dot_activation__state__requests__pb2.SetSystemSignalActivationRequest.SerializeToString,
            t2iapi_dot_basic__responses__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
