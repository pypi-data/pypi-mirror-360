# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: t2iapi/metric/service.proto
# Protobuf Python Version: 4.25.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from t2iapi import basic_responses_pb2 as t2iapi_dot_basic__responses__pb2
from t2iapi import basic_requests_pb2 as t2iapi_dot_basic__requests__pb2
from t2iapi.metric import metric_requests_pb2 as t2iapi_dot_metric_dot_metric__requests__pb2
from t2iapi.metric import metric_responses_pb2 as t2iapi_dot_metric_dot_metric__responses__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1bt2iapi/metric/service.proto\x12\rt2iapi.metric\x1a\x1ct2iapi/basic_responses.proto\x1a\x1bt2iapi/basic_requests.proto\x1a#t2iapi/metric/metric_requests.proto\x1a$t2iapi/metric/metric_responses.proto2\x89\r\n\rMetricService\x12\x61\n\x18SetMetricQualityValidity\x12..t2iapi.metric.SetMetricQualityValidityRequest\x1a\x15.t2iapi.BasicResponse\x12\x83\x01\n)SetActivationStateAndUserConfirmableValue\x12?.t2iapi.metric.SetActivationStateAndUserConfirmableValueRequest\x1a\x15.t2iapi.BasicResponse\x12\x46\n\x11SetIncorrectValue\x12\x1a.t2iapi.BasicHandleRequest\x1a\x15.t2iapi.BasicResponse\x12U\n\x0f\x43\x61librateMetric\x12\x1a.t2iapi.BasicHandleRequest\x1a&.t2iapi.metric.CalibrateMetricResponse\x12m\n\x1eSetMetricValuesWithQualityMode\x12\x34.t2iapi.metric.SetMetricValuesWithQualityModeRequest\x1a\x15.t2iapi.BasicResponse\x12]\n\x16SetMetricValuesInRange\x12,.t2iapi.metric.SetMetricValuesInRangeRequest\x1a\x15.t2iapi.BasicResponse\x12O\n\x0fSetMetricStatus\x12%.t2iapi.metric.SetMetricStatusRequest\x1a\x15.t2iapi.BasicResponse\x12_\n\x14IsComputerControlled\x12\x1a.t2iapi.BasicHandleRequest\x1a+.t2iapi.metric.IsComputerControlledResponse\x12P\n\x1bProvideMetricValueOrSamples\x12\x1a.t2iapi.BasicHandleRequest\x1a\x15.t2iapi.BasicResponse\x12\x64\n/TransitionProvideValueToExpressNoValueAvailable\x12\x1a.t2iapi.BasicHandleRequest\x1a\x15.t2iapi.BasicResponse\x12K\n\x16\x43onveyMetricDemoValues\x12\x1a.t2iapi.BasicHandleRequest\x1a\x15.t2iapi.BasicResponse\x12M\n\x18SetActiveModeOfOperation\x12\x1a.t2iapi.BasicHandleRequest\x1a\x15.t2iapi.BasicResponse\x12\x63\n\x1aGetMetricDeterminationMode\x12\x1a.t2iapi.BasicHandleRequest\x1a).t2iapi.metric.GetMetricDeterminationMode\x12S\n\x1e\x44isplayMetricWithDifferentUnit\x12\x1a.t2iapi.BasicHandleRequest\x1a\x15.t2iapi.BasicResponse\x12m\n8TransitionAccuracyFromWithinLimitsToBelowSpecifiedLimits\x12\x1a.t2iapi.BasicHandleRequest\x1a\x15.t2iapi.BasicResponse\x12N\n\x19SetMetricAvailabilityIntr\x12\x1a.t2iapi.BasicHandleRequest\x1a\x15.t2iapi.BasicResponse\x12P\n\x1bSetMetricCategoryMsrmtOrClc\x12\x1a.t2iapi.BasicHandleRequest\x1a\x15.t2iapi.BasicResponse\x12Q\n\x1cSetMetricCategorySetOrPreset\x12\x1a.t2iapi.BasicHandleRequest\x1a\x15.t2iapi.BasicResponseB5\n!com.draeger.medical.t2iapi.metricB\x10MetricApiServiceb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 't2iapi.metric.service_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n!com.draeger.medical.t2iapi.metricB\020MetricApiService'
  _globals['_METRICSERVICE']._serialized_start=181
  _globals['_METRICSERVICE']._serialized_end=1854
# @@protoc_insertion_point(module_scope)
