Metadata-Version: 2.4
Name: qalgo
Version: 0.1.2
Summary: A package for implementing quantum algorithms using the pysparq package.
Project-URL: Repository, https://github.com/TMYTiMidlY/QuantumAlgorithm.git
Author-email: TiMidlY <mytan@mail.ustc.edu.cn>
License-Expression: Apache-2.0
License-File: LICENSE
Keywords: algorithm,pysparq,quantum
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering :: Quantum Computing
Classifier: Topic :: Software Development
Classifier: Typing :: Typed
Requires-Python: >=3.10
Requires-Dist: pysparq>=0.0.2
Requires-Dist: scipy
Description-Content-Type: text/markdown

# QuantumAlgorithm

[![GitHub version](https://badge.fury.io/gh/tmytimidly%2Fquantumalgorithm.svg)](https://badge.fury.io/gh/tmytimidly%2Fquantumalgorithm)
[![Documentation Status](https://app.readthedocs.org/projects/qalgo/badge/?version=latest)](https://qalgo.readthedocs.io/zh-cn/latest/)
[![PyPI version](https://badge.fury.io/py/qalgo.svg)](https://badge.fury.io/py/qalgo)
[![Test status](https://github.com/TMYTiMidlY/QuantumAlgorithm/actions/workflows/tests.yml/badge.svg)](https://github.com/TMYTiMidlY/QuantumAlgorithm/actions/workflows/tests.yml)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qalgo)

A package for implementing quantum algorithms using the pysparq package.

# Installation
To install the package, run the following command in the terminal:

    pip install qalgo

# Usage
To use the package, simply import the module and create an instance of the desired algorithm class. For example:

```python
from qalgo import qda
import numpy as np

a = np.array([[1, 2], [3, 5]])
b = np.array([1, 2])
x_hat = qda.solve(a, b)
```

# Algorithms
The package currently includes the following quantum algorithms:

- Discrete adiabatic quantum linear system solver 
- Grover's algorithm (TODO)
- Hamiltonian simulation (TODO)
- Shor's algorithm (TODO)

# Documentation
The documentation for the package can be found at https://qalgo.readthedocs.io/zh-cn/latest/.