# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import typing
from enum import Enum

class MessageParser:
    def __new__(cls, device_id:builtins.str, msg_type:MsgType) -> MessageParser: ...
    def receive_data(self, data:typing.Sequence[builtins.int]) -> None: ...
    def start_message_stream(self) -> typing.Any: ...

class MessageStream:
    def __aiter__(self) -> MessageStream: ...
    def __anext__(self) -> typing.Any: ...

class DfuCommandType(Enum):
    StartTransfer = ...
    TransferData = ...
    FinishTransfer = ...
    SetDfuMode = ...
    GetFirmwareInfo = ...

    int_value: builtins.int

    def __new__(cls, value:builtins.int) -> DfuCommandType: ...

class DfuState(Enum):
    Idle = ...
    AwaitingFirmwareInfo = ...
    InDfuMode = ...
    Transferring = ...
    Finished = ...
    Error = ...

    int_value: builtins.int

    def __new__(cls, value:builtins.int) -> DfuState: ...

class LogLevel(Enum):
    Error = ...
    Warn = ...
    Info = ...
    Debug = ...
    Trace = ...

class MsgType(Enum):
    Crimson = ...
    OxyZen = ...
    Mobius = ...
    MobiusV1_5 = ...
    Almond = ...
    AlmondV2 = ...
    Morpheus = ...
    Luna = ...
    REN = ...
    Breeze = ...
    Stark = ...
    EEGCap = ...
    Edu = ...
    Clear = ...
    Melody = ...
    Aura = ...
    Treadmill = ...

    int_value: builtins.int

    def __new__(cls, value:builtins.int) -> MsgType: ...

class TreadmillModuleId(Enum):
    APP = ...
    PITPAT = ...
    ALGO = ...
    DFU = ...

    int_value: builtins.int

    def __new__(cls, value:builtins.int) -> TreadmillModuleId: ...

def decrypt(ciphertext:typing.Sequence[builtins.int]) -> typing.Any: ...

def did_receive_data(data:typing.Sequence[builtins.int]) -> None: ...

def encrypt(plaintext:typing.Sequence[builtins.int]) -> typing.Any: ...

def get_device_info() -> builtins.list[builtins.int]: ...

def get_sdk_version() -> builtins.str: ...

def set_abnormal_event_callback(func:typing.Any) -> None: ...

def set_eeg_data_callback(func:typing.Any) -> None: ...

def set_gait_data_callback(func:typing.Any) -> None: ...

def set_imp_data_callback(func:typing.Any) -> None: ...

def set_imu_data_callback(func:typing.Any) -> None: ...

def set_msg_resp_callback(func:typing.Any) -> None: ...

def unresister_gait_data_callback() -> None: ...

def unresister_msg_resp_callback() -> None: ...

def wrap_message(payload:typing.Sequence[builtins.int]) -> typing.Any: ...

