# The language to output bindings in
#
# possible values: "C", "C++", "Cython"
#
# default: "C++"
language = "C"
include_guard = "TML_SDK_H"

autogen_warning = "/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */"

# namespace = "my_namespace"
# namespaces = []
# using_namespaces = []
# sys_includes = []
# includes = []
# no_includes = false
cpp_compat = true

[defines]
# "target_os = freebsd" = "DEFINE_FREEBSD"

[export]
include = ["AbnormalGait", "GaitPattern", "FootStrike"]
exclude = [
  "serial_read_js",
  "modbus_read_holding_register_values_js",
  "modbus_read_input_register_values_js",
]

# A prefix to add before the name of every item
# default: no prefix is added
# prefix = "CAPI_"


# Types of items that we'll generate. If empty, then all types of item are emitted.
#
# possible items: (TODO: explain these in detail)
# * "constants":
# * "globals":
# * "enums":
# * "structs":
# * "unions":
# * "typedefs":
# * "opaque":
# * "functions":
#
# default: []
# item_types = ["enums", "structs", "opaque", "functions"]

# [export.rename]
# "MyType" = "my_cool_type"
# "my_function" = "BetterFunctionName"

[parse]
parse_deps = false

# https://github.com/mozilla/cbindgen/blob/master/template.toml
# https://github.com/mozilla/cbindgen/blob/master/docs.md
[parse.expand]
# # A list of crate names that should be run through `cargo expand` before
# # parsing to expand any macros. Note that if a crate is named here, it
# # will always be parsed, even if the blacklist/whitelist says it shouldn't be.
# #
# # default: []
# crates = ["euclid"]

# If enabled,  use the `--all-features` option when expanding. Ignored when
# `features` is set. For backwards-compatibility, this is forced on if
# `expand = ["euclid"]` shorthand is used.
#
# default: false
all_features = false

# When `all_features` is disabled and this is also disabled, use the
# `--no-default-features` option when expanding.
#
# default: true
default_features = false

features = ["treadmill-cbindgen"]

[enum]
rename_variants = "ScreamingSnakeCase"

# 是否为枚举添加一个哨兵值（通常是一个无效值，用于表示未初始化的状态）
add_sentinel = false

# 是否在枚举变体名称前添加枚举名称作为前缀
prefix_with_name = true

# 是否为枚举派生辅助方法
derive_helper_methods = false

# 是否为枚举派生常量转换方法
derive_const_casts = false

# 是否为枚举派生可变转换方法
derive_mut_casts = false

# 派生的断言名称
# cast_assert_name = "ASSERT"

# 是否为标记枚举派生析构函数
derive_tagged_enum_destructor = false

# 是否为标记枚举派生拷贝构造函数
derive_tagged_enum_copy_constructor = false

# 是否将枚举生成为枚举类（C++11 枚举类）
enum_class = false

# 是否为标记枚举生成私有的默认构造函数
private_default_tagged_enum_constructor = false

# [const]
# sort_by = "Name"

# [fn]
# An optional prefix to put before every function declaration
# default: no prefix added
# prefix = "tml_"

# An optional postfix to put after any function declaration
# default: no postix added
# postfix = "WR_END_FUNC"

# How to format function arguments
#
# possible values:
# * "horizontal": place all arguments on the same line
# * "vertical": place each argument on its own line
# * "auto": only use vertical if horizontal would exceed line_length
#
# default: "auto"
# args = "horizontal"

[macro_expansion]
# Whether bindings should be generated for instances of the bitflags! macro.
# default: false
bitflags = true
