// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace Treadmill
{
    internal static unsafe partial class TreadmillSDK
    {
#if UNITY_IOS && !UNITY_EDITOR
        const string __DllName = "__Internal";
#else
        const string __DllName = "treadmill_sdk";
#endif




        /// <summary>
        ///  初始化日志记录功能
        ///
        ///  # 参数
        ///  - `level`: 日志级别
        /// </summary>
        [DllImport(__DllName, EntryPoint = "initialize_logging", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void initialize_logging(LogLevel level);

        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        internal delegate void set_gait_data_callback_cb_delegate(uint timmstamp, uint sport_runtime, uint sport_id, byte foot, byte pattern, uint gait_duration, float step_load);

        /// <summary>
        ///  Sets the callback for GaitAnalysisResult data.
        ///
        ///  # Arguments
        ///  * `callback` - The function to call when receiving GaitAnalysisResult data.
        /// </summary>
        [DllImport(__DllName, EntryPoint = "set_gait_data_callback", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void set_gait_data_callback(set_gait_data_callback_cb_delegate cb);

        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        internal delegate void set_abnormal_event_callback_cb_delegate(uint timmstamp, uint sport_runtime, uint sport_id, byte event_type);

        /// <summary>
        ///  Sets the callback for AbnormalEvent data.
        ///
        ///  # Arguments
        ///  * `callback` - The function to call when receiving AbnormalEvent data.
        /// </summary>
        [DllImport(__DllName, EntryPoint = "set_abnormal_event_callback", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void set_abnormal_event_callback(AbnormalEventCallback cb);

        /// <summary>
        ///  Receives a pointer to data and its length from C.
        ///  The data is borrowed and not freed by this function.
        ///  The caller is responsible for managing the memory.
        /// </summary>
        [DllImport(__DllName, EntryPoint = "did_receive_data", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void did_receive_data(byte* data, nuint len);


    }



}
