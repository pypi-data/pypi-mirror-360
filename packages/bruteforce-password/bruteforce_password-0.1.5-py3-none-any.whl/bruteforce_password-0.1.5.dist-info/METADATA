Metadata-Version: 2.4
Name: bruteforce-password
Version: 0.1.5
Summary: A tool to brute-force passwords (for educational purposes)
Home-page: https://github.com/Blaze404/BruteforcePassword
Author: Mustafa Qazi
Author-email: mustafaqazi1998@gmail.com
License: MIT
Project-URL: Source, https://github.com/Blaze404/BruteforcePassword
Project-URL: Tracker, https://github.com/Blaze404/BruteforcePassword/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: tqdm
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# üîê Bruteforce Password Generator
‚ö†Ô∏è **IMPORTANT: For educational use only. Unauthorized password cracking is illegal.**

**A customized password generator baked to a specific target.**  

## üß† How it works

This tool generates likely password guesses based on a target's personal details using:
- Templates (e.g. `{first_name}@123`, `password{dob}`, etc.)
- A list of relevant keywords (like pet names, hobbies, etc.)
- Leetspeak and case transformations (e.g. `blaze` ‚Üí `Blaze`, `bl4ze`, `BL4ZE`, etc.)

Useful for ethical hacking, CTFs, or security research.

---

## üì¶ Installation

You can install this via pip (after publishing):

```bash
pip install smart-brute-force
```

## üõ†Ô∏è Usage Example
```python
from bruteforce_password import BruteforcePassword

bp = BruteforcePassword(
    first_name='john',
    dob='01012000',
    last_name="doe",
    target_website="google"
)

bp.add_template("{car_name}@vroom")
bp.add_more_info("car_name", "hyundai")
bp.add_relevant_words(["cookies", "jane", "newyork"])

passwords = bp.brute_force()

for pw in passwords:
    print(pw)
```
