name: Test
on:
  pull_request:
  push:

jobs:
  check:
    name: Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo check --all-features
  
  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
  
  clippy:
    name: Check for linting errors
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --all-features -- -D warnings
  
  test:
    name: Run test suite
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install numpy
      - run: cargo test --no-default-features --features auto-initialize
  
  python-wheel:
    name: Build & test wheel
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10"]   # could add more versions here
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-python@v5
        id: py
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --interpreter ${{ steps.py.outputs.python-path }} --out dist
      - name: Install wheel for test
        run: |
          python -m pip install --upgrade pip
          python -m pip install dist/*.whl
          python -m pip install numpy --index-url https://download.pytorch.org/whl/cpu torch
      - name: Smoke-test import
        run: |
          python - << 'PY'
          import flowrider                           # ← if this fails, the wheel is broken
          print("flowrider imported from", flowrider.__file__)
          # ultra-light sanity check: construct a Config and print it
          cfg = flowrider.Config(
              cache_dir="tmp_cache",
              cache_limit=0,
              max_downloads=1,
              num_cache_workers=None,
              local_rank=0,
              global_rank=0,
              world_size=1,
              master_addr=None,
              master_port=None,
          )
          print("Constructed Config OK:", cfg)
          PY
