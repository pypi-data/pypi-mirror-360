[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "maylng"
version = "0.2.1b0"
description = "Maylng - Python SDK for agentic email management. Create email addresses and send emails programmatically for AI agents."
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "KnextKoder", email = "hello@knextkoder.com" },
]
keywords = [
    "email",
    "ai", 
    "agents",
    "sdk",
    "python",
    "automation",
    "maylng",
    "smtp",
    "temporary-email",
    "email-api",
    "agentic"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Email",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "httpx>=0.25.0",
    "pydantic[email]>=2.0.0",
    "typing-extensions>=4.0.0; python_version<'3.10'",
]

[project.urls]
Homepage = "https://github.com/maylng/mayl-sdk"
Documentation = "https://docs.maylng.com"
Repository = "https://github.com/maylng/mayl-sdk.git"
Issues = "https://github.com/maylng/mayl-sdk/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
]

[tool.hatch.build.targets.sdist]
include = [
    "/maylng",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["maylng"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
