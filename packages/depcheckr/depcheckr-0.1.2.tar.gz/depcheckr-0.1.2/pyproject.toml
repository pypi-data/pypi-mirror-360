[project]
name = "depcheckr"
version = "0.1.2"
description = "Effortlessly inspect and upgrade dependencies in your pyproject.toml"
readme = "README.md"
keywords = ["dependencies", "cli", "pyproject", "version-checker"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
urls = { homepage = "https://github.com/ashenlabs/depcheckr" }
authors = [{ name = "Patrick Mazulo", email = "mazulo@ashenlabs.dev" }]
license = { text = "MIT" }
requires-python = ">=3.12"
dependencies = [
    "httpx",
    "packaging>=25.0",
    "rich>=13.0.0",
    "tomli-w",
    "typer>=0.16.0",
]

[project.scripts]
depcheckr = "depcheckr.__main__:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "src/depcheckr",
]

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "mypy",
  "ruff",
]

[tool.uv]
dev-dependencies = [
    "mypy>=1.16.1",
    "pre-commit-uv>=4.1.4",
    "pytest>=8.4.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.2",
]

[tool.mypy]
check_untyped_defs = false
disallow_any_generics = true
disallow_any_unimported = false
disallow_incomplete_defs = false
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = false
files = ['**/*.py']
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
python_version = "3.13"
show_error_codes = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
strict = true
warn_return_any = true
warn_unused_configs = true
warn_unreachable = true
warn_unused_ignores = true
exclude = ["tests/.*", "build/", "dist/"]
incremental = true
cache_dir = ".mypy_cache"

[[tool.mypy.overrides]]
module = ["rich"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["httpx"]
ignore_missing_imports = true

[tool.ruff]
target-version = "py313"
line-length = 100
fix = true
exclude = [".venv"]

[tool.ruff.lint]
select = [
  "YTT", "S", "B", "A", "C4", "T10", "SIM", "I", "C90", "E", "W",
  "F", "PGH", "UP", "RUF", "TRY",
]
ignore = [
  "D100", "D101", "D102", "D103", "D104", "D106", "D203", "D212",
  "E501", "E731", "D", "TRY003", "UP046",
]

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["S101", "S106", "S603"]
"__init__.py" = ["E402"]

[tool.ruff.lint.isort]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.isort]
skip = [".git"]
include_trailing_comma = true
multi_line_output = 3

[tool.ruff.format]
docstring-code-format = true
