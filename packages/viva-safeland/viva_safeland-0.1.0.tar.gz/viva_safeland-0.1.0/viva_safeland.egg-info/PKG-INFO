Metadata-Version: 2.1
Name: viva_safeland
Version: 0.1.0
Summary: A new freeware for safe validation of vision-based navigation in aerial vehicles
Author-email: juliodltv <juliodltv@gmail.com>
License: MIT License
        
        Copyright (c) 2024 Juls
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.20.0
Requires-Dist: opencv-python>=4.11.0
Requires-Dist: pygame>=2.6.1
Requires-Dist: typer
Provides-Extra: docs
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx_rtd_theme; extra == "docs"
Requires-Dist: myst_parser; extra == "docs"
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: build; extra == "dev"
Requires-Dist: twine; extra == "dev"

# Viva Safeland

[![PyPI version](https://badge.fury.io/py/viva_safeland.svg)](https://badge.fury.io/py/viva_safeland)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/viva_safeland.svg)](https://pypi.org/project/viva_safeland)

A new freeware for safe validation of vision-based navigation in aerial vehicles.

Viva Safeland provides a simulated environment to test and validate computer vision algorithms for drone navigation, ensuring safety before real-world deployment.

## Key Features

*   **Realistic Simulation:** Simulates drone movement and sensor data.
*   **Vision Algorithm Validation:** Test your own navigation algorithms in a controlled environment.
*   **Modular Architecture:** Easily extend and customize the simulator, HMI, and rendering components.
*   **Safety First:** Develop and debug navigation logic without risking expensive hardware.

## Installation

### Prerequisites

*   Python 3.8+
*   [Poetry](https://python-poetry.org/docs/#installation) for dependency management.
*   (Recommended) [Miniconda](https://docs.conda.io/en/latest/miniconda.html) or another virtual environment manager.

### Steps

1.  **Clone the repository:**
    ```bash
    git clone https://github.com/juliodltv/viva_safeland.git
    cd viva_safeland
    ```

2.  **(Recommended) Create and activate a virtual environment:**

    *Using Conda:*
    ```bash
    conda create --name viva_env python=3.8
    conda activate viva_env
    ```

3.  **Install dependencies using Poetry:**
    ```bash
    poetry install
    ```

## Usage

To run the main simulation, execute the following command from the root of the project:

```bash
poetry run python -m src.main
```

## Contributing

Contributions are welcome! If you have ideas for improvements or have found a bug, please follow these steps:

1.  Fork the repository.
2.  Create a new branch (`git checkout -b feature/your-feature-name`).
3.  Make your changes.
4.  Commit your changes (`git commit -m 'Add some feature'`).
5.  Push to the branch (`git push origin feature/your-feature-name`).
6.  Open a Pull Request.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details (we should create this file next!).
