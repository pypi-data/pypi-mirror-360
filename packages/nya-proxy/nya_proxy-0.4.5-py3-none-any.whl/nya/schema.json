{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "NyaProxy Configuration Schema",
    "description": "Schema for validating NyaProxy configuration files",
    "type": "object",
    "required": [
        "server",
        "default_settings",
        "apis"
    ],
    "$defs": {
        "req_body_subst": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set to true to enable request body substitution"
                },
                "rules": {
                    "type": "array",
                    "description": "List of substitution rules to apply",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "operation",
                            "path"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Human-readable name for the rule"
                            },
                            "operation": {
                                "type": "string",
                                "enum": [
                                    "set",
                                    "remove"
                                ],
                                "description": "Type of operation to perform (set or remove)"
                            },
                            "path": {
                                "type": "string",
                                "description": "JMESPath expression targeting the field"
                            },
                            "value": {
                                "description": "Value to set (not needed for remove operation)"
                            },
                            "conditions": {
                                "type": "array",
                                "description": "Optional conditions that must be met for rule to apply",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "field",
                                        "operator"
                                    ],
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "JMESPath to field to evaluate"
                                        },
                                        "operator": {
                                            "type": "string",
                                            "enum": [
                                                "eq",
                                                "ne",
                                                "gt",
                                                "lt",
                                                "ge",
                                                "le",
                                                "in",
                                                "nin",
                                                "like",
                                                "nlike",
                                                "contains",
                                                "ncontains",
                                                "between",
                                                "nbetween",
                                                "startswith",
                                                "endswith",
                                                "exists",
                                                "nexists",
                                                "isnull",
                                                "notnull"
                                            ],
                                            "description": "Comparison operator to use"
                                        },
                                        "value": {
                                            "description": "Value to compare against (if needed by the operator)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "required": [
                "enabled"
            ],
            "additionalProperties": false
        },
        "default_settings": {
            "type": "object",
            "properties": {
                "key_variable": {
                    "type": "string",
                    "description": "Variable name for API keys"
                },
                "key_concurrency": {
                    "type": "boolean",
                    "description": "Whether or not each key can handle concurrent requests"
                },
                "randomness": {
                    "type": "number",
                    "description": "Random delay of (0.0-x)s to introduce variability in request timing and avoid detection"
                },
                "load_balancing_strategy": {
                    "type": "string",
                    "enum": [
                        "round_robin",
                        "random",
                        "least_requests",
                        "fastest_response",
                        "weighted"
                    ],
                    "description": "Load balancing strategy"
                },
                "allowed_paths": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable path restrictions"
                        },
                        "mode": {
                            "type": "string",
                            "enum": [
                                "whitelist",
                                "blacklist"
                            ],
                            "description": "Whitelist or blacklist mode for paths"
                        },
                        "paths": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "List of allowed or blocked paths, regex supported"
                            }
                        }
                    },
                    "required": [
                        "enabled"
                    ],
                    "additionalProperties": false
                },
                "allowed_methods": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE",
                            "PATCH",
                            "OPTIONS"
                        ],
                        "description": "HTTP methods to allow or block"
                    }
                },
                "queue": {
                    "type": "object",
                    "properties": {
                        "max_size": {
                            "type": "integer",
                            "description": "Maximum queue size per API",
                            "minimum": 1
                        },
                        "max_workers": {
                            "type": "integer",
                            "description": "Maximum number of concurrent workers processing requests for this API",
                            "minimum": 1
                        },
                        "expiry_seconds": {
                            "type": "integer",
                            "description": "How long to keep requests in queue before expiry",
                            "minimum": 1
                        }
                    }
                },
                "rate_limit": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable rate limiting"
                        },
                        "endpoint_rate_limit": {
                            "type": "string",
                            "pattern": "^(\\d+)/((\\d+[smhd])|[smhd])$",
                            "description": "Endpoint rate limit"
                        },
                        "key_rate_limit": {
                            "type": "string",
                            "pattern": "^(\\d+)/((\\d+[smhd])|[smhd])$",
                            "description": "Per key rate limit"
                        },
                        "ip_rate_limit": {
                            "type": "string",
                            "pattern": "^(\\d+)/((\\d+[smhd])|[smhd])$",
                            "description": "Per IP rate limit"
                        },
                        "user_rate_limit": {
                            "type": "string",
                            "pattern": "^(\\d+)/((\\d+[smhd])|[smhd])$",
                            "description": "Per User rate limit"
                        },
                        "rate_limit_paths": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Path patterns to apply rate limits to, regex supported"
                            }
                        }
                    }
                },
                "retry": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable automatic retries"
                        },
                        "mode": {
                            "type": "string",
                            "enum": [
                                "default",
                                "backoff",
                                "key_rotation"
                            ],
                            "description": "Retry mode"
                        },
                        "attempts": {
                            "type": "integer",
                            "description": "Max retry attempts",
                            "minimum": 0
                        },
                        "retry_after_seconds": {
                            "type": "number",
                            "description": "Delay between retries",
                            "minimum": 0
                        },
                        "retry_status_codes": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "description": "HTTP status codes to retry"
                            }
                        },
                        "retry_request_methods": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "POST",
                                    "GET",
                                    "PUT",
                                    "DELETE",
                                    "PATCH",
                                    "OPTIONS"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false
                },
                "timeouts": {
                    "type": "object",
                    "properties": {
                        "request_timeout_seconds": {
                            "type": "integer",
                            "description": "Request timeout",
                            "minimum": 1
                        }
                    },
                    "additionalProperties": false
                },
                "request_body_substitution": {
                    "$ref": "#/$defs/req_body_subst"
                }
            },
            "additionalProperties": false
        }
    },
    "properties": {
        "server": {
            "type": "object",
            "properties": {
                "cors": {
                    "type": "object",
                    "properties": {
                        "allow_origins": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "allow_credentials": {
                            "type": "boolean",
                            "description": "CORS allow credentials"
                        },
                        "allow_methods": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "DELETE",
                                    "PATCH",
                                    "OPTIONS"
                                ]
                            }
                        },
                        "allow_headers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "api_key": {
                    "anyOf": [
                        {
                            "type": "null"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    ],
                    "description": "API key for authenticating requests (optional)"
                },
                "logging": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable logging"
                        },
                        "level": {
                            "type": "string",
                            "enum": [
                                "debug",
                                "info",
                                "warning",
                                "error",
                                "DEBUG",
                                "INFO",
                                "WARNING",
                                "ERROR"
                            ],
                            "description": "Log level"
                        },
                        "log_file": {
                            "type": "string",
                            "description": "Log file name"
                        }
                    }
                },
                "proxy": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable outbound proxy"
                        },
                        "address": {
                            "type": "string",
                            "description": "Proxy address URI"
                        }
                    }
                },
                "dashboard": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the metrics dashboard"
                        }
                    }
                }
            }
        },
        "default_settings": {
            "$ref": "#/$defs/default_settings"
        },
        "apis": {
            "type": "object",
            "patternProperties": {
                "^[a-zA-Z0-9_-]+$": {
                    "type": "object",
                    "required": [
                        "name",
                        "endpoint",
                        "headers",
                        "key_variable",
                        "variables"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Human-readable API name"
                        },
                        "endpoint": {
                            "type": "string",
                            "description": "Target API endpoint URL",
                            "format": "uri",
                            "pattern": "^(http|https|ws|wss)://.+"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "URL path aliases for this API"
                            }
                        },
                        "key_variable": {
                            "$ref": "#/$defs/default_settings/properties/key_variable"
                        },
                        "key_concurrency": {
                            "$ref": "#/$defs/default_settings/properties/key_concurrency"
                        },
                        "randomness": {
                            "$ref": "#/$defs/default_settings/properties/randomness"
                        },
                        "headers": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "description": "Header value that may contain variable substitutions"
                            },
                            "minProperties": 1
                        },
                        "variables": {
                            "type": "object",
                            "additionalProperties": {
                                "oneOf": [
                                    {
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "number"
                                                },
                                                {
                                                    "type": "integer"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "minProperties": 1
                        },
                        "load_balancing_strategy": {
                            "$ref": "#/$defs/default_settings/properties/load_balancing_strategy"
                        },
                        "allowed_paths": {
                            "$ref": "#/$defs/default_settings/properties/allowed_paths"
                        },
                        "allowed_methods": {
                            "$ref": "#/$defs/default_settings/properties/allowed_methods"
                        },
                        "queue": {
                            "$ref": "#/$defs/default_settings/properties/queue"
                        },
                        "rate_limit": {
                            "$ref": "#/$defs/default_settings/properties/rate_limit"
                        },
                        "retry": {
                            "$ref": "#/$defs/default_settings/properties/retry"
                        },
                        "timeouts": {
                            "$ref": "#/$defs/default_settings/properties/timeouts"
                        },
                        "request_body_substitution": {
                            "$ref": "#/$defs/req_body_subst"
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        }
    }
}