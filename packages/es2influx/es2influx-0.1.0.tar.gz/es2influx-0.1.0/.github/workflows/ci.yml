name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Node.js (for elasticdump)
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install elasticdump
      run: npm install -g elasticdump

    - name: Install InfluxDB CLI
      run: |
        # Download and install InfluxDB CLI
        wget -qO- https://repos.influxdata.com/influxdb.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/influxdb.gpg > /dev/null
        echo "deb [signed-by=/etc/apt/trusted.gpg.d/influxdb.gpg] https://repos.influxdata.com/debian stable main" | sudo tee /etc/apt/sources.list.d/influxdb.list
        sudo apt-get update && sudo apt-get install influxdb2-cli

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python environment
      run: |
        uv venv
        uv pip install -e ".[dev]"

    - name: Lint with flake8
      run: |
        source .venv/bin/activate
        # Stop the build if there are Python syntax errors or undefined names
        flake8 es2influx --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 es2influx --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      run: |
        source .venv/bin/activate
        black --check --diff es2influx tests

    - name: Check import sorting with isort
      run: |
        source .venv/bin/activate
        isort --check-only --diff es2influx tests

    - name: Type check with mypy
      run: |
        source .venv/bin/activate
        mypy es2influx

    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pytest tests/ -v --cov=es2influx --cov-report=xml

    # - name: Upload coverage to Codecov
    #   if: matrix.python-version == '3.11'
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./coverage.xml
    #     flags: unittests
    #     name: codecov-umbrella
    #     fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv venv
        uv pip install bandit safety

    - name: Run security checks with bandit
      run: |
        source .venv/bin/activate
        bandit -r es2influx -f json -o bandit-report.json || true

    - name: Run safety check
      run: |
        source .venv/bin/activate
        safety check --json --output safety-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json 