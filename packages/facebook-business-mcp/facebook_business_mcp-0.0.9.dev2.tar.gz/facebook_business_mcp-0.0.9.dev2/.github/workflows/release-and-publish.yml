name: Release and Publish

on:
  push:
    branches:
      - dev

jobs:
  release-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # For PyPI trusted publishing
      contents: write  # For creating releases and tags
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get next version
        id: get_version
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          
          # Extract version numbers
          VERSION=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          
          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
          NEW_TAG="v${NEW_VERSION}"
          
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_OUTPUT
          echo "New version will be: ${NEW_VERSION}"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.13"
          enable-cache: true
          python-version: "3.12"

      - name: Set up Python
        run: uv python install

      - name: Update version in __init__.py
        run: |
          sed -i "s/__version__ = \".*\"/__version__ = \"${{ steps.get_version.outputs.NEW_VERSION }}\"/" facebook_business_mcp/__init__.py
          
      - name: Install dependencies
        run: uv sync --all-extras

      - name: Build package
        run: uv build

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.NEW_TAG }}
          release_name: Release ${{ steps.get_version.outputs.NEW_VERSION }}
          body: |
            Automated release of version ${{ steps.get_version.outputs.NEW_VERSION }}
            
            ## What's Changed
            See the [commit history](https://github.com/${{ github.repository }}/compare/${{ steps.get_version.outputs.NEW_TAG }}...${{ github.sha }}) for details.
          draft: false
          prerelease: false

      - name: Publish to PyPI
        run: uv publish --trusted-publishing always