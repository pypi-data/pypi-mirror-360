# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .config_values import ConfigValues


class SourceConnectionCreateWithWhiteLabel(UniversalBaseModel):
    """
    Schema for creating a source connection through the white label endpoint.

    This schema includes white_label_id and is used specifically for
    white label source connection creation.
    """

    name: str = pydantic.Field()
    """
    Name of the source connection
    """

    description: typing.Optional[str] = None
    config_fields: typing.Optional[ConfigValues] = None
    short_name: str
    collection: typing.Optional[str] = None
    cron_schedule: typing.Optional[str] = None
    auth_fields: typing.Optional[ConfigValues] = None
    credential_id: typing.Optional[str] = None
    sync_immediately: typing.Optional[bool] = None
    white_label_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    ID of the white label integration (set automatically by white label endpoint)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
