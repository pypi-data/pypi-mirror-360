# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .config_values import ConfigValues
from .source_connection_auth_fields import SourceConnectionAuthFields
from .source_connection_status import SourceConnectionStatus
from .sync_job_status import SyncJobStatus


class SourceConnection(UniversalBaseModel):
    """
    Schema for source connection.
    """

    name: str = pydantic.Field()
    """
    Name of the source connection
    """

    description: typing.Optional[str] = None
    config_fields: typing.Optional[ConfigValues] = None
    short_name: str
    white_label_id: typing.Optional[str] = None
    id: str
    sync_id: typing.Optional[str] = None
    organization_id: str
    created_at: dt.datetime
    modified_at: dt.datetime
    connection_id: typing.Optional[str] = None
    collection: str
    created_by_email: typing.Optional[str] = None
    modified_by_email: typing.Optional[str] = None
    auth_fields: typing.Optional[SourceConnectionAuthFields] = None
    status: typing.Optional[SourceConnectionStatus] = None
    latest_sync_job_status: typing.Optional[SyncJobStatus] = None
    latest_sync_job_id: typing.Optional[str] = None
    latest_sync_job_started_at: typing.Optional[dt.datetime] = None
    latest_sync_job_completed_at: typing.Optional[dt.datetime] = None
    latest_sync_job_error: typing.Optional[str] = None
    cron_schedule: typing.Optional[str] = None
    next_scheduled_run: typing.Optional[dt.datetime] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
