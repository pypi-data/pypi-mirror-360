name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    # Run at midnight on each Saturday
    - cron:  '0 0 * * 6'
  workflow_dispatch:
    workflow: "*"

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
      with:
        python-version: '3.9'

    - name: Install dependencies from PyPI
      run: |
        # We're doing an isolated wheel build below, so only install the
        # minimal dependencies needed to build a wheel and run the tests.
        python -m pip install build pytest

    - name: Install Suitesparse and SWIG
      run: |
        sudo apt install libsuitesparse-dev swig

    - name: Build a wheel
      run: |
        python -m build  # builds sdist, and then wheel from sdist
        pip install dist/scikit*.whl

    - name: Run test suite
      run: |
        cd docs
        pytest --pyargs scikits.umfpack

  conda-forge:
    runs-on: ${{ matrix.platform }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment.yml
        cache-environment: true

    - name: Build a wheel
      shell: bash -el {0}
      run: |
        micromamba activate scikit-umfpack-dev
        if [[ ${{ matrix.platform }} == windows-latest ]]; then
          pip install . -v --no-build-isolation -Cbuild-dir=build -Csetup-args=--vsenv -Csetup-args=--native-file=$PWD/tools/ci/windows-condaforge-native.ini
        else
          pip install . -v --no-build-isolation -Cbuild-dir=build
        fi

    - name: Run test suite
      shell: bash -el {0}
      run: |
        micromamba activate scikit-umfpack-dev
        cd docs
        pytest --pyargs scikits.umfpack

    - name: Show meson-log.txt
      if: failure()
      run: |
        cat build/meson-logs/meson-log.txt
