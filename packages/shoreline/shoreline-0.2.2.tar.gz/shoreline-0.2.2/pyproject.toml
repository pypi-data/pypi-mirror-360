[project]
name = "shoreline"
version = "0.2.2"
dynamic = ["readme"]
description = "NATURESCAPES shoreline analysis"
requires-python = ">=3.10"
dependencies = [
    "fastparquet>=2024.11.0",
    "geojson>=3.2.0",
    "geopandas>=1.0.1",
    "matplotlib>=3.10.0",
    "matplotlib-scalebar>=0.9.0",
    "numpy>=2.2.2",
    "scipy>=1.15.1",
    "shapely>=2.0.6",
]
authors = [
    {name = "Stephan HÃ¼gel", email = "shugel@tcd.ie"}
]
license = "BlueOak-1.0.0"
license-files = [
    "LICENSE.md"
]
keywords = ["gis", "shoreline", "analysis", "DSAS"]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
readme = {file = "README.md", content-type = "text/markdown"}

[tool.setuptools.packages.find]
where = ["src"]
[project.urls]
Repository = "https://github.com/urschrei/naturescapes"
Tracker = "https://github.com/urschrei/naturescapes/issues"
[project.optional-dependencies]
test = [
    "pytest>=8.3.4",
]
[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = ["F", "E", "W", "N", "D4", "UP", "PL", "TRY", "PERF", "FURB", "RUF", "S", "DTZ"]
ignore = ["ANN001", "ANN003", "ANN202", "ANN201", "DOC201", "E501", "PLR0904", "PLR0913", "PLR0917", "SLF001", "FIX002", "D400", "D415", "PLR0912", "PLR0915", "TRY003", "PLR2004"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["ALL"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
testpaths = [
    "tests/",
]

[dependency-groups]
dev = [
    "python-lsp-ruff>=2.2.2",
    "python-lsp-server>=1.12.2",
    "ipykernel>=6.29.5",
    "jupyter-lsp>=2.2.5",
    "jupyterlab-git>=0.50.2",
    "jupyterlab-lsp>=5.1.0",
    "rasterio>=1.4.3",
    "xarray>=2025.1.2",
    "cdsapi>=0.7.5",
    "jupyterlab-code-formatter>=3.0.2",
    "jupyterlab==4.4.1",
]
