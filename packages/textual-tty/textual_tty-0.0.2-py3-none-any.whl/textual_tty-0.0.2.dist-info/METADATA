Metadata-Version: 2.4
Name: textual_tty
Version: 0.0.2
Summary: A tty for Textual UIs
Author-email: Gareth Davidson <gaz@bitplane.net>
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: Public Domain
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
License-File: LICENSE.md
Requires-Dist: textual
Requires-Dist: pywinpty ; sys_platform == 'win32'
Requires-Dist: textual-window
Requires-Dist: pre-commit ; extra == "dev"
Requires-Dist: pytest ; extra == "dev"
Requires-Dist: coverage ; extra == "dev"
Requires-Dist: pytest-cov ; extra == "dev"
Requires-Dist: pydoc-markdown ; extra == "dev"
Requires-Dist: build ; extra == "dev"
Requires-Dist: twine ; extra == "dev"
Requires-Dist: ruff ; extra == "dev"
Requires-Dist: mkdocs ; extra == "dev"
Requires-Dist: textual-window ; extra == "dev"
Project-URL: Bug Tracker, https://github.com/bitplane/textual-tty/issues
Project-URL: Homepage, https://bitplane.net/dev/python/textual-tty
Project-URL: Source Code, https://github.com/bitplane/textual-tty
Provides-Extra: dev

# textual-tty

A terminal emulator for Textual apps.

## Demo

```bash
uvx textual-tty
```

## Usage

There's 3 widgets:

1. `textual_tty.Terminal`, a tty that you can use
2. `textual_tty.Program`, launch a program
3. `textual_tty.TerminalProgram`, a terminal emulator in a window

## todo - refactor plan

* Refactor so Terminal is the base class and TextualTerminal is the widget subclass
  * Use reactives to handle updates, cause events etc
* Move process management into the Terminal base class
* Rename Screen to Buffer and have the Terminal handle it
* Have the parser set modes on the Terminal, and write() text to it
* Move the tests to match new design

