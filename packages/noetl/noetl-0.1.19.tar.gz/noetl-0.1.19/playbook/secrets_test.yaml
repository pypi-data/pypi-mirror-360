# NoETL DSL Playbook for testing the secrets task type.
#  set -a; source .env.dev; noetl agent -f playbook/secrets_test.yaml
# noetl playbook --execute --path "workflows/weather/secrets_test" --payload '{"GOOGLE_CLOUD_PROJECT": "xxx"}'
# noetl playbook --execute --path "workflows/examples/secrets_test" --payload '{"GOOGLE_CLOUD_PROJECT": "xxx", "secret_name": "projects/xxx/secrets/postgres-dev-password"}' --port 8080

apiVersion: noetl.io/v1
kind: Playbook
name: secrets_test
path: workflows/examples/secrets_test

workload:
  jobId: "{{ job.uuid }}"
  execution_id: "{{ job.uuid }}"
  gs_project_id: "noetl-demo-19700101"
  secret_name: "test-secret"
  environment: "dev"

workflow:
  - step: start
    desc: "Start Secrets Test Workflow"
    next:
      - step: get_secret_step

  - step: get_secret_step
    desc: "Retrieve a test secret"
    call:
      type: workbook
      name: get_secret_task
    next:
      - step: use_secret_step

  - step: use_secret_step
    desc: "Use the retrieved secret"
    call:
      type: workbook
      name: use_secret_task
      with:
        secret: "{{ get_secret_step.secret_value }}"
    next:
      - step: end

  - step: end
    desc: "End of workflow"

workbook:
  - name: get_secret_task
    type: secrets
    provider: google
    project_id: "noetl-demo-19700101"
    secret_name: "test-secret"

  - name: use_secret_task
    type: python
    with:
      secret: "{{ secret }}"
    code: |
      def main(secret):
          print(f"Retrieved secret: {secret}")

          return {
              "status": "success",
              "message": "Successfully retrieved and used the secret",
              "secret_length": len(secret),
              "environment": "dev"
          }
