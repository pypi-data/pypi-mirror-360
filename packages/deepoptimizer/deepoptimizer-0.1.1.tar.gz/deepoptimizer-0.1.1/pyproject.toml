[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "deepoptimizer"
version = "0.1.1"
description = "AI-powered ML code analysis and optimization suggestions"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache-2.0"}
authors = [
    {name = "Willy Nilsson"},
]
maintainers = [
    {name = "Willy Nilsson"},
]
keywords = ["ai", "optimization", "machine-learning", "deep-learning", "code-analysis", "gemini"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]

dependencies = [
    "click>=8.0.0",
    "google-generativeai>=0.3.0,<0.4.0",
    "rich>=13.0.0",
    "typing-extensions>=4.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.22.0",
]
visualization = [
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
    "plotly>=5.14.0",
]
research = [
    "jupyter>=1.0.0",
    "notebook>=6.5.0",
    "ipywidgets>=8.0.0",
]

[project.urls]
Homepage = "https://github.com/willynilsson/deepoptimizer"
Documentation = "https://github.com/willynilsson/deepoptimizer#readme"
Repository = "https://github.com/willynilsson/deepoptimizer"
Issues = "https://github.com/willynilsson/deepoptimizer/issues"
Changelog = "https://github.com/willynilsson/deepoptimizer/blob/main/CHANGELOG.md"

[project.scripts]
deepoptimizer = "deepoptimizer.cli:main"

[tool.setuptools]
packages = {find = {where = ["."], include = ["deepoptimizer*"]}}

[tool.setuptools.package-data]
deepoptimizer = ["fixtures/*.json"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=deepoptimizer --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["deepoptimizer"]
omit = ["*/tests/*", "*/test_*.py", "deepoptimizer/fixtures/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if False:",
    "if TYPE_CHECKING:",
]