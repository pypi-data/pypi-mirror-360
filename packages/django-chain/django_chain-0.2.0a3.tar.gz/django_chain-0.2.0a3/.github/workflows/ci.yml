name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        django-version: ["4.2"]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install PostgreSQL extensions
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[all,dev]"
          pip install "Django==${{ matrix.django-version }}"

      - name: Run linting and type checking
        run: |
          ruff check .
          ruff format --check .
          mypy django_chain

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
          DJANGO_SETTINGS_MODULE: examples.vanilla_django.settings
        run: |
          pytest --cov --cov-branch --junitxml=junit.xml -o junit_family=legacy

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Check formatting
        run: |
          ruff format --check .

      - name: Format code
        run: |
          ruff format .

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "style: format code with ruff"
          title: "style: format code with ruff"
          body: |
            This PR contains formatting changes made by ruff.

            Changes made:
            - Code formatting
            - Import sorting
            - Line length fixes
          branch: format-code
          base: main
          labels: |
            automated pr
            formatting

  test-docs:
    name: Test documentation links
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -e ".[dev,docs]"

      - run: mkdocs serve &
      - run: WAIT_TIME=0 && until nc -vzw 2 localhost 8000 || [ $WAIT_TIME -eq 5 ]; do sleep $(( WAIT_TIME++ )); done
      - run: if [ $WAIT_TIME == 5 ]; then echo cannot start mkdocs server on http://localhost:8000; exit 1; fi

      - name: Check links
        continue-on-error: true
        run: pylinkvalidate.py -P http://localhost:8000/

      - run: echo "Done"
