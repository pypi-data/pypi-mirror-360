[project]
name = "bipackage"
version = "0.2.5"
description = "Bioinformatics tools package"
authors = [
    {name = "ZK"},
    {name = "MC"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pandas (>=2.2.3,<3.0.0)",
    "biopython (>=1.85,<2.0)",
    "rich-argparse (>=1.7.0,<2.0.0)",
    "argcomplete (>=3.6.2,<4.0.0)",
    "requests (>=2.32.4,<3.0.0)",
]

[tool.poetry.scripts]
bip = "bipackage.cli._entry:main"
bipipe = "bipackage.pipelines._pipentry:main"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.8"
mkdocstrings = {extras = ["python"], version = "^0.29.1"}
mkdocs-material = "^9.6.14"
mkdocs = "^1.6.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# copied from polars
[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "W", # pycodestyle
  "F", # Pyflakes
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "D", # flake8-docstrings
  "D213", # Augment NumPy docstring convention: Multi-line docstring summary should start at the second line
  "D417", # Augment NumPy docstring convention: Missing argument descriptions
  "I", # isort
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
  "PT", # flake8-pytest-style
  "RUF", # Ruff-specific rules
  "PTH", # flake8-use-pathlib
  "FA", # flake8-future-annotations
  "PIE", # flake8-pie
  "TD", # flake8-todos
  "TRY", # tryceratops
  "EM", # flake8-errmsg
  "FBT001", # flake8-boolean-trap
]

ignore = [
  # Line length regulated by formatter
  "E501",
  # pydocstyle: http://www.pydocstyle.org/en/stable/error_codes.html
  "D401", # Relax NumPy docstring convention: First line should be in imperative mood
  # flake8-pytest-style:
  "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
  # flake8-simplify
  "SIM102", # Use a single `if` statement instead of nested `if` statements
  "SIM108", # Use ternary operator
  # ruff
  "RUF005", # unpack-instead-of-concatenating-to-collection-literal
  # pycodestyle
  # TODO: Remove errors below to further improve docstring linting
  # Ordered from most common to least common errors.
  "D105", # Missing docstring in magic method
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  # flake8-todos
  "TD002", # Missing author in TODO
  "TD003", # Missing issue link on the line following this TODO
  # tryceratops
  "TRY003", # Avoid specifying long messages outside the exception class
  # Lints below are turned off because of conflicts with the ruff formatter
  "D206",
  "W191",
  "PTH"
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 99

[tool.ruff]
line-length = 120

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"
