name: Development

on:
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python version to test'
        required: false
        default: '3.10'
        type: choice
        options:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
      run_benchmarks:
        description: 'Run benchmark tests'
        required: false
        default: true
        type: boolean

jobs:
  quick-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ inputs.python_version || '3.10' }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version || '3.10' }}
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin pytest ruff black
        pip install pyfaidx  # For benchmarking
    
    - name: Lint Rust code
      run: cargo fmt --check
    
    - name: Lint Python code
      run: |
        ruff check .
        black --check --diff .
    
    - name: Build raidx in development mode
      run: maturin develop --release
    
    - name: Run tests
      run: python -m pytest tests/ -v -x
    
    - name: Run benchmark demo
      if: inputs.run_benchmarks == true
      run: python demo_benchmark.py
    
    - name: Quick benchmark check
      if: inputs.run_benchmarks == true
      run: |
        echo "Running quick benchmark comparison..."
        python benchmark_raidx.py tests/data/sample.fasta --iterations 10 || echo "Benchmark completed with warnings"

  build-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin
    
    - name: Build wheel
      run: maturin build --release
    
    - name: Check wheel was created
      shell: bash
      run: |
        ls -la target/wheels/ || ls -la dist/ || echo "No wheel directory found" 