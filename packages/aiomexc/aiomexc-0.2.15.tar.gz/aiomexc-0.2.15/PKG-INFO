Metadata-Version: 2.4
Name: aiomexc
Version: 0.2.15
Summary: Asynchronous MEXC API wrapper
Project-URL: Homepage, https://github.com/sheldygg/aiomexc
Project-URL: Documentation, https://github.com/sheldygg/aiomexc
Project-URL: Tracker, https://github.com/sheldygg/aiomexc/issues
Project-URL: Source, https://github.com/sheldygg/aiomexc
Author-email: Sheldy <chikibamtioma@gmail.com>
Keywords: api,asyncio,client,mexc,wrapper
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Distributed Computing
Classifier: Topic :: System :: Networking
Classifier: Typing :: Typed
Requires-Python: >=3.11
Requires-Dist: adaptix~=3.0.0b11
Requires-Dist: aiohttp-socks~=0.10.1
Requires-Dist: aiohttp~=3.11.13
Requires-Dist: certifi>=2023.7.22
Provides-Extra: cli
Requires-Dist: questionary~=2.1.0; extra == 'cli'
Provides-Extra: ws
Requires-Dist: pure-protobuf~=3.1.3; extra == 'ws'
Description-Content-Type: text/markdown

# aiomexc

Pretty and fully asynchronous wrapper for <a href="https://mexcdevelop.github.io/apidocs/spot_v3_en">MEXC API</a>.

## Using with HTTP API
You can start use wrapper very fast.

### Install

```sh
pip install aiomexc
```

You can install with protobuf dependencies to use WebSocket API

```sh
pip install aiomexc[ws]
```

- Import and initialize client.

```python
from aiomexc import MexcClient

client = MexcClient()
```

- Call needed method and get response as dataclass model.

```python
await client.get_ticker_price(symbol="BTCUSDT")
```

- To call methods that requires auth (e.g. open order), you can pass your credentils globally to client instance.

```python
from aiomexc import Credentials

client = MexcClient(credentials=Credentials(access_key="mx0.....", secret_key="......"))
```

Or if you need to make requests from different API credentials you can pass credentials to every method calls.

```python
await client.query_order(credentials=Credentials(access_key="mx0.....", secret_key="......"))
```

## TODO:
 - Support all methods
