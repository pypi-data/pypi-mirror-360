# coding: utf-8

"""
    OQTOPUS Cloud User API

    OQTOPUS Cloud User API. This API is used to interact with the OQTOPUS Cloud service. The API provides endpoints to manage devices, jobs, and results.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: oqtopus-team[at]googlegroups.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobsGetJobsResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'job_id': 'JobsJobId',
        'name': 'str',
        'description': 'str',
        'job_type': 'JobsJobType',
        'status': 'JobsJobStatus',
        'device_id': 'str',
        'shots': 'int',
        'job_info': 'JobsJobInfo',
        'transpiler_info': 'dict(str, object)',
        'simulator_info': 'dict(str, object)',
        'mitigation_info': 'dict(str, object)',
        'execution_time': 'float',
        'submitted_at': 'datetime',
        'ready_at': 'datetime',
        'running_at': 'datetime',
        'ended_at': 'datetime'
    }

    attribute_map = {
        'job_id': 'job_id',
        'name': 'name',
        'description': 'description',
        'job_type': 'job_type',
        'status': 'status',
        'device_id': 'device_id',
        'shots': 'shots',
        'job_info': 'job_info',
        'transpiler_info': 'transpiler_info',
        'simulator_info': 'simulator_info',
        'mitigation_info': 'mitigation_info',
        'execution_time': 'execution_time',
        'submitted_at': 'submitted_at',
        'ready_at': 'ready_at',
        'running_at': 'running_at',
        'ended_at': 'ended_at'
    }

    def __init__(self, job_id=None, name=None, description=None, job_type=None, status=None, device_id=None, shots=None, job_info=None, transpiler_info=None, simulator_info=None, mitigation_info=None, execution_time=None, submitted_at=None, ready_at=None, running_at=None, ended_at=None):  # noqa: E501
        """JobsGetJobsResponse - a model defined in Swagger"""  # noqa: E501
        self._job_id = None
        self._name = None
        self._description = None
        self._job_type = None
        self._status = None
        self._device_id = None
        self._shots = None
        self._job_info = None
        self._transpiler_info = None
        self._simulator_info = None
        self._mitigation_info = None
        self._execution_time = None
        self._submitted_at = None
        self._ready_at = None
        self._running_at = None
        self._ended_at = None
        self.discriminator = None
        if job_id is not None:
            self.job_id = job_id
        if name is not None:
            self.name = name
        if description is not None:
            self.description = description
        if job_type is not None:
            self.job_type = job_type
        if status is not None:
            self.status = status
        if device_id is not None:
            self.device_id = device_id
        if shots is not None:
            self.shots = shots
        if job_info is not None:
            self.job_info = job_info
        if transpiler_info is not None:
            self.transpiler_info = transpiler_info
        if simulator_info is not None:
            self.simulator_info = simulator_info
        if mitigation_info is not None:
            self.mitigation_info = mitigation_info
        if execution_time is not None:
            self.execution_time = execution_time
        if submitted_at is not None:
            self.submitted_at = submitted_at
        if ready_at is not None:
            self.ready_at = ready_at
        if running_at is not None:
            self.running_at = running_at
        if ended_at is not None:
            self.ended_at = ended_at

    @property
    def job_id(self):
        """Gets the job_id of this JobsGetJobsResponse.  # noqa: E501


        :return: The job_id of this JobsGetJobsResponse.  # noqa: E501
        :rtype: JobsJobId
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this JobsGetJobsResponse.


        :param job_id: The job_id of this JobsGetJobsResponse.  # noqa: E501
        :type: JobsJobId
        """

        self._job_id = job_id

    @property
    def name(self):
        """Gets the name of this JobsGetJobsResponse.  # noqa: E501


        :return: The name of this JobsGetJobsResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this JobsGetJobsResponse.


        :param name: The name of this JobsGetJobsResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this JobsGetJobsResponse.  # noqa: E501


        :return: The description of this JobsGetJobsResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this JobsGetJobsResponse.


        :param description: The description of this JobsGetJobsResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def job_type(self):
        """Gets the job_type of this JobsGetJobsResponse.  # noqa: E501


        :return: The job_type of this JobsGetJobsResponse.  # noqa: E501
        :rtype: JobsJobType
        """
        return self._job_type

    @job_type.setter
    def job_type(self, job_type):
        """Sets the job_type of this JobsGetJobsResponse.


        :param job_type: The job_type of this JobsGetJobsResponse.  # noqa: E501
        :type: JobsJobType
        """

        self._job_type = job_type

    @property
    def status(self):
        """Gets the status of this JobsGetJobsResponse.  # noqa: E501


        :return: The status of this JobsGetJobsResponse.  # noqa: E501
        :rtype: JobsJobStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this JobsGetJobsResponse.


        :param status: The status of this JobsGetJobsResponse.  # noqa: E501
        :type: JobsJobStatus
        """

        self._status = status

    @property
    def device_id(self):
        """Gets the device_id of this JobsGetJobsResponse.  # noqa: E501


        :return: The device_id of this JobsGetJobsResponse.  # noqa: E501
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this JobsGetJobsResponse.


        :param device_id: The device_id of this JobsGetJobsResponse.  # noqa: E501
        :type: str
        """

        self._device_id = device_id

    @property
    def shots(self):
        """Gets the shots of this JobsGetJobsResponse.  # noqa: E501


        :return: The shots of this JobsGetJobsResponse.  # noqa: E501
        :rtype: int
        """
        return self._shots

    @shots.setter
    def shots(self, shots):
        """Sets the shots of this JobsGetJobsResponse.


        :param shots: The shots of this JobsGetJobsResponse.  # noqa: E501
        :type: int
        """

        self._shots = shots

    @property
    def job_info(self):
        """Gets the job_info of this JobsGetJobsResponse.  # noqa: E501


        :return: The job_info of this JobsGetJobsResponse.  # noqa: E501
        :rtype: JobsJobInfo
        """
        return self._job_info

    @job_info.setter
    def job_info(self, job_info):
        """Sets the job_info of this JobsGetJobsResponse.


        :param job_info: The job_info of this JobsGetJobsResponse.  # noqa: E501
        :type: JobsJobInfo
        """

        self._job_info = job_info

    @property
    def transpiler_info(self):
        """Gets the transpiler_info of this JobsGetJobsResponse.  # noqa: E501


        :return: The transpiler_info of this JobsGetJobsResponse.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._transpiler_info

    @transpiler_info.setter
    def transpiler_info(self, transpiler_info):
        """Sets the transpiler_info of this JobsGetJobsResponse.


        :param transpiler_info: The transpiler_info of this JobsGetJobsResponse.  # noqa: E501
        :type: dict(str, object)
        """

        self._transpiler_info = transpiler_info

    @property
    def simulator_info(self):
        """Gets the simulator_info of this JobsGetJobsResponse.  # noqa: E501


        :return: The simulator_info of this JobsGetJobsResponse.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._simulator_info

    @simulator_info.setter
    def simulator_info(self, simulator_info):
        """Sets the simulator_info of this JobsGetJobsResponse.


        :param simulator_info: The simulator_info of this JobsGetJobsResponse.  # noqa: E501
        :type: dict(str, object)
        """

        self._simulator_info = simulator_info

    @property
    def mitigation_info(self):
        """Gets the mitigation_info of this JobsGetJobsResponse.  # noqa: E501


        :return: The mitigation_info of this JobsGetJobsResponse.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._mitigation_info

    @mitigation_info.setter
    def mitigation_info(self, mitigation_info):
        """Sets the mitigation_info of this JobsGetJobsResponse.


        :param mitigation_info: The mitigation_info of this JobsGetJobsResponse.  # noqa: E501
        :type: dict(str, object)
        """

        self._mitigation_info = mitigation_info

    @property
    def execution_time(self):
        """Gets the execution_time of this JobsGetJobsResponse.  # noqa: E501


        :return: The execution_time of this JobsGetJobsResponse.  # noqa: E501
        :rtype: float
        """
        return self._execution_time

    @execution_time.setter
    def execution_time(self, execution_time):
        """Sets the execution_time of this JobsGetJobsResponse.


        :param execution_time: The execution_time of this JobsGetJobsResponse.  # noqa: E501
        :type: float
        """

        self._execution_time = execution_time

    @property
    def submitted_at(self):
        """Gets the submitted_at of this JobsGetJobsResponse.  # noqa: E501


        :return: The submitted_at of this JobsGetJobsResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._submitted_at

    @submitted_at.setter
    def submitted_at(self, submitted_at):
        """Sets the submitted_at of this JobsGetJobsResponse.


        :param submitted_at: The submitted_at of this JobsGetJobsResponse.  # noqa: E501
        :type: datetime
        """

        self._submitted_at = submitted_at

    @property
    def ready_at(self):
        """Gets the ready_at of this JobsGetJobsResponse.  # noqa: E501


        :return: The ready_at of this JobsGetJobsResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._ready_at

    @ready_at.setter
    def ready_at(self, ready_at):
        """Sets the ready_at of this JobsGetJobsResponse.


        :param ready_at: The ready_at of this JobsGetJobsResponse.  # noqa: E501
        :type: datetime
        """

        self._ready_at = ready_at

    @property
    def running_at(self):
        """Gets the running_at of this JobsGetJobsResponse.  # noqa: E501


        :return: The running_at of this JobsGetJobsResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._running_at

    @running_at.setter
    def running_at(self, running_at):
        """Sets the running_at of this JobsGetJobsResponse.


        :param running_at: The running_at of this JobsGetJobsResponse.  # noqa: E501
        :type: datetime
        """

        self._running_at = running_at

    @property
    def ended_at(self):
        """Gets the ended_at of this JobsGetJobsResponse.  # noqa: E501


        :return: The ended_at of this JobsGetJobsResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._ended_at

    @ended_at.setter
    def ended_at(self, ended_at):
        """Sets the ended_at of this JobsGetJobsResponse.


        :param ended_at: The ended_at of this JobsGetJobsResponse.  # noqa: E501
        :type: datetime
        """

        self._ended_at = ended_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobsGetJobsResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobsGetJobsResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
