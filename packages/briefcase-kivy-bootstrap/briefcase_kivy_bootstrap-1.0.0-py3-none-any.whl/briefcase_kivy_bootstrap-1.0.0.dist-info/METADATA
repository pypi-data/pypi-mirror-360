Metadata-Version: 2.4
Name: briefcase-kivy-bootstrap
Version: 1.0.0
Summary: Kivy GUI framework bootstrap for Briefcase P4A backend - Tested integration for Android APK builds with Kivy
Author-email: Al pyCino <thealpycino@gmail.com>
Maintainer-email: Al pyCino <thealpycino@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/pyCino/briefcase-kivy-bootstrap
Project-URL: Documentation, https://github.com/pyCino/briefcase-kivy-bootstrap#readme
Project-URL: Repository, https://github.com/pyCino/briefcase-kivy-bootstrap.git
Project-URL: Issues, https://github.com/pyCino/briefcase-kivy-bootstrap/issues
Keywords: briefcase,kivy,gui,bootstrap,mobile,cross-platform
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Software Distribution
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: briefcase>=0.3.23
Requires-Dist: kivy>=2.3.1
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Dynamic: license-file

# Briefcase Kivy Bootstrap

**Kivy GUI framework bootstrap for Briefcase.** 

## Purpose

This plugin adds Kivy as a selectable GUI framework when creating new Briefcase projects. It generates standard Briefcase projects with Kivy applications that can be built for any platform using any Briefcase backend.

## Installation

```bash
pip install git+https://github.com/pyCino/briefcase-kivy-bootstrap.git
```

## Usage

After installation, Kivy will appear as an option in `briefcase new`:

```bash
briefcase new
# Select "Kivy" as GUI framework
```

## Features

- **Integration**: Uses standard Briefcase architecture
- **Cross-Platform**: Works with all Briefcase backends
- **Dependencies**: Automatically adds Kivy requirements
- **Standard Structure**: Generates normal Briefcase projects

## Generated Project Structure

```
myapp/
├── pyproject.toml          # Standard Briefcase configuration
├── src/myapp/
│   └── app.py              # Kivy application code
└── ...                     # Standard Briefcase files
```

## Example Generated App

```python
from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.button import Button

class MyAppApp(App):
    def build(self):
        layout = BoxLayout(orientation='vertical')
        # ... Kivy UI code
        return layout

def main():
    MyAppApp().run()
```

## Building for Different Platforms

The generated Kivy project can be built using any Briefcase backend:

```bash
# Standard Android build
briefcase build android

# P4A Android build (if briefcase-p4a-backend is installed)
briefcase build android p4a

# Desktop builds
briefcase build windows
briefcase build macOS
briefcase build linux
```


## Requirements

- Python 3.8+
- Briefcase 0.3.23+
- Kivy 2.3.1+

## Related Projects

- [Briefcase](https://github.com/beeware/briefcase) - Cross-platform packaging
- [Kivy](https://github.com/kivy/kivy) - Cross-platform GUI framework
- [Briefcase P4A Backend](https://github.com/pyCino/briefcase-p4a-backend) - P4A Android builds

## License

MIT License

---

**Al pyCino** 
