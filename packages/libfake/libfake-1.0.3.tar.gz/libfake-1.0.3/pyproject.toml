# pyproject.toml

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "libfake"
dynamic = ["version"]
description = "A professional library for generating realistic fake names and emails"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Mmdrza", email = "Pymmdrza@gmail.com"}
]
maintainers = [
    {name = "Mmdrza", email = "Pymmdrza@gmail.com"}
]
dependencies = [
    "rich>=10.0.0"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities"
]
keywords = ["fake", "data", "generator", "names", "email", "testing", "mock"]

[project.urls]
Homepage = "https://github.com/libfake/libfake"
Repository = "https://github.com/libfake/libfake"
Issues = "https://github.com/libfake/libfake/issues"
Documentation = "https://github.com/libfake/libfake#readme"

[project.scripts]
libfake = "libfake.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.910"
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.10.0"
]
lint = [
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.910",
    "isort>=5.10.0"
]

[tool.setuptools.dynamic]
version = {attr = "libfake._version.__version__"}

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
libfake = ["data/*.DIC"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=src/libfake --cov-report=html --cov-report=term-missing"
