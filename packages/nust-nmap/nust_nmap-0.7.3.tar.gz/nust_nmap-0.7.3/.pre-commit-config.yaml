repos:
  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        name: Black Python Code Formatter
        description: "The uncompromising Python code formatter"
        language_version: python3.13
        args: [--line-length=88]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort (python)
        args: [--profile=black, --line-length=88]

  # # Linting
  # - repo: https://github.com/pycqa/flake8
  #   rev: 6.0.0
  #   hooks:
  #     - id: flake8
  #       name: Flake8 Linter
  #       args: [
  #         --max-line-length=88,
  #         --extend-ignore=E203,W503,E501,
  #         --max-complexity=10
  #       ]
  #       additional_dependencies:
  #         - flake8-docstrings
  #         - flake8-typing-imports
  #         - flake8-bugbear

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        name: MyPy Static Type Checker
        args: [
          --ignore-missing-imports,
          --no-strict-optional,
          --warn-redundant-casts,
          --warn-unused-ignores,
          --show-error-codes
        ]
      # additional_dependencies: [types-all]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: Bandit Security Linter
        args: [-r, --skip=B101,B601]
        exclude: ^tests/

  # General quality checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        name: Trim Trailing Whitespace
      - id: end-of-file-fixer
        name: Fix End of Files
      - id: check-yaml
        name: Check YAML
      - id: check-added-large-files
        name: Check for Large Files
        args: [--maxkb=500]
      - id: check-case-conflict
        name: Check for Case Conflicts
      - id: check-merge-conflict
        name: Check for Merge Conflicts
      - id: debug-statements
        name: Debug Statements (Python)
      # - id: check-docstring-first
      #   name: Check Docstring is First

  # # Documentation
  # - repo: https://github.com/pycqa/pydocstyle
  #   rev: 6.3.0
  #   hooks:
  #     - id: pydocstyle
  #       name: pydocstyle
  #       args: [--convention=google]

  # Additional Python checks
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.10.1
    hooks:
      - id: pyupgrade
        name: pyupgrade
        args: [--py38-plus]

# Configuration
default_language_version:
  python: python3.13

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
