[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "nust-nmap"
dynamic = ["version"]
description = "Enhanced Python 3.8+ interface to nmap with comprehensive type hints and modern error handling"
readme = "README.rst"
license = {text = "GPL-3.0-or-later"}
authors = [
    {name = "Alexandre Norman", email = "norman@xael.org"},
]
maintainers = [
    {name = "Sameer Ahmed", email = "sameer.cs@proton.me"},
]
keywords = ["nmap", "portscanner", "network", "sysadmin", "security", "vulnerability", "scanning", "type-hints"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Networking",
    "Topic :: System :: Networking :: Firewalls",
    "Topic :: System :: Networking :: Monitoring",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "mypy>=1.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "pre-commit>=2.20.0",
    "isort>=5.10.0",
    "bandit>=1.7.0",
    "pydocstyle>=6.0.0",
]
performance = [
    "lxml>=4.6.0",  # Faster XML parsing if available
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "pytest-timeout>=2.0.0",
    "coverage>=6.0.0",
]

[project.urls]
Documentation = "http://xael.org/pages/python-nmap-en.html"
Repository = "https://bitbucket.org/xael/python-nmap"
"Bug Tracker" = "https://bitbucket.org/xael/python-nmap/issues"
Changelog = "https://bitbucket.org/xael/python-nmap/src/default/CHANGELOG"

[tool.setuptools.packages.find]
include = ["nmap*"]

[tool.setuptools.dynamic]
version = {attr = "nmap.__version__"}

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["nmap"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
