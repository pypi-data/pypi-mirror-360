# based on https://github.com/fpgmaas/cookiecutter-uv/blob/1e083e824879e06003e82ad79e52f45eccde7561/.github/workflows/main.yml
name: Tests

on:
  - push
  - pull_request

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest] # still running into issues w/ installing reboundx on ubuntu via uv, see https://github.com/dtamayo/reboundx/issues/141
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: 0.5.9
          enable-cache: "true"
          cache-suffix: ${{ matrix.python-version }}
          python-version: ${{ matrix.python-version }}

      # don't love this, but the reboundx-tests just broke at some point and this fixed it
      - name: Clean uv cache
        run: uv cache clean
      - name: Remove tox environments
        run: rm -rf .tox

      - name: Run tests # dependencies are installed by tox
        run: |
          uv run tox

      - name: Upload coverage reports to Codecov with GitHub Action on Python 3.13 for macos
        if: ${{ matrix.python-version == '3.13' && matrix.os == 'macos-latest' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: 0.5.9
          enable-cache: "true"
          cache-suffix: "3.12"
          python-version: "3.12"

      - name: Build package
        run: |
          uv build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  # publish:
  #   needs: [tests, build]
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/jorbit
  #   permissions:
  #     id-token: write
  #   steps:
  #     - name: Download all the dists
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-package-distributions
  #         path: dist/
  #     - name: Publish distribution to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
