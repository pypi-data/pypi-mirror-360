Metadata-Version: 2.4
Name: acolytes
Version: 0.1.12
Summary: Local AI Programming Assistant with infinite memory and OpenAI-compatible API
Home-page: https://github.com/unmasSk/acolyte
Author: Bextia
Author-email: Bextia <jatomillo@gmail.com>
License-Expression: BUSL-1.1
Project-URL: Homepage, https://github.com/unmasSk/acolyte
Project-URL: Documentation, https://github.com/unmasSk/acolyte/tree/main/docs
Project-URL: Repository, https://github.com/unmasSk/acolyte
Project-URL: Issues, https://github.com/unmasSk/acolyte/issues
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: fastapi>=0.110.0
Requires-Dist: pydantic>=2.6.0
Requires-Dist: loguru>=0.7.2
Requires-Dist: gitpython>=3.1.40
Requires-Dist: uvicorn[standard]>=0.29.0
Requires-Dist: pyyaml>=6.0.0
Requires-Dist: numpy>=2.3.0
Requires-Dist: transformers>=4.52.4
Requires-Dist: aiohttp>=3.9.0
Requires-Dist: asyncio>=3.4.3
Requires-Dist: psutil>=7.0.0
Requires-Dist: tree-sitter>=0.20.4
Requires-Dist: tree-sitter-languages>=1.10.2
Requires-Dist: torch>=2.7.1
Requires-Dist: click>=8.1.0
Requires-Dist: rich>=13.0.0
Requires-Dist: tqdm>=4.66.0
Requires-Dist: requests>=2.31.0
Requires-Dist: weaviate-client<4.0.0,>=3.26.7
Requires-Dist: setuptools<81.0.0,>=80.9.0
Provides-Extra: dev
Requires-Dist: pytest>=8.4.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.23.0; extra == "dev"
Requires-Dist: pytest-cov>=5.0.0; extra == "dev"
Requires-Dist: mypy>=1.8.0; extra == "dev"
Requires-Dist: types-pyyaml>=6.0.12; extra == "dev"
Requires-Dist: types-tree-sitter>=0.20.1; extra == "dev"
Requires-Dist: types-tree-sitter-languages>=1.10.0; extra == "dev"
Requires-Dist: types-aiofiles>=24.1.0; extra == "dev"
Requires-Dist: types-psutil>=7.0.0; extra == "dev"
Requires-Dist: pytest-timeout>=2.4.0; extra == "dev"
Requires-Dist: ruff>=0.12.0; extra == "dev"
Requires-Dist: types-requests>=2.32.4; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

<p align="center">
  <img src="logo.png" alt="ACOLYTE Logo" width="200">
</p>

# ü§ñ ACOLYTE - Your Local AI Programming Assistant

### üî¥ PRE-ALPHA SOFTWARE - NOT READY FOR USE

[![Python 3.11+](https://img.shields.io/badge/python-3.11+-blue.svg)](https://www.python.org/downloads/)
[![License: BSL](https://img.shields.io/badge/License-BSL-yellow.svg)](LICENSE)
[![Status: Pre-Alpha](https://img.shields.io/badge/Status-Pre--Alpha-red.svg)]()
[![Tests: 93%](https://img.shields.io/badge/Tests-93%25%20coverage-yellow.svg)]()

> ‚ö†Ô∏è **IMPORTANT: Current Project Status - Pre-Alpha**
>
> ACOLYTE is currently in **Pre-Alpha** stage. While the codebase is complete with 3,900 unit tests and 93% coverage, the system has **NEVER been fully tested or deployed**.
>
> üìÑ **See full status in [STATUS.md](STATUS.md)**

---

**ACOLYTE** is not just another coding assistant. It‚Äôs your personal, local **AI engineer** ‚Äî with infinite memory, full project awareness, and deep technical reasoning.

### üß† Why ACOLYTE?

- üîÅ **Remembers everything** ‚Äì forever. Across files, sessions, and tasks.
- üåå **Understands your entire codebase** ‚Äì not just opened files.
- üí≠ **Dreams while you rest** ‚Äì detects bugs, bottlenecks, and refactors on its own.
- üß© **Auto-indexes 31 languages** using real ASTs (Tree-sitter, not regex).
- üõ†Ô∏è **Fixes and suggests** based on Git fatigue, patterns, and historical changes.
- ‚ö° **Optimized for 3B‚Äì7B models** ‚Äì runs locally, even on laptops.
- üîí **100% Private** ‚Äì never connects to external APIs or cloud services.
- üß™ **OpenAI-compatible API** ‚Äì plug it into your tools right now.

**ACOLYTE is like having a full-stack co-developer who never forgets, rarely sleeps (but dreams when it does), and only works for you.**

> You're not using a chatbot. You're deploying an AI engineer in your machine.

---

## üåü Features

- **100% Local & Private** - All data stays on your machine
- **Infinite Memory** - Remembers everything across sessions
- **Project Context** - Understands your entire codebase
- **Git Integration** - Knows file history and changes
- **Dream Analysis** - Deep code analysis during "sleep" cycles
- **Multi-Language** - Supports 31+ programming languages
- **Clean Projects** - Only adds a single `.acolyte.project` file to your repos

## üöÄ Quick Start

> ‚ö†Ô∏è **Note:** ACOLYTE is in PRE-ALPHA stage. The installation process has never been validated in a real environment. Proceed with caution and expect issues.

### Installation

ACOLYTE can be installed as a Python package. For detailed installation instructions, see the **[üì¶ Installation Guide](INSTALL.md)**.

```bash
# Install from PyPI
pip install acolytes  # Note: package name is 'acolytes' (with 's')

# Commands use 'acolyte' (without 's')
acolyte init
acolyte start

# Installation from GitHub (development)
pip install git+https://github.com/unmasSk/acolyte.git
```

> ‚è±Ô∏è **Note**: Installation downloads ~2GB including PyTorch and language models.  
> With a standard connection (100Mbps) this takes 2-5 minutes.

### Why the large size?
ACOLYTE includes state-of-the-art AI models for code understanding.
This is a one-time download - all projects share the same models.

### Usage (Per Project)

```bash
cd /path/to/your/project
acolyte init      # Configure ACOLYTE for this project
acolyte install   # Download models and setup services
acolyte start     # Start ACOLYTE services
```

## üìÅ Architecture

ACOLYTE installs globally to `~/.acolyte/` and keeps your projects clean:

```
Your Project/
‚îú‚îÄ‚îÄ src/                    # Your code
‚îú‚îÄ‚îÄ package.json           # Your config
‚îú‚îÄ‚îÄ .git/                  # Your git
‚îî‚îÄ‚îÄ .acolyte.project       # Only ACOLYTE file (12 bytes)

~/.acolyte/
‚îú‚îÄ‚îÄ src/                   # ACOLYTE source code
‚îú‚îÄ‚îÄ projects/
‚îÇ   ‚îî‚îÄ‚îÄ {project-id}/      # All ACOLYTE data for your project
‚îÇ       ‚îú‚îÄ‚îÄ config.yaml    # Configuration
‚îÇ       ‚îú‚îÄ‚îÄ data/          # SQLite database
‚îÇ       ‚îú‚îÄ‚îÄ infra/         # Docker services
‚îÇ       ‚îî‚îÄ‚îÄ dreams/        # Analysis results
‚îî‚îÄ‚îÄ global/
    ‚îî‚îÄ‚îÄ models/            # Shared Ollama models
```

## üõ†Ô∏è Requirements

- Python 3.11+
- Docker & Docker Compose  
- Git
- 8GB RAM minimum (16GB recommended)
- 20GB free disk space

For detailed system requirements and installation options, see the **[üì¶ Installation Guide](INSTALL.md)**.

## üí¨ Commands

ACOLYTE provides a comprehensive CLI. Here are the main commands:

- `acolyte init` - Initialize ACOLYTE in current project
- `acolyte install` - Install services and models
- `acolyte start` - Start all services
- `acolyte stop` - Stop all services
- `acolyte status` - Check service status
- `acolyte index` - Index project files
- `acolyte logs` - View service logs
- `acolyte projects` - List all projects
- `acolyte clean` - Clean cache and logs

For complete CLI documentation, see **[üìñ CLI Reference](bin/README.md)**.

## üîß Configuration

ACOLYTE stores configuration in `~/.acolyte/projects/{id}/config.yaml`:

```yaml
model:
  name: "qwen2.5-coder:3b" # 0.5b, 1.5b, 3b, 7b, 14b, 32b
  context_size: 32768

ports: # Auto-assigned to avoid conflicts
  weaviate: 42080 # Vector database
  ollama: 42434 # LLM server
  backend: 42000 # ACOLYTE API

dream:
  fatigue_threshold: 7.5 # When to suggest rest
  cycle_duration_minutes: 5
```

> **üîÑ Multi-Project Support**: ACOLYTE automatically assigns different ports for each project. See [Multi-Project Ports](docs/MULTI_PROJECT_PORTS.md) for details.

## ‚ö° Parallel Indexing (v0.1.8+)

ACOLYTE now supports **parallel indexing** for faster processing of large projects:

```yaml
# Enable in your .acolyte configuration
indexing:
  enable_parallel: true    # Activate parallel processing
  concurrent_workers: 4    # Number of workers (based on CPU cores)
```

- **2-4x faster** indexing for projects with >100 files
- Automatic activation when `enable_parallel: true` and >20 files
- Each worker has its own Weaviate client (thread-safe)
- GPU operations limited by semaphore to prevent OOM

For detailed configuration, see [Parallel Indexing Guide](PARALLEL_INDEXING_GUIDE.md).

## üîå API Endpoints

ACOLYTE provides an OpenAI-compatible API:

- `POST /v1/chat/completions` - Chat with ACOLYTE
- `POST /v1/embeddings` - Generate embeddings
- `GET /v1/models` - List available models
- `GET /api/health` - Health check
- `WS /api/ws/chat` - WebSocket chat

## üêõ Troubleshooting

Here are quick solutions to common issues:

### "acolyte: command not found"

```bash
# Linux/Mac
export PATH="$HOME/.local/bin:$PATH"

# Windows - Add Python Scripts to PATH
```

### Port conflicts

Edit `~/.acolyte/projects/{id}/.acolyte` and change port numbers.

### Docker issues

```bash
docker ps  # Check if Docker is running
acolyte logs  # View service logs
```

For more troubleshooting help, see:
- **[üì¶ Installation Guide](INSTALL.md#troubleshooting)**
- **[üîß Troubleshooting Guide](docs/TROUBLESHOOTING.md)** - Common issues and solutions

## üßë‚Äçüíª Development

### Setup Development Environment

```bash
git clone https://github.com/unmasSk/acolyte.git
cd acolyte
poetry install
./scripts/dev/dev.sh test    # Run tests
./scripts/dev/dev.sh lint    # Run linters
```

### Project Structure

```
acolyte/
‚îú‚îÄ‚îÄ src/acolyte/         # Source code
‚îÇ   ‚îú‚îÄ‚îÄ api/            # FastAPI endpoints
‚îÇ   ‚îú‚îÄ‚îÄ core/           # Core infrastructure
‚îÇ   ‚îú‚îÄ‚îÄ services/       # Business logic
‚îÇ   ‚îú‚îÄ‚îÄ rag/            # Search & retrieval
‚îÇ   ‚îú‚îÄ‚îÄ semantic/       # NLP processing
‚îÇ   ‚îî‚îÄ‚îÄ dream/          # Deep analysis
‚îú‚îÄ‚îÄ scripts/            # Installation & utilities
‚îú‚îÄ‚îÄ tests/              # Test suite (93% coverage)
‚îî‚îÄ‚îÄ docs/               # Documentation
```

## üìÑ License

This project is licensed under the Business Source License (BSL). See [LICENSE](LICENSE) for details.

## ü§ù Contributing

Contributions are welcome! Please read our [Contributing Guide](CONTRIBUTING.md) first.

## üôè Acknowledgments

- Built with [Ollama](https://ollama.ai) and [Qwen2.5-Coder](https://github.com/QwenLM/Qwen2.5-Coder)
- Vector search powered by [Weaviate](https://weaviate.io)
- Syntax analysis using [Tree-sitter](https://tree-sitter.github.io)

---

**Remember**: ACOLYTE is 100% local and private. Your code never leaves your machine.

**üî¥ IMPORTANT**: This is a PRE-ALPHA release. The system is untested and likely has significant issues. It is NOT ready for any real use. We need brave testers to help validate and fix the installation and deployment process.

**üî¥ IMPORTANT**: We've removed all project documentation temporarily to restructure it. It will be uploaded once it's ready ‚Äî and yes, there's a lot of it.
