# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.smart_contract_platform
from circle.web3.smart_contract_platform.models.event_logs_data import EventLogsData  # noqa: E501
from circle.web3.smart_contract_platform.rest import ApiException

class TestEventLogsData(unittest.TestCase):
    """EventLogsData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test EventLogsData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventLogsData`
        """
        model = circle.web3.smart_contract_platform.models.event_logs_data.EventLogsData()  # noqa: E501
        if include_optional :
            return EventLogsData(
                event_logs = [{"blockHash":"0xabc123def4567890","blockHeight":123456,"blockchain":"ETH","contractAddress":"0x6bc50ff08414717f000431558c0b585332c2a53d","data":"0xabcdef1234567890","eventSignature":"Transfer(address,address,uint256)","eventSignatureHash":"0xd3d3dd4b1fd3e53f94deb24e763485b4c925345c5abfa9ad529c67aa55a3b784","firstConfirmDate":"2023-01-01T12:00:00Z","id":"b56ee4eb-7f48-4ce6-ba55-b71d63a082d4","logIndex":"1","topics":["0xd3d3dd4b1fd3e53f94deb24e763485b4c925345c5abfa9ad529c67aa55a3b784"],"txHash":"0xe787956fa895b9debe3c43ec5db01938cf6dc4933e7470cdda7cbe492f530d17","userOpHash":"0x4ceda08efcbed700caf0d47ddd5ecc9b86fca94b9aa4e349bc16837a643fb498"}]
            )
        else :
            return EventLogsData(
                event_logs = [{"blockHash":"0xabc123def4567890","blockHeight":123456,"blockchain":"ETH","contractAddress":"0x6bc50ff08414717f000431558c0b585332c2a53d","data":"0xabcdef1234567890","eventSignature":"Transfer(address,address,uint256)","eventSignatureHash":"0xd3d3dd4b1fd3e53f94deb24e763485b4c925345c5abfa9ad529c67aa55a3b784","firstConfirmDate":"2023-01-01T12:00:00Z","id":"b56ee4eb-7f48-4ce6-ba55-b71d63a082d4","logIndex":"1","topics":["0xd3d3dd4b1fd3e53f94deb24e763485b4c925345c5abfa9ad529c67aa55a3b784"],"txHash":"0xe787956fa895b9debe3c43ec5db01938cf6dc4933e7470cdda7cbe492f530d17","userOpHash":"0x4ceda08efcbed700caf0d47ddd5ecc9b86fca94b9aa4e349bc16837a643fb498"}],
        )
        """

    def testEventLogsData(self):
        """Test EventLogsData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
