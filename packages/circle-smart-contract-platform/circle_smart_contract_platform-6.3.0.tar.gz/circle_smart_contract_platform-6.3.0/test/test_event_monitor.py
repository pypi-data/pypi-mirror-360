# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.smart_contract_platform
from circle.web3.smart_contract_platform.models.event_monitor import EventMonitor  # noqa: E501
from circle.web3.smart_contract_platform.rest import ApiException

class TestEventMonitor(unittest.TestCase):
    """EventMonitor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test EventMonitor
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventMonitor`
        """
        model = circle.web3.smart_contract_platform.models.event_monitor.EventMonitor()  # noqa: E501
        if include_optional :
            return EventMonitor(
                id = 'e3c998a5-bdf1-4f3e-812f-24da238c0fff', 
                blockchain = 'MATIC-AMOY', 
                contract_address = '0x1e124d7384cd34448ea5907bd0052a79355ab5eb', 
                event_signature = 'Transfer(address indexed from, address indexed to, uint256 value)', 
                event_signature_hash = '0xd3d3dd4b1fd3e53f94deb24e763485b4c925345c5abfa9ad529c67aa55a3b784', 
                is_enabled = True
            )
        else :
            return EventMonitor(
                id = 'e3c998a5-bdf1-4f3e-812f-24da238c0fff',
                blockchain = 'MATIC-AMOY',
                contract_address = '0x1e124d7384cd34448ea5907bd0052a79355ab5eb',
                event_signature = 'Transfer(address indexed from, address indexed to, uint256 value)',
                event_signature_hash = '0xd3d3dd4b1fd3e53f94deb24e763485b4c925345c5abfa9ad529c67aa55a3b784',
                is_enabled = True,
        )
        """

    def testEventMonitor(self):
        """Test EventMonitor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
