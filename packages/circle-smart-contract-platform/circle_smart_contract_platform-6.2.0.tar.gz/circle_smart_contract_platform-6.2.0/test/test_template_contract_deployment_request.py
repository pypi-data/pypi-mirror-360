# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.smart_contract_platform
from circle.web3.smart_contract_platform.models.template_contract_deployment_request import TemplateContractDeploymentRequest  # noqa: E501
from circle.web3.smart_contract_platform.rest import ApiException

class TestTemplateContractDeploymentRequest(unittest.TestCase):
    """TemplateContractDeploymentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TemplateContractDeploymentRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplateContractDeploymentRequest`
        """
        model = circle.web3.smart_contract_platform.models.template_contract_deployment_request.TemplateContractDeploymentRequest()  # noqa: E501
        if include_optional :
            return TemplateContractDeploymentRequest(
                idempotency_key = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11', 
                blockchain = 'MATIC-AMOY', 
                wallet_id = 'c4d1da72-111e-4d52-bdbf-2e74a2d803d5', 
                name = 'My Template Contract', 
                description = 'My first template contract deployment!', 
                entity_secret_ciphertext = '[B@23a5818e', 
                template_parameters = {
                    'key' : ''
                    }, 
                fee_level = 'MEDIUM', 
                gas_limit = '21000', 
                gas_price = '', 
                max_fee = '5.935224468', 
                priority_fee = '1.022783914', 
                ref_id = 'd620d523-b5ab-4541-94b0-efe4f4c825c8'
            )
        else :
            return TemplateContractDeploymentRequest(
                idempotency_key = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
                blockchain = 'MATIC-AMOY',
                wallet_id = 'c4d1da72-111e-4d52-bdbf-2e74a2d803d5',
                name = 'My Template Contract',
                entity_secret_ciphertext = '[B@23a5818e',
        )
        """

    def testTemplateContractDeploymentRequest(self):
        """Test TemplateContractDeploymentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
