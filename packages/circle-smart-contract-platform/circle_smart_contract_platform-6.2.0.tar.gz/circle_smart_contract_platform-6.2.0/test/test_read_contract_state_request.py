# coding: utf-8

"""
    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import circle.web3.smart_contract_platform
from circle.web3.smart_contract_platform.models.read_contract_state_request import ReadContractStateRequest  # noqa: E501
from circle.web3.smart_contract_platform.rest import ApiException

class TestReadContractStateRequest(unittest.TestCase):
    """ReadContractStateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ReadContractStateRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReadContractStateRequest`
        """
        model = circle.web3.smart_contract_platform.models.read_contract_state_request.ReadContractStateRequest()  # noqa: E501
        if include_optional :
            return ReadContractStateRequest(
                abi_function_signature = 'burn(uint256)', 
                abi_parameters = ["100","1"], 
                abi_json = '[{"inputs": [],"stateMutability": "nonpayable","type": "constructor"},...', 
                address = '0x1e124d7384cd34448ea5907bd0052a79355ab5eb', 
                blockchain = 'MATIC-AMOY', 
                call_data = '', 
                from_address = ''
            )
        else :
            return ReadContractStateRequest(
                address = '0x1e124d7384cd34448ea5907bd0052a79355ab5eb',
                blockchain = 'MATIC-AMOY',
        )
        """

    def testReadContractStateRequest(self):
        """Test ReadContractStateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
