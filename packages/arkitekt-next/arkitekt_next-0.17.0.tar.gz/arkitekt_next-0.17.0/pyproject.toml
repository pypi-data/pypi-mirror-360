[project]
name = "arkitekt-next"
version = "0.17.0"
description = "client for the arkitekt_next platform"
authors = [{ name = "jhnnsrs", email = "jhnnsrs@gmail.com" }]
requires-python = ">=3.11,<4"
readme = "README.md"
license = "MIT"
dependencies = [
    "fakts-next>=2",
    "dokker>=2.1.2",
    "koil>=2.0.4",
    "rath>=3.4",
    "click>=8.2.0",
    "rekuest-next>=0.11.1",
    "kabinet>=0.5",
    "semver>=3.0.4",
    "rich-click>=1.8.8",
    "watchfiles>=1.0.5",
]

[project.optional-dependencies]
cli = [
    "turms>=0.9.0",
]
alpaka = ["alpaka>=0.2.0"]
kraph = ["kraph>=0.2.0"]
mikro = ["mikro-next>=0.6.0"]
kabinet = ["kabinet>=0.4.0"]
elektro = ["elektro>=0.5.0"]
fluss = ["fluss-next>=0.2.0"]
reaktion = ["reaktion-next>=0.2.0"]
lovekit = ["lovekit>=0.2.0"]
unlok = ["unlok-next>=1.1.1"]
all = [
    "rich-click>=1.6.1",
    "watchfiles>=0.18.1",
    "turms>=0.9",
    "semver>=3.0.1",
    "reaktion-next>=0.2.0",
    "rekuest-next>=0.7",
    "mikro-next>=0.6",
    "kabinet>=0.2.0",
    "fluss-next>=0.2.0",
    "unlok-next>=1.1.1",
]
extended = [
    "kraph>=0.2.0",
    "alpaka>=0.2.0"
]
blok = [
    "blok>=0.1.0",
]

[project.scripts]
arkitekt-next = "arkitekt_next.cli.main:cli"

[tool.uv]
dev-dependencies = [
    "autoflake>=1.7.7,<2",
    "pytest>=7.2.0,<8",
    "pytest-asyncio>=0.20.2,<0.21",
    "pytest-cov>=4.0.0,<5",
    "pytest-aiohttp>=1.0.4,<2",
    "rich-click>=1.8",
    "mikro-next>=0.3.1",
    "python-semantic-release>=9.21.1",
    "qtpy>=2.4.3",
]

[tool.hatch.build.targets.sdist]
include = ["arkitekt_next"]

[tool.hatch.build.targets.wheel]
include = ["arkitekt_next"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
exclude = ["venv/"]
ignore_missing_imports = true

[tool.ruff]
extend-select = ["ANN", "D1"]
extend-ignore = ["ANN101", "ANN002", "ANN003"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

[tool.pytest.ini_options]
qt_api = "pyqt5"
markers = [
    "integration: marks tests that require a running server",
    "qt: marks tests that require a running qt application",
    "cli: marks tests that require a running cli",
]

[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["arkitekt_next"]

[tool.pydoc-markdown.renderer]
type = "docusaurus"
docs_base_path = "website/docs"


[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
upload_to_pypi = true
branch = "main"
build_command = "uv build"

