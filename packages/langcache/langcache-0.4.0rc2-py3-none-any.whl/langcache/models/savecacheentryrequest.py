"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from langcache.types import BaseModel
import pydantic
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SaveCacheEntryRequestTypedDict(TypedDict):
    r"""DTO representing a save cache entry request"""

    prompt: str
    r"""The entry's prompt"""
    response: str
    r"""The entry's response"""
    attributes: NotRequired[Dict[str, str]]
    r"""The entry's attributes"""
    ttl_millis: NotRequired[int]
    r"""The entry's time-to-live, in milliseconds"""


class SaveCacheEntryRequest(BaseModel):
    r"""DTO representing a save cache entry request"""

    prompt: str
    r"""The entry's prompt"""

    response: str
    r"""The entry's response"""

    attributes: Optional[Dict[str, str]] = None
    r"""The entry's attributes"""

    ttl_millis: Annotated[Optional[int], pydantic.Field(alias="ttlMillis")] = None
    r"""The entry's time-to-live, in milliseconds"""
