[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ragtrace-lite"
version = "1.0.7"
description = "Lightweight RAG evaluation framework with Korean language support, BGE-M3 embeddings, and HCX-005/Gemini LLMs"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache-2.0"}
authors = [
    {name = "RAGTrace Lite Contributors", email = "ntts9990@gmail.com"}
]
maintainers = [
    {name = "RAGTrace Lite Contributors", email = "ntts9990@gmail.com"}
]
keywords = ["rag", "evaluation", "llm", "ai", "ragas", "korean", "hcx", "gemini"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "ragas>=0.1.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "datasets>=2.14.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.65.0",
    "tenacity>=8.0.0",
    "openpyxl>=3.1.0",
    "jinja2>=3.1.6",
]

[project.optional-dependencies]
llm = [
    "google-generativeai>=0.3.0",
    "langchain>=0.0.300",
    "langchain-community>=0.0.10",
]
embeddings = [
    "sentence-transformers>=2.2.2",
    "torch>=2.0.0",
    "huggingface-hub>=0.17.0",
    "langchain-huggingface>=0.0.1",
]
enhanced = [
    "plotly>=5.17.0",
    "psutil>=5.9.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.2.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "isort>=5.10.0",
]
all = [
    "ragtrace-lite[llm,embeddings,enhanced]",
]

[project.scripts]
ragtrace-lite = "ragtrace_lite.cli:main"
ragtrace-lite-enhanced = "ragtrace_lite.cli:main_enhanced"

[project.urls]
Homepage = "https://github.com/ntts9990/ragtrace-lite"
Documentation = "https://ragtrace-lite.readthedocs.io"
Repository = "https://github.com/ntts9990/ragtrace-lite"
Issues = "https://github.com/ntts9990/ragtrace-lite/issues"
Changelog = "https://github.com/ntts9990/ragtrace-lite/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]
include = ["ragtrace_lite*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
ragtrace_lite = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=ragtrace_lite --cov-report=term-missing"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
