[project]
name = "mcp-server-port"
version = "0.2.21"
authors = [
  { name = "Matan Grady", email = "matan.grady@getport.io" }
]
description = "A Model Context Protocol (MCP) server for Port.io"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "httpx>=0.28.1",
    "mcp[cli]>=1.6.0",
    "python-dotenv>=1.0.1",
    "pyport (>=0.3.3,<=0.3.3)",
    "loguru>=0.7.2",
    "pydantic (>=2.11.3,<3.0.0)"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
mcp-server-port = "src.cli:cli_main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build]
include = [
    "src/**/*.py",
]
[tool.poetry]
name = "mcp-server-port"
version = "0.2.21"
description = "Port's MCP server"
packages = [
    { include = "src" }
]


[tool.uv]
dev-dependencies = [
    "pyright>=1.1.389",
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "ruff>=0.7.3",
    "mypy>=1.8.0",
    "black>=23.12.0",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
    "build>=1.0.3",
    "twine>=4.0.2",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

[tool.pytest.ini_options]
testpaths = ["tests", "src/tests"]
python_files = "test_*.py"
asyncio_mode = "auto"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
ruff = "^0.7.3"
mypy = "^1.8.0"
black = "^23.12.0"
isort = "^5.12.0"
pre-commit = "^3.5.0"
build = "^1.0.3"
twine = "^4.0.2"
pyright = "^1.1.389"